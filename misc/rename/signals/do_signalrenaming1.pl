#!/usr/bin/perl
#
# Execute renamings in a mapping.txt file (usually generated by suggest_identrenaming)
#
# Usage: do_identrenaming1 listfile mappingfile (source|filename|everywhere)
#

$verbose = 1;

my $argnum = $#ARGV + 1;
if ($argnum < 2) {
    print STDERR "usage: do_signalrenaming listfile mappingfile\n";
    exit(1);
}

$listfile = $ARGV[0];
$mappingfile = $ARGV[1];

# parse listfile
print "reading $listfile...\n" if ($verbose);
$listfilecontents = readfile($listfile);
$listfilecontents =~ s|^\s*(.*?)\s*$|push(@fnames,$1);""|gme;

# parse mappingfile
print "reading $mappingfile...\n" if ($verbose);
$mapping = readfile($mappingfile);
$mapping =~ s|^\s*(.*?)\s*->\s*(.*?)\s*$|$map{$1}=$2;""|gme;

# debug: print map
for $i (sort(keys(%map))) {print "$i -> $map{$i}\n";}

# do it
foreach $fname (@fnames)
{
    print "renaming in $fname...\n" if ($verbose);
    $txt = readfile($fname);
    writefile("$fname.bak", $txt);

    if ($fname =~ m|\.ned$|) {
        # replace in ned file
        for $i (sort(keys(%map))) {
            if ($i =~ m/\"/) {
                my $ii = substr($i, 1, -1);
                my $rr = substr($map{$i}, 1, -1);
                $txt =~ s|\b$ii\b|$rr|gs;
            }
        }
    }
    else {
        # replace in the code
        for $i (sort(keys(%map))) {
            if ($i =~ m/\"/) {
                $txt =~ s|$i|$map{$i}|gs;
            }
            else {
                $txt =~ s|\b$i\b|$map{$i}|gs;
            }
        }
    }

    writefile($fname, $txt);
}

print "done -- backups saved as .bak\n" if ($verbose);

sub readfile
{
    my $fname = shift;
    my $content;
    open FILE, "$fname" || die "cannot open $fname";
    read(FILE, $content, 1000000);
    close FILE;
    $content;
}

sub writefile
{
    my $fname = shift;
    my $content = shift;
    open FILE, ">$fname" || die "cannot open $fname for write";
    print FILE $content;
    close FILE;
}

