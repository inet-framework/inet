[Config WiredNetworkConfigurationExample]
#!WiredNetworkConfigurationExample
network = WiredNetworkExample
*.numClients = 10 # number of clients in network
*.client[*].numApps = 1 # number of applications on clients
*.client[*].app[0].typename = "TcpSessionApp" # client application type
*.client[*].app[0].connectAddress = "server" # destination address
*.client[*].app[0].connectPort = 1000 # destination port
*.client[*].app[0].sendBytes = 1MB # amount of data to send
*.server.numApps = 1 # number of applications on server
*.server.app[0].typename = "TcpEchoApp" # server application type
*.server.app[0].localPort = 1000 # TCP server listen port
#!End

[Config WirelessNetworkConfigurationExample]
#!WirelessNetworkConfigurationExample
network = WirelessNetworkExample
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[0].destAddresses = "host2"
*.host1.app[0].destPort = 1000
*.host1.app[0].messageLength = 100Byte
*.host1.app[0].sendInterval = 100ms
*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[0].localPort = 1000
**.arp.typename = "GlobalArp"
**.netmaskRoutes = ""
#!End

[Config MobileAdhocNetworkConfigurationExample]
#!MobileAdhocNetworkConfigurationExample
network = MobileAdhocNetworkExample
*.numHosts = 10 # number of hosts in the MANET
*.host[*].mobility.typename = "MassMobility" # stochastic mobility model
*.host[*].mobility.initFromDisplayString = false # ignore display string
*.host[*].mobility.changeInterval = truncnormal(2s, 0.5s) # between turns
*.host[*].mobility.changeAngleBy = normal(0deg, 30deg) # random turn
*.host[*].mobility.speed = truncnormal(20mps, 8mps) # random speed
*.host[*].numApps = 1 # number of applications on hosts
*.host[*].app[0].typename = "PingApp" # application type for all hosts
*.host[*].app[0].destAddr = "host[0]" # ping destination
*.host[*].app[0].startTime = uniform(1s,5s) # to avoid synchronization
*.host[*].app[0].printPing = true # print usual ping results to stdout
#!End

[Config DualStackExample]
network = WirelessNetworkExample
#!DualStackExample
*.host[*].hasIpv4 = true # enable IPv4 protocol
*.host[*].hasIpv6 = true # enable IPv6 protocol
*.host[*].numApps = 2 # number of applications on hosts
*.host[*].app[*].typename = "PingApp" # type for both applications
*.host[*].app[0].destAddr = "host[0](ipv4)" # uses IPv4 detination address
*.host[*].app[1].destAddr = "host[0](ipv6)" # uses IPv6 detination address
#!End

[Config MultipleWirelessInterfacesExample]
network = WirelessNetworkExample
#!MultipleWirelessInterfacesExample
*.host[*].numWlanInterfaces = 2 # number of wireless network interfaces
*.host[*].wlan[0].agent.default_ssid = "alpha" # connects to alpha network
*.host[*].wlan[1].agent.default_ssid = "bravo" # connects to bravo network
#!End

[Config ForwardingExample]
network = WirelessNetworkExample
#!ForwardingExample
*.host[*].forwarding = true
#!End

[Config RadioMediumConfigurationExample]
network = WirelessNetworkExample
#!PropagationModelConfigurationExample
*.radioMedium.propagation.typename = "ConstantSpeedPropagation" # module type
*.radioMedium.propagation.propagationSpeed = 299792458 mps # speed of light
#!End
#!PathLossConfigurationExample
*.radioMedium.pathLoss.typename = "LogNormalShadowing" # module type
*.radioMedium.pathLoss.sigma = 1.1 # override default value of 1
#!End
#!ObstacleLossModelConfigurationExample
*.radioMedium.obstacleLoss.typename = "DielectricObstacleLoss" # module type
#!End
#!BackgroundNoiseModelConfigurationExample
*.radioMedium.backgroundNoise.typename = "IsotropicScalarBackgroundNoise" # type
*.radioMedium.backgroundNoise.power = -110 dBm # isotropic scalar noise power
#!End
#!AnalogModelConfigurationExample
*.radioMedium.analogModel.typename = "ScalarAnalogModel" # module type
#!End
#!NeighborCacheModelConfigurationExample
**.radioMedium.neighborCache.typename = "QuadTreeNeighborCache" # module type
**.radioMedium.neighborCache.maxNumOfPointsPerQuadrant = 4 # affects tree depth
#!End

[Config PhsicalEnvironmentConfigurationExample]
network = WirelessNetworkExample
#!PhysicalObjectsConfigurationExample
*.physicalEnvironment.config = xmldoc("objects.xml") # load physical objects
#!End
#!GeographicCoordinateSystemConfigurationExample
*.physicalEnvironment.coordinateSystemModule = "coordinateSystem" # reference
*.*.mobility.coordinateSystemModule = "coordinateSystem" # reference
*.coordinateSystem.playgroundLongitude = -71.070421deg # playground origin
*.coordinateSystem.playgroundLatitude = 42.357824deg # playground origin
*.coordinateSystem.playgroundHeading = 68.3deg # playground orientation
#!End

[Config PowerConsumptionConfigurationExample]
network = WirelessNetworkExample
#!EnergyConsumerConfigurationExample
*.host[*].wlan[*].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
*.host[*].wlan[*].radio.energyConsumer.sleepPowerConsumption = 0.1mW
*.host[*].wlan[*].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host[*].wlan[*].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host[*].wlan[*].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host[*].wlan[*].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.host[*].wlan[*].radio.energyConsumer. \
   transmitterTransmittingPowerConsumption = 100mW # continue previous line
#!End
#!EnergyGeneratorConfigurationExample
*.host[*].energyGenerator.typename = "AlternatingEpEnergyGenerator"
*.host[*].energyGenerator.energySinkModule = "^.energyStorage" # module ref.
*.host[*].energyGenerator.powerGeneration = 1mW
*.host[*].energyGenerator.sleepInterval = exponential(10s) # random intervals
*.host[*].energyGenerator.generationInterval = exponential(10s)
#!End
#!EnergyStorageConfigurationExample
*.host[*].energyStorage.typename = "SimpleEpEnergyStorage"
*.host[*].energyStorage.nominalCapacity = 0.05J # maximum capacity
*.host[*].energyStorage.initialCapacity = uniform(0J, this.nominalCapacity)
#!End
#!EnergyManagementConfigurationExample
*.host[*].energyManagement.typename = "SimpleEpEnergyManagement"
*.host[*].energyManagement.nodeStartCapacity = 0.025J # start threshold
*.host[*].energyManagement.nodeShutdownCapacity = 0J # shutdown threshold
#!End
