Markov-Chain-Based Classifier
=============================

The :ned:`MarkovClassifier` module uses a Markov process to classify packets.
The current state of the Markov process selects the output gate, a configurable
transition matrix determines the probabilities of state change, and the configured
wait intervals determine the time between state changes.

.. In this step, packets are at random intervals collected by two active sinks
   (:ned:`ActivePacketSink`). One sink collects packets with a slower rate while the other
   sink uses a faster rate. The two packet sinks are combined using a Markov
   chain (:ned:`MarkovClassifier`) with random transition matrix and random wait intervals. The packets are
   provided by a single passive source (:ned:`PassivePacketSource`).

.. In this example network, packets are generated by a passive packet source (:ned:`PassivePacketSource`).
   The packet source is connected to a classifier (:ned:`MarkovClassifier`).
   Packets are popped from the classifier by two active packet sinks (:ned:`ActivePacketSink`).
   The classifier

In this example network, packets are generated by an active packet source (:ned:`ActivePacketSource`).
The packet source pushes packets into a classifier (:ned:`MarkovClassifier`).
The classifier is connected to two passive packet sinks (:ned:`PassivePacketSink`).
The classifier pushes packets into one of the packet sinks based on the current state of
the Markov process.

.. figure:: media/MarkovClassifier.png
   :width: 80%
   :align: center

.. literalinclude:: ../QueueingTutorial.ned
   :start-at: network MarkovClassifierTutorialStep
   :end-before: //----
   :language: ned

.. literalinclude:: ../omnetpp.ini
   :start-at: Config MarkovClassifier
   :end-at: waitIntervals
   :language: ini
