name: "Test: unit"

on:
  push:
    branches:
      - master
  workflow_dispatch:
    # nothing

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: add debug/release mode when it becomes the supported
        # MODEs or executables based on command line arguments or envvars
        mode: ["debug"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          repository: omnetpp/omnetpp
          path: omnetpp
          ref: omnetpp-6.x
      - uses: actions/checkout@v4
        with:
          path: inet
      - run: mkdir -p /home/runner/work/ccache
      - uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/ccache
          key: native-${{ matrix.mode }}-ccache-${{ github.run_id }}
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          restore-keys: native-${{ matrix.mode }}-ccache
      - name: Run unit tests
        env:
          MODE: ${{ matrix.mode }}
        run: |
          echo "::group::Installing packages"
          sudo apt update
          sudo apt install -y --no-install-recommends git wget curl ca-certificates \
            make ccache clang lld gdb bison flex perl doxygen graphviz libxml2-dev zlib1g-dev \
            libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libz3-dev libopenscenegraph-dev python3
          echo "::endgroup::"

          source $GITHUB_WORKSPACE/inet/_scripts/github/build-omnetpp.sh

          echo "::group::Installing pip"
          sudo apt install -y python3-pip
          echo "::endgroup::"

          echo "::group::Installing Python packages"
          python3 -m venv $GITHUB_WORKSPACE/venv
          source $GITHUB_WORKSPACE/venv/bin/activate
          python3 -m pip install --upgrade matplotlib numpy pandas seaborn scipy ipython posix-ipc cppyy sewar dask distributed optimparallel requests
          echo "::endgroup::"

          source $GITHUB_WORKSPACE/inet/_scripts/github/build-inet.sh

          echo "::group::Running unit tests"
          inet_run_unit_tests
          echo "::endgroup::"
