%description:

Checks if module interface lookup works when the application, Tcp, Ipv4NetworkLayer, EthernetEncapsulation, and EthernetInterface modules are connected without MessageDispatcher modules.

%file: test.ned

import inet.applications.tcpapp.TcpClientApp;
import inet.linklayer.ethernet.basic.EthernetEncapsulation;
import inet.linklayer.ethernet.basic.EthernetInterface;
import inet.networklayer.ipv4.Ipv4NetworkLayer;
import inet.networklayer.common.InterfaceTable;
import inet.transportlayer.tcp.Tcp;

network TestNetwork
{
    parameters:
        *.interfaceTableModule = absPath(".interfaceTable");
        @networkNode;
    gates:
        inout phys;
    submodules:
        interfaceTable: InterfaceTable;
        app: TcpClientApp;
        tcp: Tcp;
        ip: Ipv4NetworkLayer;
        ethernet: EthernetEncapsulation;
        interface: EthernetInterface;
    connections:
        app.socketOut --> tcp.appIn;
        app.socketIn <-- tcp.appOut;
        tcp.ipOut --> ip.transportIn;
        tcp.ipIn <-- ip.transportOut;
        ip.ifOut --> ethernet.upperLayerIn;
        ip.ifIn <-- ethernet.upperLayerOut;
        ethernet.lowerLayerOut --> interface.upperLayerIn;
        ethernet.lowerLayerIn <-- interface.upperLayerOut;
        interface.phys <--> phys;
}

%inifile: omnetpp.ini

[General]
network = TestNetwork
ned-path = .;../../../../src
sim-time-limit = 0s

cmdenv-log-prefix = "%>"

*.app.source.packetLength = 1000B
*.app.source.productionInterval = 1s
*.app.io.connectAddress = "127.0.0.1"
*.app.io.connectPort = 1000

%#--------------------------------------------------------------------------------------------------------------
%postrun-command: grep "undisposed object:" test.out > test_undisposed.out || true
%not-contains: test_undisposed.out
undisposed object: (
%#--------------------------------------------------------------------------------------------------------------
