%description:
Testing OSPF routing
    Backbone only with n routers
    UDP communications through entire backbone
%#--------------------------------------------------------------------------------------------------------------
%file: test.ned

import inet.linklayer.ethernet.EtherHub;
import inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator;
import inet.node.inet.StandardHost;
import inet.node.ospfv2.OspfRouter;
import inet.common.misc.ThruputMeteringChannel;
import inet.common.scenario.ScenarioManager;


network Test1
{
    parameters:
        int numIRouters = default(0);
        @display("p=10,10;b=712,152");
    types:
        channel C extends ThruputMeteringChannel
        {
            delay = 0.1us;
            datarate = 100Mbps;
            thruputDisplayFormat = "#N";
        }
    submodules:
        scenarioManager: ScenarioManager;
        H1: StandardHost {
            parameters:
                @display("p=56,92;i=device/laptop");
            gates:
                ethg[1];
        }
        N1: EtherHub {
            parameters:
                @display("p=184,182");
            gates:
                ethg[2];
        }
        R1: OspfRouter {
            parameters:
                @display("p=296,92");
            gates:
                ethg[2];
        }
        RI[numIRouters]: OspfRouter {
            gates:
                ethg[2];
        }
        R2: OspfRouter {
            parameters:
                @display("p=416,92");
            gates:
                ethg[2];
        }
        N2: EtherHub {
            parameters:
                @display("p=532,182");
            gates:
                ethg[2];
        }
        H2: StandardHost {
            parameters:
                @display("p=660,92;i=device/laptop");
            gates:
                ethg[1];
        }
        configurator: Ipv4NetworkConfigurator {
            parameters:
                config = xml("<config>"+
                            "<interface among='H1 R1' address='192.168.1.x' netmask='255.255.255.0' />"+
                            "<interface among='H2 R2' address='192.168.2.x' netmask='255.255.255.0' />"+
                            "<interface among='R1 RI[*] R2' address='192.168.60.x' netmask='255.255.255.x' />"+
                            "<route hosts='H1 H2' destination='*' netmask='0.0.0.0' interface='eth0' />"+
                            "</config>");
                addStaticRoutes = false;
                addDefaultRoutes = false;
                @display("p=75,43");
        }
    connections:
        H1.ethg[0] <--> C <--> N1.ethg[0];
        N1.ethg[1] <--> C <--> R1.ethg[0];

        R1.ethg[1] <--> C <--> R2.ethg[0] if numIRouters == 0;
        R1.ethg[1] <--> C <--> RI[0].ethg[0] if numIRouters > 0;
        for i = 1..numIRouters-1 {
            RI[i-1].ethg[1] <--> C <--> RI[i].ethg[0];
        }
        RI[numIRouters-1].ethg[1] <--> C <--> R2.ethg[0] if numIRouters > 0;

        R2.ethg[1] <--> C <--> N2.ethg[0];
        N2.ethg[1] <--> C <--> H2.ethg[0];
}


%#--------------------------------------------------------------------------------------------------------------
%inifile: omnetpp.ini

[General]
description = "Simple test"
network = Test1
ned-path = .;../../../../src;../../lib
cmdenv-express-mode = false

sim-time-limit = 200s

#omnetpp 5.0 - 5.1 compatibility:
eventlog-file = "${resultdir}/${configname}-${runnumber}.elog"
output-scalar-file = "${resultdir}/${configname}-${runnumber}.sca"
output-vector-file = "${resultdir}/${configname}-${runnumber}.vec"
snapshot-file = "${resultdir}/${configname}-${runnumber}.sna"

**.hasStatus = true
*.R1.status.initialStatus = "down"

*.scenarioManager.script = xmldoc("scenario.xml")

**.ospf.ospfConfig = xmldoc("ASConfig.xml")

**.H1.numApps = 2
**.H2.numApps = 2
**.app[0].typename = "UdpBasicApp"
**.app[0].destPort = 1234
**.app[0].messageLength = 32 bytes
**.app[0].sendInterval = 1s
**.app[0].startTime = 10.5s
**.app[0].stopTime = 190.1s
**.H2.app[0].destAddresses = "H1"
**.H1.app[0].destAddresses = "H2"
**.app[1].typename = "UdpEchoApp"
**.app[1].localPort = 1234

**.arp.cacheTimeout = 1s

**.numIRouters = ${0,1,2,3,5,10,25}

%#--------------------------------------------------------------------------------------------------------------
%file: ASConfig.xml
<?xml version="1.0"?>
<OSPFASConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="OSPF.xsd">

  <!-- Areas -->
  <Area id="0.0.0.0">
    <AddressRange address="192.168.1.0" mask="255.255.255.0" status="Advertise" />
    <AddressRange address="192.168.2.0" mask="255.255.255.0" status="Advertise" />
    <AddressRange address="192.168.60.0" mask="255.255.255.0" status="Advertise" />
  </Area>

  <!-- Routers -->
  <Router name="R1" RFC1583Compatible="true">
    <BroadcastInterface ifName="eth0" areaID="0.0.0.0" interfaceOutputCost="1" routerPriority="1" />
    <PointToPointInterface ifName="eth1" areaID="0.0.0.0" interfaceOutputCost="2" />
  </Router>

  <Router name="RI[*]" RFC1583Compatible="true">
    <PointToPointInterface ifName="eth0" areaID="0.0.0.0" interfaceOutputCost="2" />
    <PointToPointInterface ifName="eth1" areaID="0.0.0.0" interfaceOutputCost="2" />
  </Router>

  <Router name="R2" RFC1583Compatible="true">
    <PointToPointInterface ifName="eth0" areaID="0.0.0.0" interfaceOutputCost="2" />
    <BroadcastInterface ifName="eth1" areaID="0.0.0.0" interfaceOutputCost="1" routerPriority="2" />
  </Router>

</OSPFASConfig>

%#--------------------------------------------------------------------------------------------------------------
%file: scenario.xml

<scenario>
    <startup t="20.5"  module="R1"/>
    <shutdown t="100.0" module="R1"/>
    <startup t="140.5" module="R1"/>
</scenario>

%#--------------------------------------------------------------------------------------------------------------
%contains-regex: stdout

Test1.R1 starting up
.*
Test1.R1 started
.*
Test1.R1 shutting down
.*
Test1.R1 shut down
.*
Test1.R1 starting up
.*
Test1.R1 started
%#--------------------------------------------------------------------------------------------------------------
%contains: results/General-0.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-0.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-0.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-0.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-0.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-0.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-1.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-1.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-1.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-1.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-1.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-1.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-2.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-2.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-2.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-2.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-2.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-2.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-3.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-3.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-3.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-3.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-3.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-3.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-4.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-4.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-4.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-4.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-4.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-4.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-5.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-5.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-5.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-5.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-5.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-5.sca
scalar Test1.H2.app[1] echoedPk:count 107
%contains: results/General-6.sca
scalar Test1.H1.app[0] packetSent:count 180
%contains: results/General-6.sca
scalar Test1.H1.app[0] packetReceived:count 107
%contains: results/General-6.sca
scalar Test1.H1.app[1] echoedPk:count 107
%contains: results/General-6.sca
scalar Test1.H2.app[0] packetSent:count 180
%contains: results/General-6.sca
scalar Test1.H2.app[0] packetReceived:count 107
%contains: results/General-6.sca
scalar Test1.H2.app[1] echoedPk:count 107
%#--------------------------------------------------------------------------------------------------------------
%not-contains: stdout
undisposed object:
%not-contains: stdout
-- check module destructor
%#--------------------------------------------------------------------------------------------------------------
