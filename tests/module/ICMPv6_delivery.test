%description:
Test for bug #473: Icmpv6 error messages are delivered to the transport layer protocol
that initiated the packet causing the error.

NClientsEth example network is used, with one client.
The client sends an UDP datagram to an unopened port of the
server. The server generates an Destination Unreachable Icmpv6
error that should be received by the client application in the
form of an error indication.

%inifile: {}.ini
[General]
ned-path = ../../../../examples;../../../../src
network = inet.examples.ipv6.nclients.NClientsEth
sim-time-limit=15s
cmdenv-express-mode=false

#omnetpp 5.0 - 5.1 compatibility:
eventlog-file = "${resultdir}/${configname}-${runnumber}.elog"
output-scalar-file = "${resultdir}/${configname}-${runnumber}.sca"
output-vector-file = "${resultdir}/${configname}-${runnumber}.vec"
snapshot-file = "${resultdir}/${configname}-${runnumber}.sna"

# number of client computers
*.n = 1

# udp apps
**.cli[*].numApps = 1
**.cli[*].app[*].typename = "UdpBasicApp"
**.cli[*].app[0].destAddresses = "aaaa:2:2::8aa:ff:fe00:8" # "srv" does not work
**.cli[*].app[0].destPort = 1000
**.cli[*].app[0].messageLength = 100B

**.cli[*].app[0].startTime = 10s
**.cli[*].app[0].stopTime = 11s
**.cli[*].app[0].sendInterval = 10s

**.srv.numApps = 1
**.srv.app[*].typename = "UdpSink"
**.srv.app[0].localPort = 1001

# Ethernet NIC configuration
**.eth[*].queue.typename = "EtherQosQueue"
**.eth[*].queue.dataQueue.typename = "DropTailQueue" # in routers
**.eth[*].queue.dataQueue.frameCapacity = 10  # in routers
**.eth[*].mac.duplexEnabled = true

%contains: stdout
ICMPv6 packet: passing it to higher layer
%contains: stdout
Ignoring UDP error report
%#--------------------------------------------------------------------------------------------------------------
%not-contains: stdout
undisposed object:
%not-contains: stdout
-- check module destructor
%#--------------------------------------------------------------------------------------------------------------
