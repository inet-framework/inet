%description:
Tests UdpSocket::bind() can not be called more than once on a socket.

%#--------------------------------------------------------------------------------------------------------------
%file: TestApp.cc
#include "inet/transportlayer/contract/udp/UdpSocket.h"
#include "inet/transportlayer/contract/udp/UdpControlInfo_m.h"

using namespace inet;
namespace UDPSocket_2 {

class TestApp : public cSimpleModule
{
    public:
       TestApp() : cSimpleModule(65536) {}
    protected:
        virtual void activity();
};

Define_Module(TestApp);

void TestApp::activity()
{
  UdpSocket s;
  s.setOutputGate(gate("socketOut"));
  s.bind(100);
  s.bind(200); // will fail
}

}

%#--------------------------------------------------------------------------------------------------------------
%file: TestApp.ned
import inet.applications.contract.IApp;

simple TestApp like IApp
{
    gates:
        input socketIn;
        output socketOut;
}

%#--------------------------------------------------------------------------------------------------------------
%inifile: omnetpp.ini
[General]
ned-path = .;../../../../src;../../lib
network = SimpleTestNetwork
cmdenv-express-mode = false
cmdenv-event-banner-details = true

#omnetpp 5.0 - 5.1 compatibility:
eventlog-file = "${resultdir}/${configname}-${runnumber}.elog"
output-scalar-file = "${resultdir}/${configname}-${runnumber}.sca"
output-vector-file = "${resultdir}/${configname}-${runnumber}.vec"
snapshot-file = "${resultdir}/${configname}-${runnumber}.sna"

**.client.numApps = 1
**.client.app[0].typename = "TestApp"

%exitcode: 1

%#--------------------------------------------------------------------------------------------------------------
%postrun-command: grep "<!>" test.* > test_err.out || true
%#--------------------------------------------------------------------------------------------------------------
%contains-regex: test_err.out
(<!> Error in module \(inet::Udp\) SimpleTestNetwork\.client\.udp \(id=\d+\) at event \#\d+, t=0: bind: socket is already bound \(sockId=\d+\).)|(<!> Error: bind: socket is already bound \(sockId=\d+\) -- in module \(inet::Udp\) SimpleTestNetwork\.client\.udp \(id=\d+\), at t=0s, event \#\d+)
%#--------------------------------------------------------------------------------------------------------------
%# %not-contains: stdout
%# undisposed object:
%# %not-contains: stdout
%# -- check module destructor
%#--------------------------------------------------------------------------------------------------------------
