%description:

Test shutdown and startup operations on StandardHost.

%inifile: omnetpp.ini

[General]
network = Test
ned-path = .;../../../../src;../../lib
cmdenv-express-mode = false
record-eventlog = true

#omnetpp 5.0 - 5.1 compatibility:
eventlog-file = "${resultdir}/${configname}-${runnumber}.elog"
output-scalar-file = "${resultdir}/${configname}-${runnumber}.sca"
output-vector-file = "${resultdir}/${configname}-${runnumber}.vec"
snapshot-file = "${resultdir}/${configname}-${runnumber}.sna"

**.hasStatus = true
**.scenarioManager.script = xmldoc("scenario.xml")
*.host.hasTcp = true
*.host.hasUdp = true
*.host.hasSctp = haveClass("Sctp")
*.host.eth[0].csmacdSupport = true
*.host.eth[1].csmacdSupport = false
*.host.ipv4.configurator.networkConfiguratorModule = ""
%file: test.ned

import inet.node.inet.StandardHost;
import inet.status.NodeStatus;
import inet.common.scenario.ScenarioManager;

network Test
{
    submodules:
        scenarioManager: ScenarioManager;
        host: StandardHost
        {
            gates:
                ethg[2];
                pppg[2];
        }
    connections:
        host.ethg[0] <--> {datarate=10Mbps; delay=10us;} <--> host.ethg[1];
        host.pppg[0] <--> {datarate=10Mbps; delay=10us;} <--> host.pppg[1];
}

%file: scenario.xml

<scenario>
    <at t="1.0">
        <shutdown module="host"/>
    </at>
    <at t="2.0">
        <startup module="host"/>
    </at>
    <at t="2.5">
        <shutdown module="host"/>
    </at>
</scenario>

%contains-regex: stdout

Test.host shutting down
.*
Test.host shut down
.*
Test.host starting up
.*
Test.host started
.*
Test.host shutting down
.*
Test.host shut down
%#--------------------------------------------------------------------------------------------------------------
%not-contains: stdout
undisposed object:
%not-contains: stdout
-- check module destructor
%#--------------------------------------------------------------------------------------------------------------
