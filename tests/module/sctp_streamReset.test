%description:
Testing SCTP Stream Reset
The number of stream reset requests sent should be the same as the number of stream
reset requests performed.
%#--------------------------------------------------------------------------------------------------------------


%#--------------------------------------------------------------------------------------------------------------
%inifile: omnetpp.ini

[General]
network=SctpFeatureTest
cmdenv-event-banners=false
cmdenv-express-mode = false
ned-path = .;../../../../src;../../lib

#omnetpp 5.0 - 5.1 compatibility:
eventlog-file = "${resultdir}/${configname}-${runnumber}.elog"
output-scalar-file = "${resultdir}/${configname}-${runnumber}.sca"
output-vector-file = "${resultdir}/${configname}-${runnumber}.vec"
snapshot-file = "${resultdir}/${configname}-${runnumber}.sna"

**.testing = false
**.testTimeout = 0s

# udp app (off)

# tcp app (off)

# sctp apps
**.sctp_client.numApps = 1
**.sctp_client.app[0].typename = "SctpClient"
**.sctp_client.app[0].localAddress = "10.1.1.1"
**.sctp_client.app[0].connectAddress = "10.1.3.1"
**.sctp_client.app[0].primaryPath = "10.1.3.1"
**.sctp_client.app[0].connectPort = 6666
**.sctp_client.app[0].requestLength= 1452
**.sctp_client.app[0].startTime = truncnormal(1s,0.2s)
**.sctp_client.app[0].stopTime = truncnormal(30s,1s)
**.sctp_client.app[0].numRequestsPerSession = 10000000
**.sctp_client.app[0].queueSize = 1000
**.sctp_client.app[0].outboundStreams = 4
**.sctp_client.app[0].streamReset = true
**.sctp_client.app[0].streamRequestTime = 3s
**.sctp_client.app[0].streamResetType =9  #NO_RESET=5, RESET_OUTGOING=7, RESET_INCOMING=8, RESET_BOTH=9, SSN_TSN=10
**.sctp_client.app[0].streamToReset = 2


**.sctp_server.numApps = 1
**.sctp_server.app[0].typename = "SctpServer"
**.sctp_server.app[0].localAddress = "10.1.3.1"
**.sctp_server.app[0].localPort = 6666
**.sctp_server.app[*].queueSize = 100 #Size of sendQueue before App is notified to send new data
**.sctp_server.app[*].numPacketsToSendPerClient = 1000000
**.sctp_server.app[*].numPacketsToReceivePerClient = 0
**.sctp_server.app[*].outboundStreams = 4
**.sctp_server.app[0].streamReset = true

# sctp settings
**.hasSctp = true
**.sctp.sctpAlgorithmClass = "SctpAlg"
**.sctp.arwnd = 200000

# NIC configuration
#**.ppp[*].queue.typename = "DropTailQueue" # in routers
#**.ppp[*].queue.frameCapacity = 100  # in routers
#**.ppp[*].ppp.mtu = 1500 B

#**.vector-recording = false

**.sctp.crcMode = "computed"
**.ipv4.**.crcMode = "computed"

**.sctp_server.numPcapRecorders = 1
**.sctp_server.pcapRecorder[0].pcapFile = "server1.pcap"
**.sctp_server.pcapRecorder[0].alwaysFlush = true
**.sctp_client.numPcapRecorders = 1
**.sctp_client.pcapRecorder[0].pcapFile = "client1.pcap"
**.sctp_client.pcapRecorder[0].alwaysFlush = true

**.sctp_server.pcapRecorder[0].pcapNetwork = 204
**.sctp_client.pcapRecorder[0].pcapNetwork = 204


%#--------------------------------------------------------------------------------------------------------------
%contains: results/General-0.sca
scalar SctpFeatureTest.sctp_client.sctp "Number of StreamReset requests sent" 2
scalar SctpFeatureTest.sctp_client.sctp "Number of StreamReset requests performed" 1
%contains: results/General-0.sca
scalar SctpFeatureTest.sctp_server.sctp "Number of StreamReset requests sent" 1
scalar SctpFeatureTest.sctp_server.sctp "Number of StreamReset requests performed" 1
%#--------------------------------------------------------------------------------------------------------------
