%description:
Tests constant drift oscillator.

%includes:
#include "inet/clock/contract/IOscillator.h"

using namespace omnetpp;
using namespace inet;

%file: TestNetwork.ned

import inet.clock.oscillator.ConstantDriftOscillator;

network TestNetwork
{
    submodules:
        test: Test;
        oscillator: ConstantDriftOscillator;
}

%inifile: omnetpp.ini
[General]
ned-path = .;../../../../src;../../lib
network = TestNetwork

%activity:

#define CHECK(x) { auto r = oscillator->x; std::cout << #x << " -> "<< r << std::endl; }

auto oscillator = check_and_cast<IOscillator *>(cSimulation::getActiveSimulation()->getModuleByPath("oscillator"));
CHECK(computeTicksForInterval(0));
CHECK(computeTicksForInterval(0.000000000001));
CHECK(computeTicksForInterval(0.000000001));
CHECK(computeTicksForInterval(1));

CHECK(computeIntervalForTicks(0));
CHECK(computeIntervalForTicks(1));
CHECK(computeIntervalForTicks(1000));
CHECK(computeIntervalForTicks(1000000000000));

%contains-regex: stdout
.*?computeTicksForInterval\(0\) -> 0
.*?computeTicksForInterval\(0.000000000001\) -> 1
.*?computeTicksForInterval\(0.000000001\) -> 1000
.*?computeTicksForInterval\(1\) -> 1000000000000
.*?computeIntervalForTicks\(0\) -> 0
.*?computeIntervalForTicks\(1\) -> 0.000000000001
.*?computeIntervalForTicks\(1000\) -> 0.000000001
.*?computeIntervalForTicks\(1000000000000\) -> 1
$