[General]
network = BlockAckShowcase
sim-time-limit = 1s

# traffic
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[0].destAddresses = "host2"
*.host1.app[0].destPort = 1000
*.host1.app[0].messageLength = 700B
*.host1.app[0].sendInterval = 0.1ms     # 10 Mbps
*.host1.app[0].packetName = "Data"

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[0].localPort = 1000

# arp
*.host*.ipv4.arp.typename = "GlobalArp"

# qos
*.host*.wlan[*].mac.qosStation = true
*.host*.wlan[*].classifier.typename = "QosClassifier"

# block ack
*.host*.wlan[*].mac.hcf.isBlockAckSupported = true

# radio
*.host*.wlan[*].radio.receiver.energyDetection = -105dBm
*.host*.wlan[*].radio.receiver.sensitivity = -105dBm
*.host*.wlan[*].radio.receiver.snirThreshold = 0dB

*.host*.wlan[*].radio.transmitter.power = 0.12mW

# disable 802.11 fragmentation and aggregation
**.hcf.originatorMacDataService.fragmentationPolicy.fragmentationThreshold = 10000B
**.hcf.originatorMacDataService.msduAggregationPolicy.aggregationLengthThreshold = 10000

# visualizer
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.infoVisualizer.modules = "*.host2.app[0]"
*.visualizer.infoVisualizer.format = "%t"
*.visualizer.packetDropVisualizer.displayPacketDrops = true
*.visualizer.packetDropVisualizer.labelFormat = "%r"

[Config NoFragmentation]
description = "Packets are not fragmented, block ack after 5 packet transmissions (default)"

[Config Fragmentation]
description = "Packets are fragmented to 16 pieces, block ack after 16 packet transmissions"

**.hcf.originatorMacDataService.fragmentationPolicy.fragmentationThreshold = 100B
*.host1.app[0].messageLength = 1080B

*.host*.wlan[*].mac.hcf.originatorAckPolicy.blockAckReqThreshold = 16

[Config MixedTraffic]
description = "Mixed traffic of packets shorter and longer than blockAckReqThreshold"

*.host1.numApps = 2
*.host1.app[1].typename = "UdpBasicApp"
*.host1.app[1].destAddresses = "host2"
*.host1.app[1].destPort = 2000
*.host1.app[1].messageLength = 1700B
*.host1.app[1].sendInterval = 0.1ms     # 10 Mbps
*.host1.app[1].packetName = "Large"

*.host2.numApps = 2
*.host2.app[1].typename = "UdpSink"
*.host2.app[1].localPort = 2000


# TODO: implement asymmetrical operation
#[Config Asymmetrical]
#description = "block ack session in only one direction"
#
#*.host2.numApps = 2
#*.host2.app[1].typename = "UdpBasicApp"
#*.host2.app[1].destAddresses = "host1"
#*.host2.app[1].destPort = 2000
#*.host2.app[1].messageLength = 1700B
#*.host2.app[1].sendInterval = 0.25ms   # 2.5 Mbps
#*.host2.app[1].packetName = "Data-"
#
#*.host1.numApps = 2
#*.host1.app[1].typename = "UdpSink"
#*.host1.app[1].localPort = 2000
#
#*.host1.wlan[*].mac.hcf.originatorAckPolicy.maxBlockAckPolicyFrameLength = 10000B
#*.host2.wlan[*].mac.hcf.originatorAckPolicy.maxBlockAckPolicyFrameLength = 100B
#
#**.classifier.udpPortUpMap = "21 BK 80 BE 4000 VI 5000 VO 2000 VI 1000 VI"

#**.infoVisualizer.displayInfos = true
#**.infoVisualizer.modules = "*.host*.wlan[0].mac.hcf.edcaTxopProcedures[*]"
#**.infoVisualizer.format = "%t"

#**.backgroundNoise.power = -200dBm
