<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<analysis version="2">
    <inputs>
        <input pattern="results/Ieee802154Power-#0.vec"/>
        <input pattern="results/Ieee802154Power-#0.sca"/>
    </inputs>
    <charts>
        <chart createdWith="OMNeT++ 6.1.0.241008-f7568267cd" icon="icons/full/obj/barchart.png" id="1366488475" name="Power consumption" resultTypes="scalar" template="barchart_mpl" type="MATPLOTLIB">
            <script><![CDATA[from omnetpp.scave import results, chart, utils

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
include_fields = props["include_fields"] == "true"

# query scalar data into dataframe
try:
    df = results.get_scalars(filter_expression, include_fields=include_fields, include_attrs=True, include_runattrs=True, include_itervars=True)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

groups, series = utils.select_groups_series(df, props)

utils.add_legend_labels(df, props, groups + series)
utils.sort_rows_by_legend(df, props)
del df["legend"]

df['module'] = df['module'].replace(regex="Ieee802154Showcase.(.*?).energyStorage",value="\\1")

confidence_level = utils.get_confidence_level(props)
valuedf, errorsdf, metadf = utils.pivot_for_barchart(df, groups, series, confidence_level, sort=False)

valuedf *= -1

utils.plot_bars(valuedf, errorsdf, metadf, props, sort=False)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="2" />
  <x:children>
    <label text="Filter expression:" >
        <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>

    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="scalar">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    
    <button x:id="include_fields" x:style="CHECK" text="Include fields">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>

    <label text="Multiple attributes can be selected in both fields below, separated by commas.">
        <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>

    <label text="Groups:"/>
    <combo x:id="groups" x:style="BORDER" x:id.content="module,name,experiment,module+name,$itervarnames,$runattrnames">
        <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </combo>

    <label text="Series:"/>
    <combo x:id="series" x:style="BORDER" x:id.content="module,name,experiment,module+name,$itervarnames,$runattrnames">
        <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </combo>

    <label text="Scalar values will be averaged across all attributes not selected above.">
        <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </label>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="BARS" label="Bars"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout"/>

  <x:children>

    <group text="Bars">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <!-- Baseline -->
        <label text="Baseline:"/>
        <text x:id="baseline" x:id.default="0" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <!-- Bar placement:Aligned/Overlap/InFront/Stacked -->
        <label text="Bar placement:"/>
        <combo x:id="bar_placement" x:id.default="Aligned" x:style="BORDER|READ_ONLY">
          <add x:p0="Aligned"/>
          <add x:p0="Overlap"/>
          <add x:p0="InFront"/>
          <add x:p0="Stacked"/>
        </combo>

        <!-- Rotate X labels by:0/30/45/60/90 -->
        <label text="Rotate x labels by:"/>
        <combo x:id="xlabel_rotation" x:id.default="0" x:style="BORDER|READ_ONLY">
          <add x:p0="0"/>
          <add x:p0="30"/>
          <add x:p0="45"/>
          <add x:p0="60"/>
          <add x:p0="90"/>
        </combo>

      </x:children>
    </group>

    <group text="Hints">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="1"/>
      <x:children>

        <label x:style="WRAP" text="* To change the set of bar colors used, choose a different cycle seed on the Styling page">
          <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
        </label>

        <label x:style="WRAP" text="* To have more control over the specific colors, add properties in the Advanced page. Examples:">
          <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
        </label>

        <label x:style="WRAP" text="       `axes.prop_cycle: cycler('color', ['blue', 'green', 'red'])`  # on a Matplotlib chart: selects colors">
          <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
        </label>

        <label x:style="WRAP" text="       `Bar.Color/3: yellow`  # on a native chart: selects the color of the 3rd series">
          <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
        </label>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="CONFINT" label="Confidence Interval"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Error Markers">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Confidence level:"/>
    <combo x:id="confidence_level" x:id.default="95%" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="80%"/>
      <add x:p0="85%"/>
      <add x:p0="90%"/>
      <add x:p0="95%"/>
      <add x:p0="99.5%"/>
      <add x:p0="99.9%"/>
    </combo>

    <label text="Cap size:"/>
    <spinner x:id="cap_size" x:id.default="4" selection="4" minimum="0" maximum="10" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" verticalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label x:style='WRAP' text="Enter string replacements (foo --&gt; bar) or sed-style replacements (/foo-regex/bar-regex/) to be applied to the labels, one per line:">
              <layoutData x:class='GridData' horizontalAlignment='FILL' grabExcessHorizontalSpace='true'/>
            </label>
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="columns">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label x:style='WRAP' text="Hint: $name or ${name} inserts the content of a data frame column; use $$ to insert dollar sign">
              <layoutData x:class='GridData' horizontalAlignment='FILL' grabExcessHorizontalSpace='true'/>
            </label>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="ORDERING" label="Ordering"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>

  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
    <package name='org.omnetpp.common.wizard.support' />
    <package name='org.omnetpp.ned.editor.wizards.support' />
    <package name='org.omnetpp.cdt.wizard.support' />
  </import>

  <layout x:class='GridLayout'/>

  <x:children>

    <group text="Ordering of items on the legend and on the plot">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <!-- ordering_regex_list -->
        <label text='Primary ordering (one regex per line):'/>
        <label text='Secondary ordering (one regex per line):'/>
        <text x:id='ordering_regex_list' x:style='BORDER|WRAP|MULTI|V_SCROLL'>
          <layoutData x:class='GridData' heightHint='60' horizontalAlignment='FILL' verticalAlignment='FILL' grabExcessHorizontalSpace='true' grabExcessVerticalSpace='true'/>
        </text>

        <!-- secondary_ordering_regex_list -->
        <text x:id='secondary_ordering_regex_list' x:style='BORDER|WRAP|MULTI|V_SCROLL'>
          <layoutData x:class='GridData' heightHint='60' horizontalAlignment='FILL' verticalAlignment='FILL' grabExcessHorizontalSpace='true' grabExcessVerticalSpace='true'/>
        </text>

        <!-- hint -->
        <label x:style='WRAP' text='NOTE: Items will be ordered based on legend labels. Specify a series of regexes, one per line, to define the ranking of items. Each item&apos;s rank will be determined by the index of the first regex it matches. After sorting, items matching the first regex will appear at the top, those matching the second regex will be placed below, and so forth. Case-sensitive substring match is used.'>
          <layoutData x:class='GridData' horizontalSpan='2' horizontalAlignment='FILL' grabExcessHorizontalSpace='true'/>
        </label>

        <!-- sorting -->
        <button x:id='sorting' text='Use alphabetical sorting as tertiary ordering' x:style='CHECK' x:id.default="true">
          <layoutData x:class='GridData' horizontalSpan='2'/>
        </button>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="ordering_regex_list" value=""/>
            <property name="confidence_level" value="none"/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Power consumption [J]"/>
            <property name="legend_replacements" value="/Ieee802154Showcase.//&#10;/.energyStorage//"/>
            <property name="title" value="Power consumption"/>
            <property name="legend_automatic" value="false"/>
            <property name="cycle_seed" value="0"/>
            <property name="bar_placement" value="Aligned"/>
            <property name="sorting" value="true"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="legend_placement" value="outside top left"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value=""/>
            <property name="xlabel_rotation" value="0"/>
            <property name="grid_density" value="Major"/>
            <property name="groups" value="module"/>
            <property name="yaxis_min" value=""/>
            <property name="baseline" value="0"/>
            <property name="image_export_filename" value="powerconsumption"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="cap_size" value="4"/>
            <property name="legend_format" value="$module"/>
            <property name="filter" value="type =~ scalar AND name =~ residualEnergyCapacity:last"/>
            <property name="secondary_ordering_regex_list" value=""/>
            <property name="series" value="name"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="false"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="include_fields" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="image_export_width" value="12"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
        </chart>
    </charts>
</analysis>
