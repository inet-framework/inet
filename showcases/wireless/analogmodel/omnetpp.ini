[Config Routing]
sim-time-limit = 5s
network = AnalogModelShowcaseRoutingNetwork

*.numHosts = 7

# ping app
*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"

# node movement
*.node*.mobility.initFromDisplayString = false
*.node*.mobility.typename = "LinearMobility"
*.node*.mobility.initialMovementHeading = uniform(0deg,360deg)
*.node*.mobility.speed = 25mps

**.constraintAreaMaxX = 400m
**.constraintAreaMaxY = 400m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m

# routing
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
*.*.routingApp.typename = "Aodv"
**.arp.typename = "GlobalArp"

*.*.routingApp.activeRouteTimeout = 1s
*.*.routingApp.deletePeriod = 0.5s

# radio
*.*.wlan[*].radio.signalAnalogRepresentation = "unitDisk"
**.radio.transmitter.analogModel.communicationRange = 200m
**.radio.transmitter.analogModel.interferenceRange = 400m
**.radio.transmitter.analogModel.detectionRange = 800m
**.displayCommunicationRanges = true

# visualization
*.visualizer.routingTableVisualizer[0].displayLabels = false
*.visualizer.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.routingTableVisualizer[0].lineShift = 0
*.visualizer.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.networkRouteVisualizer[0].packetFilter = "*ping*"
*.visualizer.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer[0].format = "%a/%l"
*.visualizer.numDataLinkVisualizers = 4
*.visualizer.dataLinkVisualizer[*].activityLevel = "peer"
*.visualizer.dataLinkVisualizer[*].displayLinks = true
*.visualizer.dataLinkVisualizer[0].packetFilter = "aodv::Rreq"
*.visualizer.dataLinkVisualizer[1].packetFilter = "ping*"
*.visualizer.dataLinkVisualizer[1].*Color = "blue"
*.visualizer.dataLinkVisualizer[2].packetFilter = "aodv::Rrep"
*.visualizer.dataLinkVisualizer[2].*Color = "darkslategray"
*.visualizer.dataLinkVisualizer[3].packetFilter = "aodv::Rerr"
*.visualizer.dataLinkVisualizer[3].*Color = "red"
*.visualizer.infoVisualizer[0].displayInfos = true
*.visualizer.infoVisualizer[0].modules = "*.source.app[0]"
*.visualizer.routingTableVisualizer[0].displayRoutingTables = true
*.visualizer.routingTableVisualizer[0].destinationFilter = "destination"

# uncomment for video recording
#*.visualizer.networkRouteVisualizer[0].fadeOutMode = "animationTime"
#*.visualizer.dataLinkVisualizer[*].fadeOutMode = "animationTime"

[Config Distance]
sim-time-limit = 2.5s
network = AnalogModelShowcaseDistanceNetwork

**.radio.packetErrorRate.result-recording-modes = +vector
**.radio.bitErrorRate.result-recording-modes = +vector

# application parameters
*.source.numApps = 1
*.source.app[0].typename = "UdpBasicApp"
*.source.app[*].destAddresses = "destination"
*.source.app[*].destPort = 1000
*.source.app[*].messageLength = 1000byte
*.source.app[*].sendInterval = 1ms

*.destination.numApps = 1
*.destination.app[0].typename = "UdpSink"
*.destination.app[*].localPort = 1000

# mobility parameters
*.destination.mobility.typename = "LinearMobility"
*.destination.mobility.initialMovementHeading = 0deg
*.destination.mobility.speed = 100mps
*.destination.mobility.constraintAreaMinX = 500m
*.destination.mobility.constraintAreaMaxX = 825m

# wlan
*.source.**.transmitter.power = 5mW
*.source.**.displayCommunicationRange = true
**.backgroundNoise.power = -105dBm
**.wlan*.mac.*.rateSelection.dataFrameBitrate = 54Mbps
**.wlan*.mac.dcf.channelAccess.pendingQueue.packetCapacity = 14

# visualizer parameters
*.visualizer.numStatisticVisualizers = 2
*.visualizer.statisticVisualizer[*].displayStatistics = true

*.visualizer.statisticVisualizer[0].signalName = "packetSentToUpper"
*.visualizer.statisticVisualizer[0].statisticExpression = "packetErrorRate"
*.visualizer.statisticVisualizer[0].sourceFilter = "*.destination.wlan[*].radio"
*.visualizer.statisticVisualizer[0].format = "packetErrorRate: %v"

*.visualizer.statisticVisualizer[1].signalName = "packetSentToUpper"
*.visualizer.statisticVisualizer[1].statisticExpression = "minimumSnir"
*.visualizer.statisticVisualizer[1].sourceFilter = "*.destination.wlan[*].radio"
*.visualizer.statisticVisualizer[1].format = "SNIR: %v"
*.visualizer.statisticVisualizer[1].placementHint = "topLeft"

*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.packetDropVisualizer[0].displayPacketDrops = true
*.visualizer.packetDropVisualizer[0].nodeFilter = "destination"
*.visualizer.packetDropVisualizer[0].labelFormat = "%r"
*.visualizer.infoVisualizer[0].displayInfos = true
*.visualizer.infoVisualizer[0].modules = "*.destination.app[0]"

# uncomment for video recording
#**.fadeOutMode = "animationTime"

[Config Noise]
sim-time-limit = 0.1s
network = AnalogModelShowcaseNoiseNetwork

# arp settings
**.arp.typename = "GlobalArp"

# Udp app settings
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[*].destAddresses = "host2"
*.host1.app[*].destPort = 1000
*.host1.app[*].messageLength = 1000Byte
*.host1.app[*].sendInterval = 100us
*.host1.app[*].startTime = intuniform(0ms,1ms)

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[*].localPort = 1000

*.host3.numApps = 1
*.host3.app[0].typename = "UdpBasicApp"
*.host3.app[*].destAddresses = "host4"
*.host3.app[*].destPort = 1000
*.host3.app[*].messageLength = 1000Byte
*.host3.app[*].sendInterval = 100us
*.host3.app[*].startTime = intuniform(0ms,1ms)

*.host4.numApps = 1
*.host4.app[0].typename = "UdpSink"
*.host4.app[*].localPort = 1000

# radio settings
*.host*.wlan[*].radio.signalAnalogRepresentation = "dimensional"
*.host{1..2}.wlan[*].radio.channelNumber = 0
*.host{3..4}.wlan[*].radio.channelNumber = 3
*.host*.wlan[*].radio.transmitter.analogModel.frequencyGains = "left c-b*1.5 -40dB linear c-b -28dB linear c-b*0.5-1MHz -20dB linear c-b*0.5+1MHz 0dB linear c+b*0.5-1MHz 0dB linear c+b*0.5+1MHz -20dB linear c+b -28dB linear c+b*1.5 -40dB right"

*.noiseSource.transmitter.typename = "NoiseTransmitter"
*.noiseSource.transmitter.signalAnalogRepresentation = "dimensional"
*.noiseSource.transmitter.centerFrequency = 2500MHz
*.noiseSource.transmitter.bandwidth = 250MHz
*.noiseSource.transmitter.power = 0.0125W
*.noiseSource.transmitter.duration = uniform(0.1us, 0.5us) # bursts
*.noiseSource.sleepInterval = uniform(0.1ms, 0.5ms)

*.radioMedium.backgroundNoise.power = nan
*.radioMedium.backgroundNoise.powerSpectralDensity = -110dBmWpMHz

# visualizer settings
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.displayLinks = true

*.visualizer.infoVisualizer.displayInfos = true
*.visualizer.infoVisualizer.modules = "*.host*.app[0] OR *.host*.wlan[0].mac.dcf.channelAccess.contention"
*.visualizer.infoVisualizer.format = "%t"

*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.mediumVisualizer.displaySpectrums = true
*.visualizer.mediumVisualizer.displaySpectrograms = true
*.visualizer.mediumVisualizer.autoPowerAxis = false
*.visualizer.mediumVisualizer.signalMinPowerDensity = -135dBmWpMHz
*.visualizer.mediumVisualizer.signalMaxPowerDensity = 6.41dBmWpMHz

*.visualizer.packetDropVisualizer.displayPacketDrops = true
*.visualizer.packetDropVisualizer.nodeFilter = "host2 or host4"
*.visualizer.packetDropVisualizer.labelFormat = "%r"

# for video recording
#*.visualizer.**.fadeOutMode = "animationTime"

