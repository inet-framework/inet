<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<analysis version="2">
    <inputs>
        <input pattern="results/General-#0.sca"/>
        <input pattern="results/General-#0.vec"/>
    </inputs>
    <charts>
        <chart icon="icons/full/obj/linechart.png" id="1061945849" name="Sources and Sinks Data Rate" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
default_colors = inet.scave.plot.default_colors

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
#filter_expression = props["filter"]
filter_expression0 = """type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ "#0" AND (
    (module =~ "PeekingUnderTheHoodShowcase.source[0]" AND name =~ dataRate:vector) OR
    (module =~ "PeekingUnderTheHoodShowcase.sink[0]" AND name =~ droppedDataRate:vector)
)"""

filter_expression1 = """type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ "#0" AND (
    (module =~ "PeekingUnderTheHoodShowcase.source[1]" AND name =~ dataRate:vector) OR
    (module =~ "PeekingUnderTheHoodShowcase.sink[1]" AND name =~ droppedDataRate:vector)
)"""

filter_expression2 = """type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ "#0" AND (
    (module =~ "PeekingUnderTheHoodShowcase.source[2]" AND name =~ dataRate:vector) OR
    (module =~ "PeekingUnderTheHoodShowcase.sink[2]" AND name =~ droppedDataRate:vector)
)"""
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df0 = results.get_vectors(filter_expression0, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
    df1 = results.get_vectors(filter_expression1, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
    df2 = results.get_vectors(filter_expression2, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df0.empty or df1.empty or df2.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df0 = utils.perform_vector_ops(df0, props["vector_operations"])
df1 = utils.perform_vector_ops(df1, props["vector_operations"])
df2 = utils.perform_vector_ops(df2, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df0, [('module', '.*sink.*', {'color': default_colors[0]}),
                                    ('module', '.*source.*', {'color': default_colors[1]})], order=['module', {'.*source.*': 1, '.*sink.*': 0}])

inet.scave.plot.add_to_dataframe(df1, [('module', '.*sink.*', {'color': default_colors[0]}),
                                    ('module', '.*source.*', {'color': default_colors[1]})], order=['module', {'.*source.*': 1, '.*sink.*': 0}])

inet.scave.plot.add_to_dataframe(df2, [('module', '.*sink.*', {'color': default_colors[0]}),
                                    ('module', '.*source.*', {'color': default_colors[1]})], order=['module', {'.*source.*': 1, '.*sink.*': 0}])

# plot
ax0, ax1, ax2 = inet.scave.plot.plot_vectors_separate_grouped([df0, df1, df2], props)

utils.postconfigure_plot(props)

ax0.set_xticks(range(0,12,2))
ax1.set_xticks(range(0,12,2))
ax2.set_xticks(range(0,12,2))

ax0.set_xticklabels(range(0,12,2), visible=False)
ax1.set_xticklabels(range(0,12,2), visible=False)
ax2.set_xticklabels(range(0,12,2))

ax0.set_ylabel('')
ax1.set_ylabel('Data Rate [Mbps]')
ax2.set_ylabel('')
ax2.set_xlabel('Simulation Time [s]')

ax0.axhline(y=16, color='grey', linestyle='dashdot', linewidth=1)
ax1.axhline(y=16, color='grey', linestyle='dashdot', linewidth=1)
ax2.axhline(y=16, color='grey', linestyle='dashdot', linewidth=1)

for i in [0, 1, 2]:
    exec('ax = ax' + str(i))
    handles, labels = ax.get_legend_handles_labels()
    handles, labels = inet.scave.plot.create_custom_legend(props, style_tuple_list = [('shaper limit', {'linestyle': 'dashdot', 'color': 'grey'})], ax_list=[ax], handles=handles, labels=labels)
    ax.legend(handles, labels, loc=props['legend_placement'])

plt.subplots_adjust(left = 0.08, right = 0.99, top = 0.95, bottom = 0.1, wspace=0.1, hspace=0.1)

utils.export_image_if_needed(props)
#utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value=""/>
            <property name="legend_replacements" value="/PeekingUnderTheHoodShowcase.//"/>
            <property name="title" value="Data Rate of Sources and Sinks"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: divide_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="8"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value=""/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="0"/>
            <property name="image_export_filename" value="datarate"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value="$module"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ &quot;#0&quot; AND (&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[0]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[0]&quot; AND name =~ droppedDataRate:vector)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="30"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="489489044" name="Sources and Sinks Data Rate + Filter Dropped Data Rate" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
default_colors = inet.scave.plot.default_colors

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df, style_tuple_list=[('module', '.*source.*', {'linestyle': 'dotted'}),
                                                    ('module', '.*\\[0\\].*', {'color': default_colors[0]}),
                                                    ('module', '.*\\[1\\].*', {'color': default_colors[1]}),
                                                    ('module', '.*\\[2\\].*', {'color': default_colors[2]}),
                                                    ('module', '.*filter.*', {'color': default_colors[4]})])

# plot
inet.scave.plot.plot_vectors(df, props)

utils.postconfigure_plot(props)

inet.scave.plot.create_custom_legend(props, [('stream 1', {'color': default_colors[0], 'linestyle': '', 'marker': 's'}),
                                  ('stream 2', {'color': default_colors[1], 'linestyle': '', 'marker': 's'}),
                                  ('stream 3', {'color': default_colors[2], 'linestyle': '', 'marker': 's'}),
                                  ('source outgoing', {'color': 'black', 'linestyle': 'dotted'}),
                                  ('sink incoming', {'color': 'black'}),
                                  ('filter drop rate', {'color': default_colors[4], 'linestyle': '', 'marker': 's'})], ncols=2)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Data Rate [Mbps]"/>
            <property name="legend_replacements" value="/PeekingUnderTheHoodShowcase.//"/>
            <property name="title" value="Filter Packet-Drop, Source Outgoing and Sink Incoming Data Rate"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: divide_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="0"/>
            <property name="image_export_filename" value="drop"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value="$module"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ &quot;#0&quot; AND (&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[0]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[0]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[1]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[1]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[2]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[2]&quot; AND name =~ dataRate:vector) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.filter&quot; AND name =~ droppedDataRate:vector)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True&#10;figure.autolayout : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="502917789" name="Queueing Time" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
mpl.rcParams['figure.autolayout'] = True
#workaround end

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Queueing Time [ms]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Queueing time"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: multiply_by(1000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="QueueingTime"/>
            <property name="xaxis_min" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND name =~ queueingTime:vector"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="4"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1647516909" name="Queue Length" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
mpl.rcParams['figure.autolayout'] = True
#workaround end

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Queue Length [pk]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Queue length"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value=""/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="QueueLength"/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.0"/>
            <property name="filter" value="type =~ vector AND name =~ queueLength:vector"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="dotted"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="833724080" name="Stream 0 Data Rate" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="Plot.Caching" value="true"/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Data Rate [Mbps]"/>
            <property name="legend_replacements" value="/PeekingUnderTheHoodShowcase.//"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Source and Sink Data Rate - Stream 0"/>
            <property name="legend_automatic" value="true"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: divide_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="0"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value=""/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ &quot;#0&quot; AND name =~ dataRate:vector AND (&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[0]&quot;) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[0]&quot;)&#10;)"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="30"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="974782743" name="Stream 1 Data Rate" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="Plot.Caching" value="true"/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Data Rate [Mbps]"/>
            <property name="legend_replacements" value="/PeekingUnderTheHoodShowcase.//"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Source and Sink Data Rate - Stream 1"/>
            <property name="legend_automatic" value="true"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: divide_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="0"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value=""/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ &quot;#0&quot; AND name =~ dataRate:vector AND (&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[1]&quot;) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[1]&quot;)&#10;)"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="30"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="878299958" name="Stream 2 Data Rate" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="Plot.Caching" value="true"/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Data Rate [Mbps]"/>
            <property name="legend_replacements" value="/PeekingUnderTheHoodShowcase.//"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Source and Sink Data Rate - Stream 2"/>
            <property name="legend_automatic" value="true"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: divide_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="0"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value=""/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ General AND runattr:replication =~ &quot;#0&quot; AND name =~ dataRate:vector AND (&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.source[2]&quot;) OR&#10;    (module =~ &quot;PeekingUnderTheHoodShowcase.sink[2]&quot;)&#10;)"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="30"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="10"/>
            <property name="image_export_width" value="9"/>
            <property name="include_fields" value="false"/>
        </chart>
    </charts>
</analysis>
