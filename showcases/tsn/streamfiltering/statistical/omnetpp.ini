[General]
network = StatisticalPolicingShowcaseNetwork
sim-time-limit = 1s
description = "Per-stream filtering using sliding window rate metering and statistical rate limiting"

# client applications
*.client*.numApps = 1
*.client*.app[*].typename = "UdpSourceApp"
*.client1.app[0].display-name = "excess traffic"
*.client2.app[0].display-name = "normal traffic"
*.client*.app[0].io.destAddress = "server"
*.client1.app[0].io.destPort = 1000
*.client2.app[0].io.destPort = 1001
*.client1.app[0].io.displayStringTextFormat = "{numSent} excess traffic"
*.client2.app[0].io.displayStringTextFormat = "{numSent} normal traffic"

# best-effort stream ~40Mbps
*.client1.app[0].source.packetLength = 1000B
*.client1.app[0].source.productionInterval = 200us + replaceUnit(sin(dropUnit(simTime() * 10)), "ms") / 20

# video stream ~20Mbps
*.client2.app[0].source.packetLength = 500B
*.client2.app[0].source.productionInterval = 200us + replaceUnit(sin(dropUnit(simTime() * 20)), "ms") / 10

# enable outgoing streams
*.client*.hasOutgoingStreams = true

# configure client stream identification
*.client*.bridging.streamIdentifier.identifier.mapping = [{stream: "excess traffic", packetFilter: expr(udp.destPort == 1000)},
                                                          {stream: "normal traffic", packetFilter: expr(udp.destPort == 1001)}]

# client stream encoding
*.client.bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0},
                                                 {stream: "video", pcp: 4}]

# server applications
*.server.numApps = 2
*.server.app[*].typename = "UdpSinkApp"
*.server.app[0].display-name = "excess traffic"
*.server.app[1].display-name = "normal traffic"
*.server.app[0].io.localPort = 1000
*.server.app[1].io.localPort = 1001
*.server.app[0].io.displayStringTextFormat = "{numReceived} excess traffic"
*.server.app[1].io.displayStringTextFormat = "{numReceived} normal traffic"

# display number of packets sent and received on network nodes
*.visualizer.infoVisualizer.displayInfos = true
*.visualizer.infoVisualizer.placementHint = "top"
*.visualizer.infoVisualizer.modules = "*.*.app[*].io"

# enable per-stream filtering
*.switch.hasIngressTrafficFiltering = true

# disable forwarding IEEE 802.1Q C-Tag
*.switch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# configure stream decoding
*.switch.bridging.streamCoder.decoder.mapping = [{vlan: 0, stream: "excess traffic"},
                                                 {vlan: 4, stream: "normal traffic"}]

# per-stream filtering
*.switch.bridging.streamFilter.ingress.numStreams = 2
*.switch.bridging.streamFilter.ingress.classifier.mapping = {"excess traffic": 0, "normal traffic": 1}
*.switch.bridging.streamFilter.ingress.meter[0].display-name = "best effort"
*.switch.bridging.streamFilter.ingress.meter[1].display-name = "video"
*.switch*.bridging.streamFilter.ingress.meter[*].typename = "SlidingWindowRateMeter"
*.switch*.bridging.streamFilter.ingress.meter[*].timeWindow = 10ms
*.switch*.bridging.streamFilter.ingress.filter[*].typename = "StatisticalRateLimiter"
*.switch*.bridging.streamFilter.ingress.filter[0].maxDatarate = 40Mbps
*.switch*.bridging.streamFilter.ingress.filter[1].maxDatarate = 20Mbps
