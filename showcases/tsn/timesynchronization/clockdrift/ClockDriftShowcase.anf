<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<analysis version="2">
    <inputs>
        <input pattern="results/ConstantClockDrift-#0.sca"/>
        <input pattern="results/ConstantClockDrift-#0.vec"/>
        <input pattern="results/RandomClockDriftGptpSync-#0.sca"/>
        <input pattern="results/RandomClockDriftGptpSync-#0.vec"/>
        <input pattern="results/NoClockDrift-#0.sca"/>
        <input pattern="results/NoClockDrift-#0.vec"/>
        <input pattern="results/RandomClockDrift-#0.sca"/>
        <input pattern="results/RandomClockDrift-#0.vec"/>
        <input pattern="results/RandomClockDriftOutOfBandSync-#0.vec"/>
        <input pattern="results/RandomClockDriftOutOfBandSync-#0.sca"/>
        <input pattern="results/ConstantClockDriftOutOfBandSync-#0.sca"/>
        <input pattern="results/ConstantClockDriftOutOfBandSync-#0.vec"/>
    </inputs>
    <charts>
        <chart icon="icons/full/obj/linechart.png" id="1075282213" name="Constant drift rate" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time difference to simulation time [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Constant drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="-70"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="ConstantClockDrift"/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ ConstantClockDrift AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="80"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1476862264" name="Constant drift rate, out-of-band time synchronization" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Out-of-band synchronization - Constant drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="OutOfBandSyncConstant"/>
            <property name="xaxis_min" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ ConstantClockDriftOutOfBandSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1747619177" name="Constant drift rate, out-of-band time synchronization -  zoomed" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Out-of-band synchronization - Constant drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="-0.3"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="OutOfBandSyncConstantZoomed"/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ ConstantClockDriftOutOfBandSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="0.5"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.00155"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="471629031" name="Random drift rate" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time difference to simulation time [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Random drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="RandomClockDrift"/>
            <property name="xaxis_min" value="0"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ RandomClockDrift AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="402519669" name="Random drift rate, out-of-band time synchronization" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Out-of-band synchronization - Random drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="OutOfBandSyncRandom"/>
            <property name="xaxis_min" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ RandomClockDriftOutOfBandSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1839039397" name="Random drift rate, out-of-band time synchronization - zoomed" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Out-of-band synchronization - Random drift rate"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="6.6"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="OutOfBandSyncRandomZoomed"/>
            <property name="xaxis_min" value="0.0538"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ RandomClockDriftOutOfBandSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="9.2"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.0604"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1412086216" name="Random drift rate, gPTP time synchronization" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Gptp synchronization"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="GptpSync"/>
            <property name="xaxis_min" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND (module =~ *.source1.clock OR module =~ *.source2.clock OR  module =~ *.switch1.clock) AND  runattr:experiment =~ RandomClockDriftGptpSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1374287847" name="Random drift rate, gPTP time synchronization -  zoomed" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

#df['vectime'] *= 1000

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Gptp synchronization"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="26.6"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="GptpSyncZoomed"/>
            <property name="xaxis_min" value="0.0812"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND (module =~ *.source1.clock OR module =~ *.source2.clock OR  module =~ *.switch1.clock) AND  runattr:experiment =~ RandomClockDriftGptpSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="27.9"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.0848"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1105595937" name="gPTP time synchronization, sync accuracy" template="linechart_native" type="LINE">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils, ideplot, vectorops as ops

#workaround start
#transparency workaround for omnetpp-6.0
import matplotlib as mpl
mpl.rcParams['savefig.transparent'] = True
#workaround end

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except ValueError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

df['legend'] = df['module']
for i in range(0,len(df['legend'])):
    df.loc[i, 'legend'] = df.loc[i, 'module'].replace('ClockDriftShowcase.','')
    df.loc[i, 'legend'] = df.loc[i, 'legend'].replace('.clock','')

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="Input" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Lines" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Plot" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Display titles or names? -->
    <label text="Label source:"/>
    <combo x:id="legend_labels" x:id.default="result titles" x:style="BORDER|READ_ONLY">
      <add x:p0="result names"/>
      <add x:p0="result titles"/>
    </combo>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Styling" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Background color:"/>
    <ColorChooser x:id="Plot.BackgroundColor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <group text="Fonts">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Title font -->
    <label text="Title font:"/>
    <FontChooser x:id="Plot.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Axis title font -->
    <label text="Axis title font:"/>
    <FontChooser x:id="Axis.Title.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Label font -->
    <label text="Label font:"/>
    <FontChooser x:id="Axis.Label.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- Legend font -->
    <label text="Legend font:"/>
    <FontChooser x:id="Legend.Font" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </FontChooser>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="Legend.Border" text="Border" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Options { -->
    <group text="Options">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Use antialias? -->
    <button x:id="Plot.Antialias" text="Use antialias" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Use caching? -->
    <button x:id="Plot.Caching" text="Use caching" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

        <!-- Border? -->
    <button x:id="X.Label.Wrap" text="Wrap labels" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Advanced" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="plot.properties" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="plotproperties">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="Export" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="legend_labels" value="result titles"/>
            <property name="Plot.Caching" value="true"/>
            <property name="yaxis_title" value="Clock time to simulation time difference [us]"/>
            <property name="Legend.Border" value="false"/>
            <property name="title" value="Clock drift - Gptp synchronization"/>
            <property name="Plot.Title.Font" value="Arial-regular-10"/>
            <property name="vector_operations" value="apply: expression('y - t') # Available variables: t, y, tprev, yprev, tnext, ynext, k, n&#10;apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="Axis.Title.Font" value="Arial-regular-8"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="Axis.Label.Font" value="Arial-regular-8"/>
            <property name="legend_placement" value="upper right"/>
            <property name="plot.properties" value=""/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation time [s]"/>
            <property name="Plot.BackgroundColor" value="white"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="16.85"/>
            <property name="Legend.Font" value="Arial-regular-8"/>
            <property name="image_export_filename" value="GptpSync_RateAccuracy"/>
            <property name="xaxis_min" value="0.05915"/>
            <property name="linewidth" value="1.5"/>
            <property name="filter" value="type =~ vector AND (module =~ *.source1.clock OR module =~ *.source2.clock OR  module =~ *.switch1.clock) AND  runattr:experiment =~ RandomClockDriftGptpSync AND name =~ timeChanged:vector AND module =~ &quot;**.clock&quot;"/>
            <property name="X.Label.Wrap" value="true"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="5"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="legend_show" value="true"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="17.4"/>
            <property name="Plot.Antialias" value="true"/>
            <property name="xaxis_max" value="0.0599"/>
            <property name="image_export_width" value="9"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="579643975" name="End-to-end delay, out of band sync" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

plt.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

handles, labels = plt.gca().get_legend_handles_labels()
inet.scave.plot.create_custom_legend(props, style_tuple_list=[('baseline (no clock drift)', {'linestyle': 'dashdot', 'marker': 'None', 'markersize': 1, 'color': 'black'})], order=[0,2,1,3,4], handles=handles, labels=labels, markerscale=8, ncols=3, loc='upper center')
#inet.scave.plot.quick_reorder_legend(handles, labels, [0,2,1,3], markerscale=8)

#handles, labels = plt.gca().get_legend_handles_labels()
#handles, labels = inet.scave.plot.create_multidimensional_legend(style_tuple_list=[('something', {})], handles=handles, labels=labels)
#plt.legend(handles, labels)


utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value="/ClockDriftShowcase.//&#10;/app\[0\].sink//&#10;/\.//&#10;/OutOfBandSync//"/>
            <property name="title" value="End-to-End Delay, Out-of-Band Synchronization"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="20.625"/>
            <property name="image_export_filename" value="delay_outofbandsync"/>
            <property name="xaxis_min" value=""/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value="$configname, $module"/>
            <property name="filter" value="type =~ vector AND runattr:replication =~ &quot;#0&quot; AND name =~ meanBitLifeTimePerPacket:vector AND (&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="1"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value=""/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="167315390" name="End-to-end delay, out of band sync, zoomed in" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

plt.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=0.7, zorder=10)

# plot
utils.plot_vectors(df, props)

utils.postconfigure_plot(props)

handles, labels = plt.gca().get_legend_handles_labels()
inet.scave.plot.create_custom_legend(props, style_tuple_list=[('baseline (no clock drift)', {'linestyle': 'dashdot', 'marker': 'None', 'markersize': 1, 'color': 'black'})], order=[0,2,1,3,4], handles=handles, labels=labels, markerscale=3, ncols=3, loc='upper center')
#inet.scave.plot.quick_reorder_legend(handles, labels, [0,2,1,3], markerscale=8)

#handles, labels = plt.gca().get_legend_handles_labels()
#handles, labels = inet.scave.plot.create_multidimensional_legend(style_tuple_list=[('something', {})], handles=handles, labels=labels)
#plt.legend(handles, labels)


utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value="/ClockDriftShowcase.//&#10;/app\[0\].sink//&#10;/\.//&#10;/OutOfBandSync//"/>
            <property name="title" value="End-to-End Delay, Out-of-Band Synchronization, Zoomed in"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [ms]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="20.64"/>
            <property name="image_export_filename" value="delay_outofbandsync_zoomed"/>
            <property name="xaxis_min" value="0.005"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value="$configname, $module"/>
            <property name="filter" value="type =~ vector AND runattr:replication =~ &quot;#0&quot; AND name =~ meanBitLifeTimePerPacket:vector AND (&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="3"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value="20.7"/>
            <property name="xaxis_max" value="0.022"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1033851030" name="End-to-end delay, gPTP" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

# plot
utils.plot_vectors(df, props)

plt.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

utils.postconfigure_plot(props)

handles, labels = plt.gca().get_legend_handles_labels()

inet.scave.plot.create_custom_legend(props, style_tuple_list=[('baseline (no clock drift)', {'linestyle': 'dashdot', 'color': 'black', 'linewidth': 1})], handles=handles, labels=labels, loc='upper right', markerscale=4)

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value="/ClockDriftShowcase.//&#10;/.app\[0\].sink//"/>
            <property name="title" value="End-to-End Delay, gPTP"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="20.5"/>
            <property name="image_export_filename" value="delay_gptp"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND runattr:experiment =~ RandomClockDriftGptpSync AND runattr:replication =~ &quot;#0&quot; AND name =~ meanBitLifeTimePerPacket:vector AND (&#10;    (module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="2"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="true"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="96680141" name="End-to-end delay, out of band sync and gptp" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression_outofband = """type =~ vector AND runattr:replication =~ "#0" AND name =~ meanBitLifeTimePerPacket:vector AND (
    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ "ClockDriftShowcase.sink1.app[0].sink") OR
    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ "ClockDriftShowcase.sink2.app[0].sink")
)"""
filter_expression_gptp = """type =~ vector AND runattr:experiment =~ RandomClockDriftGptpSync AND runattr:replication =~ "#0" AND name =~ meanBitLifeTimePerPacket:vector AND (
    (module =~ "ClockDriftShowcase.sink1.app[0].sink") OR
    (module =~ "ClockDriftShowcase.sink2.app[0].sink")
)"""
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df_oob = results.get_vectors(filter_expression_outofband, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
    df_gptp = results.get_vectors(filter_expression_gptp, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df_oob.empty or df_gptp.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df_oob = utils.perform_vector_ops(df_oob, props["vector_operations"])
df_gptp = utils.perform_vector_ops(df_gptp, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df_oob, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0]}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1]})])

inet.scave.plot.add_to_dataframe(df_gptp, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0]}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1]})])

# plot
#utils.plot_vectors(df, props)
ax_oob, ax_gptp = inet.scave.plot.plot_vectors_separate_grouped([df_oob, df_gptp], props, layout='horizontal')

ax_oob.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)
ax_gptp.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

utils.postconfigure_plot(props)

handles, labels = inet.scave.plot.create_custom_legend(props, style_tuple_list=[('sink1', {'color': inet.scave.plot.default_colors[0]}),
                                                              ('sink2', {'color': inet.scave.plot.default_colors[1]}),
                                                              ('baseline (no clock drift)', {'color': 'black', 'linestyle': 'dashdot'})], inplace=False)

ax_oob.legend(handles, labels, loc='upper left', title='Out of band sync')
ax_gptp.legend(handles, labels, loc='upper left', title='gPTP')

ax_gptp.set_ylabel("")

plt.subplots_adjust(left = 0.08, right = 0.98, top = 0.94, bottom = 0.1, wspace=0.2, hspace=0.1)

utils.export_image_if_needed(props)
#utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="true"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value="/ClockDriftShowcase.//&#10;/app\[0\].sink//&#10;/\.//&#10;/OutOfBandSynchronization//"/>
            <property name="title" value="End-to-End Delay, Random Clock Drift, Synchronized by Out-of-Band Synchronization and gPTP"/>
            <property name="legend_automatic" value="false"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value="20.5"/>
            <property name="image_export_filename" value="delay_outofbandsync_gptp"/>
            <property name="xaxis_min" value=""/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value="$module $configname"/>
            <property name="filter" value="type =~ vector AND runattr:replication =~ &quot;#0&quot; AND name =~ meanBitLifeTimePerPacket:vector AND (&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ RandomClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink1.app[0].sink&quot;) OR&#10;    (runattr:experiment =~ ConstantClockDriftOutOfBandSync AND module =~ &quot;ClockDriftShowcase.sink2.app[0].sink&quot;)&#10;)"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="1"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value=""/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1622325041" name="End-to-End Delay, Constant Clock Drift Rate" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0]}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1]})])

# plot
inet.scave.plot.plot_vectors(df, props)

plt.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

#print(df)

utils.postconfigure_plot(props)

inet.scave.plot.create_custom_legend(props, style_tuple_list=[('sink1', {'color': inet.scave.plot.default_colors[0]}),
                                                              ('sink2', {'color': inet.scave.plot.default_colors[1]}),
                                                              ('baseline (no clock drift)', {'color': 'black', 'linestyle': 'dashdot'})])

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value=""/>
            <property name="title" value="End-to-End Delay, Constant Clock Drift Rate"/>
            <property name="legend_automatic" value="true"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="image_export_filename" value="delay_constant"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND name =~ meanBitLifeTimePerPacket:vector AND&#10;runattr:configname =~ &quot;ConstantClockDrift&quot;"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="2"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="520676657" name="End-to-End Delay, Random Clock Drift Rate" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression = props["filter"]
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df = results.get_vectors(filter_expression, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df = utils.perform_vector_ops(df, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0]}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1]})])

# plot
inet.scave.plot.plot_vectors(df, props)

plt.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

#print(df)

utils.postconfigure_plot(props)

inet.scave.plot.create_custom_legend(props, style_tuple_list=[('sink1', {'color': inet.scave.plot.default_colors[0]}),
                                                              ('sink2', {'color': inet.scave.plot.default_colors[1]}),
                                                              ('baseline (no clock drift)', {'color': 'black', 'linestyle': 'dashdot'})])

utils.export_image_if_needed(props)
utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value=""/>
            <property name="title" value="End-to-End Delay, Random Clock Drift Rate"/>
            <property name="legend_automatic" value="true"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="image_export_filename" value="delay_random"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND name =~ meanBitLifeTimePerPacket:vector AND&#10;runattr:configname =~ &quot;RandomClockDrift&quot;"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="2"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
        <chart icon="icons/full/obj/linechart.png" id="1563819731" name="End-to-end delay, Random and Constant Clock Drift Rate" template="linechart_mpl" type="MATPLOTLIB">
            <script><![CDATA[import math
from omnetpp.scave import results, chart, utils
import os
import sys
# TODO workaround when using omnetpp 6.0 that doesn't yet contain the python path feature
sys.path.append(os.path.join(os.getcwd(), "../../../../python"))
import matplotlib.pyplot as plt
import inet.scave.plot
import noclockdrift

# get chart properties
props = chart.get_properties()
utils.preconfigure_plot(props)

# collect parameters for query
filter_expression_constant = """type =~ vector AND name =~ meanBitLifeTimePerPacket:vector AND runattr:configname =~ "ConstantClockDrift" """
filter_expression_random = """type =~ vector AND name =~ meanBitLifeTimePerPacket:vector AND runattr:configname =~ "RandomClockDrift" """
start_time = float(props["vector_start_time"] or -math.inf)
end_time = float(props["vector_end_time"] or math.inf)

# query vector data into a data frame
try:
    df_const = results.get_vectors(filter_expression_constant, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
    df_rand = results.get_vectors(filter_expression_random, include_attrs=True, include_runattrs=True, include_itervars=True, start_time=start_time, end_time=end_time)
except results.ResultQueryError as e:
    raise chart.ChartScriptError("Error while querying results: " + str(e))

if df_const.empty or df_rand.empty:
    raise chart.ChartScriptError("The result filter returned no data.")

# apply vector operations
df_const = utils.perform_vector_ops(df_const, props["vector_operations"])
df_rand = utils.perform_vector_ops(df_rand, props["vector_operations"])

inet.scave.plot.add_to_dataframe(df_const, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0], 'zorder': 10}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1], 'zorder': 10})])

inet.scave.plot.add_to_dataframe(df_rand, style_tuple_list=[('module', '.*sink1.*', {'color': inet.scave.plot.default_colors[0], 'zorder': 20}),
                                                    ('module', '.*sink2.*', {'color': inet.scave.plot.default_colors[1], 'zorder': 10})])

# plot
#inet.scave.plot.plot_vectors(df, props)
ax_const, ax_rand = inet.scave.plot.plot_vectors_separate_grouped([df_const, df_rand], props, layout='horizontal')

handles, labels = plt.gca().get_legend_handles_labels()

ax_const.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)
ax_rand.axhline(noclockdrift.get_noclockdrift_delay(1000000), linestyle='dashdot', color='black', linewidth=1)

#ax_const.axhline(20.646, linestyle='dashdot', color='black', linewidth=1)
#ax_rand.axhline(20.646, linestyle='dashdot', color='black', linewidth=1)

#ax_const.axhline(23.764, linestyle='dashdot', color='black', linewidth=1)
#ax_rand.axhline(20.646, linestyle='dashdot', color='black', linewidth=1)

#print(df)

utils.postconfigure_plot(props)

handles, labels = inet.scave.plot.create_custom_legend(props, style_tuple_list=[('sink1', {'color': inet.scave.plot.default_colors[0]}),
                                                              ('sink2', {'color': inet.scave.plot.default_colors[1]}),
                                                              ('baseline (no clock drift)', {'color': 'black', 'linestyle': 'dashdot'})], inplace=False)

ax_const.legend(handles, labels, loc='upper left', title='Constant drift')
ax_rand.legend(handles, labels, loc='upper left', title='Random drift')

ax_rand.set_ylabel("")

plt.subplots_adjust(left = 0.06, right = 0.98, top = 0.94, bottom = 0.1, wspace=0.1, hspace=0.1)

utils.export_image_if_needed(props)
#utils.export_data_if_needed(df, props)
]]></script>
            <dialogPage id="INPUT" label="Input"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>
    <label text="Filter expression:" />
    <styledText x:id="filter" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="filter" x:id.resultType="vector">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
    </styledText>
    <button x:id="simplify" x:style="PUSH" text="Simplify" x:id.role="simplify" x:id.targetControl="filter">
      <layoutData x:class="GridData" horizontalAlignment="END" />
    </button>
    <composite>
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" />
      <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="false" />
      <x:children>
        <group text="Vector operations (one per line)">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <text x:id="vector_operations" x:style="BORDER|MULTI|V_SCROLL|H_SCROLL" x:id.contentAssist="vectorops">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </text>
          </x:children>
        </group>
        <group text="Crop interval">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="2" />
          <x:children>
            <label text="Start time (sec):" />
            <text x:id="vector_start_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
            <label text="End time (sec):" />
            <text x:id="vector_end_time" x:style="BORDER">
              <layoutData x:class="GridData" widthHint="120" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
            </text>
          </x:children>
        </group>
      </x:children>
    </composite>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LINES" label="Lines"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Lines">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Draw style:"/>
    <combo x:id="drawstyle" x:id.default="auto" x:style="BORDER|READ_ONLY">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0="linear"/>
      <add x:p0="steps-pre"/>
      <add x:p0="steps-mid"/>
      <add x:p0="steps-post"/>
    </combo>

    <label text="Line color:"/>
    <ColorChooser x:id="linecolor" x:id.default="" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="BEGINNING" grabExcessHorizontalSpace="false"/>
    </ColorChooser>

    <label text="Line style:"/>
    <combo x:id="linestyle" x:id.default="solid" x:style="BORDER|READ_ONLY">
      <add x:p0="none"/>
      <add x:p0="solid"/>
      <add x:p0="dotted"/>
      <add x:p0="dashed"/>
      <add x:p0="dashdot"/>
    </combo>

    <label text="Line width:"/>
    <spinner x:id="linewidth" x:id.default="1.5" minimum="0" digits="1" selection="15" maximum="1000" x:style="BORDER"/>

      </x:children>
    </group>

    <group text="Markers">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Marker:"/>
    <combo x:id="marker" x:id.default="none" x:style="BORDER">
      <add x:p0="auto"/>
      <add x:p0="none"/>
      <add x:p0=". (dot)"/>
      <add x:p0=", (point)"/>
      <add x:p0="v (triangle down)"/>
      <add x:p0="^ (triangle up)"/>
      <add x:p0="&lt; (triangle left)"/>
      <add x:p0="&gt; (triangle right)"/>
      <add x:p0="1 (tri down)"/>
      <add x:p0="2 (tri up)"/>
      <add x:p0="3 (tri left)"/>
      <add x:p0="4 (tri right)"/>
      <add x:p0="| (vline)"/>
      <add x:p0="_ (hline)"/>
      <add x:p0="8 (octagon)"/>
      <add x:p0="o (circle)"/>
      <add x:p0="s (square)"/>
      <add x:p0="p (pentagon)"/>
      <add x:p0="* (star)"/>
      <add x:p0="+ (plus)"/>
      <add x:p0="x (cross)"/>
      <add x:p0="D (diamond)"/>
      <add x:p0="d (thin diamond)"/>
      <!-- TODO the rest...  -->
    </combo>

    <label text="Marker size:"/>
    <spinner x:id="markersize" x:id.default="5" selection="6" minimum="0" maximum="100" x:style="BORDER"/>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="PLOT" label="Plot"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2" makeColumnsEqualWidth="true"/>

  <x:children>

    <group text="Title">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Plot title -->
    <label text="Plot title:"/>
    <text x:id="title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <!-- } -->
      </x:children>
    </group>

    <!-- X Axis { -->
    <group text="X axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="xaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="xaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="xaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="xaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Y Axis { -->
    <group text="Y axis">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Label:"/>
    <text x:id="yaxis_title" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Min:"/>
    <text x:id="yaxis_min" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <label text="Max:"/>
    <text x:id="yaxis_max" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </text>

    <button x:id="yaxis_log" x:id.default="false" text="Logarithmic" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>

    <!-- Grid { -->
    <group text="Grid">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="grid_show" x:id.default="true" text="Show grid" x:style="CHECK" x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Show grid:None/Major/All -->
    <label text="Density:"/>
    <combo x:id="grid_density" x:id.default="Major" x:style="BORDER|READ_ONLY">
      <add x:p0="Major"/>
      <add x:p0="All"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="1" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="false"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- Display Legend? -->
    <button x:id="legend_show" x:id.default="true" text="Show legend" x:style="CHECK" x:id.isEnabler="true" >
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- Placement -->
    <label text="Placement:"/>
    <combo x:id="legend_placement" x:id.default="upper right" x:style="BORDER|READ_ONLY">
      <add x:p0="best"/>
      <add x:p0="upper right"/>
      <add x:p0="upper left"/>
      <add x:p0="lower left"/>
      <add x:p0="lower right"/>
      <add x:p0="right"/>
      <add x:p0="center left"/>
      <add x:p0="center right"/>
      <add x:p0="lower center"/>
      <add x:p0="upper center"/>
      <add x:p0="center"/>
      <add x:p0="outside top left"/>
      <add x:p0="outside top center"/>
      <add x:p0="outside top right"/>
      <add x:p0="outside bottom left"/>
      <add x:p0="outside bottom center"/>
      <add x:p0="outside bottom right"/>
      <add x:p0="outside left top"/>
      <add x:p0="outside left center"/>
      <add x:p0="outside left bottom"/>
      <add x:p0="outside right top"/>
      <add x:p0="outside right center"/>
      <add x:p0="outside right bottom"/>
    </combo>

    <!-- } -->
      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="LEGEND" label="Legend"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">
  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang" />
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
  </import>
  <layout x:class="GridLayout" numColumns="1" />
  <x:children>

        <group text="Legend labels">

          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="false" verticalAlignment="FILL" grabExcessVerticalSpace="false" />
          <layout x:class="GridLayout" />
          <x:children>
            <button x:id='legend_automatic' text='Automatic' x:style='RADIO' x:id.default="true"/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" marginHeight="0" marginBottom="5"/>
              <x:children>
                <button x:id='legend_prefer_result_titles' text='Use result title instead of name where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
                <button x:id='legend_prefer_module_display_paths' text='Use module display path instead of full path where available' x:style='CHECK' x:id.default="true" x:id.enablerButton="legend_automatic"/>
              </x:children>
            </composite>

            <button x:id='legend_manual' text='Manual' x:style='RADIO'/>
            <composite>
              <layoutData x:class="GridData" horizontalIndent="30"/>
              <layout x:class="GridLayout" numColumns="2" marginHeight="0" marginBottom="5"/>
              <x:children>
                <label text="Format string:"/>
                <text x:id="legend_format" x:style="BORDER" x:id.enablerButton="legend_manual" x:id.contentAssist="columns">
                  <layoutData x:class="GridData" widthHint="200" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="CENTER" grabExcessVerticalSpace="false" />
                </text>
                <label text="Hint: Add $name or ${name} to insert content of data frame column; use $$ to insert dollar sign">
                  <layoutData x:class="GridData" horizontalSpan="2" />
                </label>
              </x:children>
            </composite>
          </x:children>

        </group>

        <group text="Label tweaking">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
          <layout x:class="GridLayout" numColumns="1" />
          <x:children>
            <label text="Sed-style regex replacements inside the labels (/foo/bar/, one per line):" />
            <styledText x:id="legend_replacements" x:style="BORDER|V_SCROLL|H_SCROLL">
              <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true" />
            </styledText>
            <label text="Hint: Use \1, \2, etc. to refer back to parenthesized groups; data frame colums ($name, ${name}) also recognized"/>
            <!--
            <label text="Examples:"/>
            <label text='- &quot;/tcp/TCP/&quot; ==&gt; change &quot;tcp&quot; to &quot;TCP&quot;'/>
            <label text='- &quot;/ +/ /&quot; ==&gt; replace multiple spaces with one space'/>
            <label text="- &quot;/host\[(\d+)\]/in host \1/&quot; ==&gt; change &quot;host[21]&quot; to &quot;in host 21&quot; (note \1,\2 as group reference)"/>
            <label text='- &quot;/\//:/&quot; or &quot;|\|:|&quot; ==&gt; replace slashes with colons'/>
            -->
          </x:children>
        </group>


  </x:children>
</xswt>]]></dialogPage>
            <dialogPage id="STYLING" label="Styling"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <!-- Style { -->
    <group text="Style">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <label text="Style:"/>
    <combo x:id="plt.style"  x:id.default="default" x:style="BORDER">
      <add x:p0="default"/>
      <add x:p0="classic"/>
      <add x:p0="ggplot"/>
      <add x:p0="grayscale"/>
      <add x:p0="dark_background"/>
      <add x:p0="bmh"/>
      <add x:p0="fast"/>
      <add x:p0="fivethirtyeight"/>
      <add x:p0="tableau-colorblind10"/>
      <add x:p0="Solarize_Light2"/>
      <add x:p0="seaborn"/>
      <add x:p0="seaborn-bright"/>
      <add x:p0="seaborn-colorblind"/>
      <add x:p0="seaborn-dark"/>
      <add x:p0="seaborn-darkgrid"/>
      <add x:p0="seaborn-dark-palette"/>
      <add x:p0="seaborn-deep"/>
      <add x:p0="seaborn-muted"/>
      <add x:p0="seaborn-notebook"/>
      <add x:p0="seaborn-paper"/>
      <add x:p0="seaborn-pastel"/>
      <add x:p0="seaborn-poster"/>
      <add x:p0="seaborn-talk"/>
      <add x:p0="seaborn-ticks"/>
      <add x:p0="seaborn-white"/>
      <add x:p0="seaborn-whitegrid"/>
    </combo>

    <label text="Cycle seed:"/>
    <spinner x:id="cycle_seed" x:id.default="0" selection="0" minimum="0" maximum="1000000" x:style="BORDER"/>

    <!-- } -->
      </x:children>
    </group>

    <!-- Colors { -->
    <group text="Colors">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <!-- backgroundColor -->
    <label text="Figure background color:"/>
    <ColorChooser x:id="matplotlibrc.figure.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <label text="Axes background color:"/>
    <ColorChooser x:id="matplotlibrc.axes.facecolor" x:style="BORDER">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
    </ColorChooser>

    <!-- } -->
      </x:children>
    </group>


    <!-- Legend { -->
    <group text="Legend">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

    <button x:id="matplotlibrc.legend.frameon" x:id.default="true" text="Frame" x:style="CHECK"  x:id.isEnabler="true">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.fancybox" x:id.default="false" text="Fancybox" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <button x:id="matplotlibrc.legend.shadow" x:id.default="false" text="Shadow" x:style="CHECK">
      <layoutData x:class="GridData" horizontalSpan="2"/>
    </button>

    <!-- } -->
      </x:children>
    </group>


  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="ADVANCED" label="Advanced"><![CDATA[<?xml version='1.0' encoding='UTF-8'?>
<xswt xmlns:x='http://sweet_swt.sf.net/xswt'>
  <import xmlns='http://sweet_swt.sf.net/xswt'>
    <package name='java.lang'/>
    <package name='org.eclipse.swt.widgets' />
    <package name='org.eclipse.swt.graphics' />
    <package name='org.eclipse.swt.layout' />
    <package name='org.eclipse.swt.custom' />
  </import>
  <layout x:class='GridLayout' numColumns='1'/>
  <x:children>
    <label text="Here you can further customize the plot using matplotlibrc properties."/>
    <label text="The syntax is one entry per line in the 'key : value' format; comments (#) are also accepted."/>
    <label text="Content Assist available (hit Ctrl+Space)."/>
    <styledText x:id="matplotlibrc" x:style="BORDER|V_SCROLL|H_SCROLL" x:id.contentAssist="matplotlibrc">
      <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true" verticalAlignment="FILL" grabExcessVerticalSpace="true"/>
    </styledText>
  </x:children>
</xswt>
]]></dialogPage>
            <dialogPage id="EXPORT" label="Export"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xswt xmlns:x="http://sweet_swt.sf.net/xswt">

  <import xmlns="http://sweet_swt.sf.net/xswt">
    <package name="java.lang"/>
    <package name="org.eclipse.swt.widgets" />
    <package name="org.eclipse.swt.graphics" />
    <package name="org.eclipse.swt.layout" />
    <package name="org.eclipse.swt.custom" />
    <package name="org.omnetpp.common.wizard.support" />
    <package name="org.omnetpp.ned.editor.wizards.support" />
    <package name="org.omnetpp.cdt.wizard.support" />
  </import>
  <layout x:class="GridLayout" numColumns="2"/>

  <x:children>

    <group text="Image export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="Image file name (w/o extension):"/>
        <text x:id="image_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image width (inches):"/>
        <text x:id="image_export_width" x:id.default="6" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

        <label text="Image height (inches):"/>
        <text x:id="image_export_height" x:id.default="4" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

    <group text="Data export">
      <layoutData x:class="GridData" horizontalSpan="2" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
      <layout x:class="GridLayout" numColumns="2"/>
      <x:children>

        <label text="File name (w/o extension):"/>
        <text x:id="data_export_filename" x:style="BORDER">
          <layoutData x:class="GridData" horizontalAlignment="FILL" grabExcessHorizontalSpace="true"/>
        </text>

      </x:children>
    </group>

  </x:children>
</xswt>
]]></dialogPage>
            <property name="legend_prefer_module_display_paths" value="true"/>
            <property name="matplotlibrc.legend.frameon" value="true"/>
            <property name="matplotlibrc.legend.fancybox" value="false"/>
            <property name="grid_show" value="true"/>
            <property name="vector_end_time" value=""/>
            <property name="linecolor" value=""/>
            <property name="matplotlibrc.figure.facecolor" value=""/>
            <property name="legend_prefer_result_titles" value="true"/>
            <property name="legend_manual" value="false"/>
            <property name="yaxis_title" value="Delay [us]"/>
            <property name="legend_replacements" value=""/>
            <property name="title" value="End-to-End Delay, Constant and Random Clock Drift Rate"/>
            <property name="legend_automatic" value="true"/>
            <property name="vector_operations" value="apply: multiply_by(1000000)"/>
            <property name="cycle_seed" value="0"/>
            <property name="yaxis_log" value="false"/>
            <property name="image_export_height" value="6"/>
            <property name="xaxis_log" value="false"/>
            <property name="legend_placement" value="upper right"/>
            <property name="data_export_filename" value=""/>
            <property name="xaxis_title" value="Simulation Time [s]"/>
            <property name="grid_density" value="Major"/>
            <property name="yaxis_min" value=""/>
            <property name="image_export_filename" value="delay_constant_random"/>
            <property name="xaxis_min" value="0"/>
            <property name="matplotlibrc.axes.facecolor" value=""/>
            <property name="linewidth" value="1.5"/>
            <property name="legend_format" value=""/>
            <property name="filter" value="type =~ vector AND name =~ meanBitLifeTimePerPacket:vector AND&#10;runattr:configname =~ &quot;RandomClockDrift&quot;"/>
            <property name="vector_start_time" value=""/>
            <property name="linestyle" value="solid"/>
            <property name="markersize" value="1"/>
            <property name="drawstyle" value="auto"/>
            <property name="marker" value="none"/>
            <property name="plt.style" value="default"/>
            <property name="legend_show" value="true"/>
            <property name="matplotlibrc.legend.shadow" value="false"/>
            <property name="simplify" value="false"/>
            <property name="yaxis_max" value=""/>
            <property name="xaxis_max" value="0.1"/>
            <property name="image_export_width" value="9"/>
            <property name="matplotlibrc" value="savefig.transparent : True"/>
            <property name="include_fields" value="false"/>
        </chart>
    </charts>
</analysis>
