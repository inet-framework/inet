2013-08-22  ------ inet-2.2.0 released ------

2013-07-25  Tamas Borbely

	Rename and extend parent/child interface data in IPv4MulticastRoute

	- the new names are more common (in/out)
	- subclasses of IPv4MulticastRoute can extend InInterface and OutInterface

	Note: this is not backward compatible change

2013-04-12  Zoltan Bojthe

	FlatNetworkConfigurator, FlatNetworkConfigurator6: changed isIPNode
	detection (node must have both RoutingTable and InterfaceTable)

2013-05-15  Levente Meszaros

	IPvXAddressResolver: Extended interface IPv4 address lookup to also try
	IPv4NetworkConfigurator.

	Fixes when the node is down and interface is not configured yet.

2013-05-15  Levente Meszaros

	IPv4NetworkConfigurator: Changed the way multicast groups are joined

2013-05-10  Levente Meszaros

	IPv4NetworkConfigurator: Changed to compute all network configuration
	only internally and apply them only upon explicit request.

	IMPORTANT: from now on, this module does NOT assign addresses or add
	routes directly, just stores them in its internal data structures.
	Network nodes are supposed to contain an instance of IPv4NodeConfigurator
	(normally part of the network layer compound module) that actually
	configures the node's interface table and routing table based on the
	information stored in the global network configurator module.

2013-05-14  Levente Meszaros

	IPv4NetworkConfigurator: Fixed issue when static routes are re-added to
	the routing table

2013-05-14  Levente Meszaros

	IPv4NodeConfigurator: implemented and added to IPv4NetworkLayer.

	This module has one instance per network node, and it acts like a bridge
	between the node and the network's global configurator module,
	IPv4NetworkConfigurator.

	IPv4NetworkConfigurator only computes and remembers configuration data
	(assigned IP addresses, static routes, etc), but does configure the nodes'
	routing tables and interfaces accordingly. The actual configuration is
	is carried out by this module, at network initialization time and also when
	the node restarts (i.e. after a shutdown or a crash.)

	This module is needed because of failure/restart scenarios:
	IPv4NetworkConfigurator would not be able to configure the node after
	a restart, because being a global module, it doesn't know about node
	lifecycle events.

2013-04-24  Andras Varga

	IPv4NetworkConfigurator: workaround crash when a node is down; added
	plan to resolve it (Levy)

2013-04-27  Andras Varga

	InterfaceTable, RoutingTable: added lifecycle support

2013-03-14  Levente Meszaros

	Fixed IPv4NetworkConfigurator bug sometimes not being able to assign
	addresses. Changed to assign the most constrained addresses first.

2013-03-21  Levente Meszaros

	IPv4NetworkConfigurator: Changed to support mixed wired and wireless
	LANs for autoconfiguration.

2013-03-21  Levente Meszaros

	IPv4NetworkConfigurator: Added dumpLinks parameter.

2013-04-03  Levente Meszaros

	IPv4NetworkConfigurator: Replaced call to AddressResolver with member
	variable access.

2013-02-22  Andras Varga

	IPv4NetworkConfigurator: added @groups to <interface>

2013-01-30  ------ inet-2.1.0 released ------

2012-09-13  Zoltan Bojthe

	HostAutoConfigurator:
	Added check for detecting too small netmask parameter value

2012-08-07  ------ inet-2.0.0 released ------

2012-06-25  ------ inet-1.99.5 released ------

2012-06-18  Rudolf Hornig

	Added HostAutoConfigurator module (as it is required by the TraCI modules/examples)
	This configurator is deprectaed and should be used ONLY if the hosts are
	dynamically created/deleted during the simulation. Otherwise please use the
	new IPv4NetworkConfigurator.

2012-06-15  Zoltan Bojthe

	IPv4NetworkConfigurator:
	- XML config changes:
	  - added @among attribute for interface and multicast-group entries:
	    "among='X Y Z'"   means   "hosts='X Y Z' towards='X Y Z'"
	  - added @metric attribute for interface entry in XML
	  - added @id attribute for wireless entry
	- bugfixes:
	  - searching for the mgmnt module must be started from the interface module.
	    Previously it started from the 'host' so the first mgmnt module was found
	    in the host instead of the mgmnt module that belongs to the interface.
	  - use string instead char pointer in maps in extractWirelessTopology()
	  - skip interfaces during configuration if the IPv4Data member is NULL
	  - configure only the interfaces that were specified in the XML configuration
	  - skip nodes during configuration if they do not have a RoutingTable
	  - dumpConfig: dump linklocal multicast addresses, too
	- documentation fixes:
	  - @towards was missed from multicast-group
	  - fixed the default value of the config parameter

2012-03-20  ------ inet-1.99.4 released ------

2012-03-04  Levente Meszaros

	Added IPv4Configurator, a new network configurator for IPv4

	This is intended to replace both routing files (.irt/.mrt) and
	specialized network configurators like FlatNetworkConfigurator,
	and do much more.

	Covers address assignment (manual, automatic), adding manual routes,
	setting up static routing, optimizing the routing tables, etc.
	Unlike FlatNetworkConfigurator, it will generate per-interface
	addresses. Wireless networks are also supported.

2012-02-24  ------ inet-1.99.3 released ------

2012-01-19  Andras Varga

	Adapted to change: "host" in IPv4Route renamed to "destination"

2012-01-19  Zoltan Bojthe

	FlatnetworkConfigurator: refined WeightedTopology support

2011-12-19  Zoltan Bojthe

	bugfix for #465: FlatNetworkConfigurator calculated wrong paths
	when multihomed hosts were present. Solution: if IPForward==false
	for a host, add it with weight=INFINITY to the graph so no routes
	will go through it. Requires base/WeightedTopology (or OMNeT++ 4.3
	when it'll be available)

2011-12-15  Andras Varga

	NetworkConfigurator removed (it was incomplete; added back on a branch)

2011-11-18  ------ INET-1.99.2 released ------

2011-06-03  Andras Varga

	cosmetics: space usage made somewhat more consistent throughout the code

	Notes:
	- if you have an INET fork and want to compare the code, use the
	 "Ignore spaces" option of your visual diff tool. Most tools have
	 this option; Meld and Araxis Merge certainly do.

	- I used omnetpp/_scripts/tidymodel/spaces.pl, plus some manual tweaks

2011-05-30  ------ INET-1.99.1 released ------

2011-05-26  Zoltan Bojthe

	Renamed IP... classes to IPv4... or IPvX...

2011-03-03  Zoltan Bojthe

	Project Features support: autorouting/ split into autorouting/ipv4/
	and autorouting/ipv6/

2011-03-03  ------ INET-1.99.0 released ------

2011-02-22  Andras Varga

	Swiched NED documentation comments to explicit hyperlinking of NED
	type names, using tilde. Example: "TCP" was changed to "~TCP"
	wherever the module and not the protocol was meant.

	The reason for the switch was that autolinking produced too many
	false hits (e.g. "TCP connection" and "IP address" would link
	to the TCP and IP modules.)

2011-01-13  Zoltan Bojthe

	code style

2010-06-21  Zoltan Bojthe

	indent changes - from Thomas Reschka

2009-07-18  Andras Varga

	added @labels(node) to hosts/routers so that they appear at top of the
	palette when editing a network (in OMNeT++ 4.1+)

2009-03-25  ------ INET-20090325 released ------

2008-05-07  Andras Varga

	FlatNetworkConfigurator to use @node properties instead of moduleTypes
	parameter

2008-01-01..2009-03-25  Andras Varga, Rudolf Hornig

	Porting of INET to OMNeT++ 4.0, and some general face lift:
	* better directory structure (names changed to lowercase; moved sources
	  under src/; better names, e.g. networkinterfaces -> linklayer)
	* build system to use a deep makefile
	* updated the C++ code for the 4.0 API (follow name changes; use
	  int64-based simtime_t; use cPacket; etc.)
	* NED files converted to 4.0 syntax
	* make use of new features in NED files (module interfaces, inout
	  gates, @unit, etc.)

2005-07-03  Andras Varga

	* FlatNetworkConfigurator[6]: nonIPModuleTypes are now implicitly added
	to moduleTypes. Before, one had to add e.g. EtherSwitch to both -- now
	it's enough to add it to nonIPModuleTypes.

2005-07-03  Andras Varga

	* FlatNetworkConfigurator[6]: nonIPModuleTypes are now implicitly added
	to moduleTypes. Before, one had to add e.g. EtherSwitch to both -- now
	it's enough to add it to nonIPModuleTypes.

2004-08-03  Andras Varga

	Initial checkin of FlatNetworkConfigurator.

	If you are interested in the early history of the code,
	change to the project root and type

	$ gitk -- Network/AutoRouting INET/src/networklayer/autorouting
