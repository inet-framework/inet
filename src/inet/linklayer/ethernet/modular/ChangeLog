====== inet-4.x ======

2024-10-29  ------ inet-4.5.4 released ------

2023-04-25  Levente Mészáros

	EthernetFcsInserter: Copy received FCS for cut-through packets.

	The FCS is forwarded as is, see EthernetCutthroughInterface for more
	details.

2023-04-05  Zoltan Bojthe

	EthernetFcsChecker: Skip checking Ethernet FCS for cut-through packets.

	The FCS is forwarded as is without dropping incorrect frames. The first
	non cut-through node checks the FCS. See EthernetCutthroughInterface for
	more details.

2023-08-29  ------ inet-4.5.2 released ------

2023-08-24  ------ inet-4.5.1 released ------

2023-04-04  ------ inet-4.5.0 released ------

2023-02-20  Levente Mészáros

	*CutthroughSource: Copied region tags from cut-through data to cut-through buffer.
	This allows using the receptionStart/transmissionStart residence time measurement.

2023-01-17  Levente Mészáros

	EthernetCutthroughSource: Added isEligibleForCutthrough method to allow cut-through decisions
	on a per packet basis. gPTP packets are not eligible for cut-through switching because that
	would cause problems with attaching the ingress timestamp on the packet end.
	EthernetCutthrough: Fixed removeAt calls to use offset relative to the whole packet.

2023-01-05  Levente Mészáros

	EthernetCutthroughSink: Added code to remove the CutthroughTag from the processed packet.
	Added EthernetCutthroughBarrier module that waits until a cut-through packet is completely received.

2022-12-21  Levente Mészáros

	EthernetMacHeaderChecker: Added support for ProtocolEncapsulationInd tag.

2022-12-19  Levente Mészáros

	EthernetCutthroughInterface: Changed base module to LayeredEthernetInterface and eliminated common parts.

2022-12-13  Andras Varga

	threads-support: various registries to use getSharedVariable() instead of global variables.
	Mutable global variables are not allowed when multiple simulations are run concurrently using threads.

2022-12-08  Levente Mészáros

	EthernetCutthrough*: Refactored to pass up cut-through packets with a StreamBufferChunk.

	The old implementation directly streamed packets from one interface to
	the other, the new implementation passes the incoming packet up just like
	normal packets. The difference for cut-through switching is that the
	cut-through source doesn't wait until the whole packet is received, but
	only a portion of it. The packet contains a special chunk type for the
	remaining part that states that this part is continuously being filled up.

2022-12-08  Levente Mészáros

	EthernetCutthroughInterface: Removed the obsolete C++ class for cut-through switching.
	NED: Moved cut-through switching source and sink modules into the PHY layer.
	Removed the extra message dispatcher that connected cut-through modules.
	Deleted obsolete cutthroughIn/cutthrougOut gates.

2022-11-16  Levente Mészáros

	EthernetCutthroughSource: Moved filling InterfaceReq earlier to be present during the canPushPacket() call.

2022-11-09  Levente Mészáros

	EthernetMacLayer: Added serveShcedulingPriority parameter assignment to create a separate event
	for pulling the packet from the queue.

	This is required in order to allow all gates to open/close at the same simulation time and still
	properly pull the packet from the highest priority traffic category.

2022-05-13  ------ inet-4.4.0 released ------

2022-04-06  Levente Mészáros

	EthernetFragmentFcsInserter: Changed to make sure the packet is trimmed at
	the back before inserting the FCS.
	Ethernet*MacLayer: Refactored the TSN specific modules to be independent
	of the standard EthernetMacLayer.
	EthernetMacLayer: Removed Ethernet FCS insertions and optional streaming.
	EthernetLayer: Added Ethernet FCS insertion and checking to the protocol layer.
	EthernetFcsChecker: Implemented the IProtocolRegistrationListener interface.
	EthernetFcsChecker: Added popFcs parameter.

2022-01-14  Levente Mészáros

	EthernetCutthroughSource: Added support for multicast destination addresses.

2022-01-13  Levente Mészáros

	Renamed data members to reflect type name.
	Replaced IMacAddressTable with IMacForwardingTable in all usages.
	Replaced obsolete IMacAddressTable calls with new IMacForwardingTable calls.

2021-11-15  Rudolf Hornig

	Added @mutable property for OMNeT++ 6 compatibility.

2021-09-15  Levente Mészáros

	EthernetCutthroughInterface: Completed support for interrupting the packet
	streaming flow on the cut-through gates.
	EthernetMacLayer: Added C++ class that handles carrier lost.

2021-06-24  Levente Mészáros

	Ethernet*MacLayer: Fixed optional queue submodule condition after adding omittedTypename.

2021-06-18  Levente Mészáros

	Replaced default Omitted* typenames with "" now that the module interfaces specify them.

2021-05-07  Zoltan Bojthe

	Added parent or this to parameter access for OMNeT++ 6 compatibility.

2021-04-19  Zoltan Bojthe

	Switch to using ModuleRef, ModuleRefByPar, opp_component_ptr for pointers to other modules.

2021-04-01  Levente Mészáros

	Ethernet*MacLayer: Added a lifetimer submodule to purge the queue if necessary.

2021-03-19  Zoltan Bojthe

	Changed if-else-if ladders in initialize() to separate if statements because
	different stages may have the same number.

2021-03-17  Zoltan Bojthe

	Ethernet interfaces: Set EthernetSignal label for phys gate.

2021-02-03  Levente Mészáros

	EthernetPreemptingMacLayer: Added deep parameter assignment to pass down
	the bitrate parameter.

2021-01-28  Levente Mészáros

	EthernetMacLayer: Added deep parameter assignment to pass down the bitrate
	parameter of the interface.

2021-01-11  ------ inet-4.3.0 released ------

2020-10-30  Levente Mészáros

	Added new layered Ethernet model package with more composable modules. The
	new model contains separate modules for header insertion, header checking,
	socket handling, etc. It supports more advanced features such as Ethernet
	preemption and cut-through. The model provides great flexibility for research.

	Added new modules: EthernetAddressChecker, EthernetAddressInserter,
	EthernetCutthroughInterface, EthernetCutthroughLayer, EthernetCutthroughSink,
	EthernetCutthroughSource, EthernetFcsChecker, EthernetFcsInserter,
	EthernetFragmentFcsChecker, EthernetFragmentFcsInserter, EthernetFragmentingMacLayer,
	EthernetLayer, EthernetMacHeaderChecker, EthernetMacHeaderInserter, EthernetMacLayer,
	EthernetPauseCommandProcessor, EthernetPreemptingMacLayer, EthernetPriorityQueue,
	EthernetQueue, EthernetSelectiveQueue, EthernetSocketCommandProcessor,
	EthernetSocketPacketProcessor, EthernetSocketTable, EthernetStreamingMacLayer,
	EthernetTypeOrLengthChecker, EthernetTypeOrLengthInserter, IEthernetLayer,
	IEthernetMacLayer, LayeredEthernetInterface.\n