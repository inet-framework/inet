//
// Copyright (C) 2012 Opensim Ltd.
// Author: Tamas Borbely
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//

package inet.common.queue;

//
// This module implements a passive FIFO queue
// with unlimited buffer space. It can be combined
// with algorithmic droppers and schedulers to form
// an IOutputQueue compound module.
//
// The C++ class implements the IQueueAccess and IPassiveQueue
// interfaces.
//
simple FifoQueue
{
    parameters:
        string queueName = default("l2queue"); // name of the cQueue object, used in the 'q' tag of the display string
        @display("i=block/passiveq");
        @signal[packetReceived](type=cPacket);
        @signal[packetEnqueued](type=cPacket);
        @signal[packetDequeued](type=cPacket);
        @signal[packetDropped](type=cPacket);
        @signal[queueingTime](type=simtime_t; unit=s);
        @signal[queueLength](type=long);
        @statistic[packetReceived](title="received packets"; record=count,"sum(packetBytes)","vector(packetBytes)"; interpolationmode=none);
        @statistic[dropPk](title="dropped packets"; source=packetDropped; record=count,"sum(packetBytes)","vector(packetBytes)"; interpolationmode=none);
        @statistic[queueingTime](title="queueing time"; record=histogram,vector; interpolationmode=none);
        @statistic[queueLength](title="queue length"; record=max,timeavg,vector; interpolationmode=sample-hold);
    gates:
        input in[];
        output out;
}

