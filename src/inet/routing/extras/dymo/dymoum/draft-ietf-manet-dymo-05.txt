


Mobile Ad hoc Networks Working                               I. Chakeres
Group                                                             Boeing
Internet-Draft                                                C. Perkins
Expires: December 22, 2006                                         Nokia
                                                           June 20, 2006


                 Dynamic MANET On-demand (DYMO) Routing
                        draft-ietf-manet-dymo-05

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on December 22, 2006.

Copyright Notice

   Copyright (C) The Internet Society (2006).

Abstract

   The Dynamic MANET On-demand (DYMO) routing protocol is intended for
   use by mobile nodes in wireless multihop networks.  It offers
   adaptation to changing network topology and determines unicast routes
   between nodes within the network on-demand.






Chakeres & Perkins      Expires December 22, 2006               [Page 1]

Internet-Draft                    DYMO                         June 2006


Table of Contents

   1.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  4
   2.  Applicability  . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  5
   4.  Data Structures  . . . . . . . . . . . . . . . . . . . . . . .  6
     4.1.  Route Table Entry  . . . . . . . . . . . . . . . . . . . .  6
     4.2.  DYMO Messages  . . . . . . . . . . . . . . . . . . . . . .  7
       4.2.1.  Generalized MANET Packet and Message Structure . . . .  7
       4.2.2.  Routing Message (RM) . . . . . . . . . . . . . . . . .  8
       4.2.3.  Route Error (RERR) . . . . . . . . . . . . . . . . . . 10
   5.  Detailed Operation . . . . . . . . . . . . . . . . . . . . . . 12
     5.1.  DYMO Sequence Numbers  . . . . . . . . . . . . . . . . . . 12
       5.1.1.  Maintaining A Node's Own Sequence Number . . . . . . . 12
       5.1.2.  Incrementing a Sequence Number . . . . . . . . . . . . 13
       5.1.3.  Sequence Number Rollover . . . . . . . . . . . . . . . 13
       5.1.4.  Actions After Sequence Number Loss . . . . . . . . . . 13
     5.2.  DYMO Routing Table Operations  . . . . . . . . . . . . . . 13
       5.2.1.  Judging New Routing Information's Usefulness . . . . . 13
       5.2.2.  Updating a Route Table Entry with Fresh Routing
               Information  . . . . . . . . . . . . . . . . . . . . . 14
       5.2.3.  Route Table Entry Timeouts . . . . . . . . . . . . . . 15
     5.3.  Routing Message  . . . . . . . . . . . . . . . . . . . . . 15
       5.3.1.  RREQ Creation  . . . . . . . . . . . . . . . . . . . . 15
       5.3.2.  RREP Creation  . . . . . . . . . . . . . . . . . . . . 16
       5.3.3.  RM Processing  . . . . . . . . . . . . . . . . . . . . 16
       5.3.4.  Adding Additional Routing Information to a RM  . . . . 18
     5.4.  Route Discovery  . . . . . . . . . . . . . . . . . . . . . 18
     5.5.  Route Maintenance  . . . . . . . . . . . . . . . . . . . . 19
       5.5.1.  Active Link Monitoring . . . . . . . . . . . . . . . . 19
       5.5.2.  Updating Route Lifetimes during Packet Forwarding  . . 20
       5.5.3.  Route Error Generation . . . . . . . . . . . . . . . . 20
       5.5.4.  Route Error Processing . . . . . . . . . . . . . . . . 21
     5.6.  General DYMO Packet and Message Processing . . . . . . . . 21
       5.6.1.  Receiving Packets  . . . . . . . . . . . . . . . . . . 21
       5.6.2.  Processing Unknown Message and TLV Types . . . . . . . 21
     5.7.  Network Addresses  . . . . . . . . . . . . . . . . . . . . 22
     5.8.  Simple Internet Attachment and Gatewaying  . . . . . . . . 22
     5.9.  Multiple Interfaces  . . . . . . . . . . . . . . . . . . . 23
     5.10. Packet Generation Limits . . . . . . . . . . . . . . . . . 24
   6.  Configuration Parameters . . . . . . . . . . . . . . . . . . . 24
   7.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 24
     7.1.  DYMO Message Type Specification  . . . . . . . . . . . . . 25
     7.2.  Packet TLV Type Specification  . . . . . . . . . . . . . . 25
     7.3.  Address Block TLV Specification  . . . . . . . . . . . . . 26
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 26
   9.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 27
   10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 27



Chakeres & Perkins      Expires December 22, 2006               [Page 2]

Internet-Draft                    DYMO                         June 2006


     10.1. Normative References . . . . . . . . . . . . . . . . . . . 27
     10.2. Informative References . . . . . . . . . . . . . . . . . . 28
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 29
   Intellectual Property and Copyright Statements . . . . . . . . . . 30















































Chakeres & Perkins      Expires December 22, 2006               [Page 3]

Internet-Draft                    DYMO                         June 2006


1.  Overview

   The Dynamic MANET On-demand (DYMO) routing protocol enables reactive,
   multihop routing between participating nodes that wish to
   communicate.  The basic operations of the DYMO protocol are route
   discovery and route management.  During route discovery the
   originating node initiates dissemination of a Route Request (RREQ)
   throughout the network to find the target node.  During this
   dissemination process, each intermediate node records a route to the
   originating node.  When the target node receives the RREQ, it
   responds with a Route Reply (RREP) unicast toward the originating
   node.  Each node that receives the RREP records a route to the target
   node, and then the RREP is unicast toward the originating node.  When
   the originating node receives the RREP, routes have then been
   established between the originating node and the target node in both
   directions.

   In order to react to changes in the network topology nodes maintain
   their routes and monitor their links.  When a data packet is received
   for a route or link that is no longer available the source of the
   packet is notified.  A Route Error (RERR) is sent to the packet
   source to indicate the current route is broken.  Once the source
   receives the RERR, it can perform route discovery if it still has
   packets to deliver.

   DYMO uses sequence numbers as they have been proven to ensure loop
   freedom [Perkins99].  Sequence numbers enable nodes to determine the
   order of DYMO route discovery messages, thereby avoiding use of stale
   routing information.


2.  Applicability

   The DYMO routing protocol is designed for mobile ad hoc networks in
   small, medium, and large node populations.  DYMO handles all mobility
   ranges.  DYMO can handle various traffic patterns, but is most suited
   for sparse traffic sources and destinations.  DYMO is designed for
   network where trust is assumed, since it depends on nodes properly
   forwarding traffic to the next hop toward the destination on behalf
   of the source.

   DYMO is applicable to memory constrained devices, since little
   routing state needs to be maintained.  Only routing information
   related to active destinations must be maintained, as opposed to
   other routing protocols where routing information to all destinations
   or a large population destinations must be maintained.

   The routing algorithm in DYMO may be operated at layers other than



Chakeres & Perkins      Expires December 22, 2006               [Page 4]

Internet-Draft                    DYMO                         June 2006


   the network layer, using layer-appropriate addresses.  Only
   modification of the packet format is required.  The routing algorithm
   need not change.


3.  Terminology

   The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
   NOT","SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in
   this document are to be interpreted as described in RFC2119
   [RFC2119].

   This document defines the following terminology:

   DYMO Sequence Number (SeqNum)
      A DYMO Sequence Number is maintained by each node.  This sequence
      number is used to identify the freshness of related routing
      information and to ensure loop-free routes.

   Hop Count (HopCnt)
      The number of IP hops a message or piece of information must
      traverse to reach the node holding this information.

   Originator (Orig)
      The originator is the node that created a DYMO Message in an
      effort to disseminate information.

   Route Error (RERR)
      A node generates a RERR to disseminate that it does not have valid
      route to a particular destination, or set of destinations.

   Route Reply (RREP)
      Upon receiving a RREQ during route discovery, the target node
      generates a Route Reply (RREP).  A RREP is used to disseminate
      routing information, on how to reach the target, to nodes between
      the target and the RREQ originator.

   Route Request (RREQ)
      A node generates a RREQ to discover a valid route to a particular
      destination, called the target.  A RREQ also disseminates routing
      information on how to reach the originator of the RREQ.

   Target
      The target node is the ultimate destination of a message.  For
      RREQ the target is the desired destination.  For RREP the target
      is the originator of the RREQ.





Chakeres & Perkins      Expires December 22, 2006               [Page 5]

Internet-Draft                    DYMO                         June 2006


   Valid Route
      A valid route is a known route where the Route.ValidTimeout is
      greater than the current time.  Valid routes may be used to
      forward data.

   When describing DYMO messages, information found in the:

   IP header is proceeded with 'IP.'

   UDP header is proceeded with 'UDP.'

   packetbb message header is proceeded with 'MsgHdr.'

   packetbb message TLVs is proceeded with 'MsgTLV.'

   packetbb address blocks is proceeded with 'AddBlk.'

   packetbb address block TLVs is proceeded with 'AddTLV.'


4.  Data Structures

4.1.  Route Table Entry

   The route table entry is a conceptual data structure.
   Implementations may use any internal representation that conforms to
   the semantics of a route as specified in this document.  The number
   zero (0) is reserved and can be used to indicate that the field value
   for this routing entry is unknown or invalid.

   A routing table entry has the following fields:

   Route.Address
      The IP destination address of the node associated with the routing
      table entry.

   Route.SeqNum
      The DYMO SeqNum associated with this routing information.

   Route.NextHopAddress
      The IP address of the next node on the path toward the
      Route.Address.

   Route.NextHopInterface
      The interface used to send packets toward the Route.Address.






Chakeres & Perkins      Expires December 22, 2006               [Page 6]

Internet-Draft                    DYMO                         June 2006


   Route.ValidTimeout
      The time at which a route table entry is no longer valid.

   Route.DeleteTimeout
      If the current time is after Route.DeleteTimeout the corresponding
      routing table entry MUST be deleted.

   The following fields are optional:

   Route.HopCnt
      The number of intermediate node hops traversed before reaching the
      Route.Address node.

   Route.IsInternetGateway
      1-bit selector indicating whether the Route.Address is a an
      Internet gateway, see Section 5.8.

   Route.Prefix
      Indicates that the associated address is a network address, rather
      than a host address.  The value is the length of the netmask/
      prefix.  If prefix is set to zero (0), unknown, or equal to the
      address length in bits, this address is a host address.  The
      definition of Route.Prefix is different for gateways; entries with
      Route.IsInternetGateway set to one (1), seeSection 5.8.

   Route.Used
      1-bit selector indicating whether this Route has been used to
      forward data toward the destination.

   Not including this optional information may result in sub-optimal
   performance, but it is not required for correct protocol operation.

4.2.  DYMO Messages

4.2.1.  Generalized MANET Packet and Message Structure

   All DYMO messages conform to the generalized packet and message
   format as described in[I-D.ietf-manet-packetbb].

   All DYMO messages are sent using UDP to the destination port TBD.

   All DYMO messages are sent with the IP destination address set to the
   link local multicast address LL_ALL_MANET_ROUTER unless otherwise
   stated.

   The IP TTL (IP Hop Limit) field for all DYMO messages is set to one
   (1).




Chakeres & Perkins      Expires December 22, 2006               [Page 7]

Internet-Draft                    DYMO                         June 2006


   The length of IP addresses (32-bits for IPv4 and 128-bits for IPv6)
   inside DYMO messages are dependent on the IP packet header.  For
   example, if the IP header uses IPv6 addresses then all messages and
   addresses contained in the payload use IPv6 addresses.  In the case
   of mixed IPv6 and IPv4 addresses, IPv4 addresses are carried in IPv6
   as specified in [RFC3513].

4.2.2.  Routing Message (RM)

   Routing Messages (RM) are used to disseminate routing information.
   There are two DYMO message types that are RM, RREQ and RREP.  They
   contain the same information, but have slightly different processing
   rules.  The fundamental difference between the two messages are that
   RREQ messages require a response; while a RREP is the response to
   RREQ.

   RM creation and processing are described in Section 5.3.

   A RM requires the following information:

   IP.DestinationAddress
      The IP address of the packet destination.

   MsgHdr.HopLimit
      The remaining number of hops this message may traverse.

   AddBlk.Target.Address
      The IP address of the message target.  In RREQ the target is the
      unknown destination.  In RREP the target is the RREQ originator.
      Only one address can be marked as the target.

   AddBlk.Orig.Address
      The IP address of the message originator.  This address is in an
      address block and not in the message header to allow for address
      compression and additional AddTLVs.

   AddTLV.Orig.SeqNum
      The DYMO sequence number of the message originator.

   A RM may optionally include the following information:

   AddTLV.Target.SeqNum
      The last known DYMO sequence number of the target.  If the
      AddTLV.Target.SeqNum is set to zero (0), then only the destination
      may respond to this RREQ.






Chakeres & Perkins      Expires December 22, 2006               [Page 8]

Internet-Draft                    DYMO                         June 2006


   AddBlk.AdditionalNode.Address
      The IP address of an additional node that can be reached via the
      node adding this information.  Each AdditionalNode.Address must
      have an associated SeqNum in the message.

   AddTLV.AdditionalNode.SeqNum
      The DYMO sequence number of the additional node's routing
      information.

   AddTLV.Node.HopCnt
      The number of IP hops to reach the associated Node.Address.

   AddTLV.Node.Prefix
      The Node.Address is a network address ([I-D.ietf-manet-packetbb]).

   AddTLV.Node.IsGateway
      This AddTLV indicates that the Internet is reachable via this
      node.  That is, all nodes outside this Node's prefix are reachable
      via the advertising Node.

   AddTLV.Node.IsTarget
      If the target is not the first address in the address blocks, this
      AddTLV is used to indicate the target.

   AddTLV.Node.IsOriginator
      In the event that the originator is not the second address in the
      address blocks, this AddTLV is used to indicate the originator.

   AddTLV.AdditionalNode.IsOffPath
      This AddTLV is used to indicate that a node is not on the path
      between the originator and the target.

   AddTLV.Node.Ignore
      If the information associated with this Node.Address should not be
      used create or update a route, this flag is set.

   Not including this optional information may result in sub-optimal
   performance, but it is not required for correct protocol operation.













Chakeres & Perkins      Expires December 22, 2006               [Page 9]

Internet-Draft                    DYMO                         June 2006


   Example IPv4 RREQ

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1

   IP Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |         IP.DestinationAddress=LL_ALL_MANET_ROUTERS            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...

   UDP Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |     Destination Port=TBD      |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...
   Message Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |   RREQ-type   |  Resv   |0|0|1|         msg-size=24           |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | msg-hoplimit  |  msg-hopcnt   |      msg-tlv-block-size=0     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...
   Address Block
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |Number Addrs=2 |0|HeadLength=24|             Head              :
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       :  Head (cont)  |  Target.Tail  |   Orig.Tail   |  TLV-blk-size :
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       : size=7 (cont) |
       +-+-+-+-+-+-+-+-+
   ...
   Address TLVs
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |DYMOSeqNum-type| Resv  |1|0|0|0| Index Start=1 | Index Stop=1  |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | tlv-length=16 |          Orig.SeqNum          |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Figure 1

4.2.3.  Route Error (RERR)

   RERR are used to disseminate that a valid route is not available for
   a particular destination, or set of destinations.

   RERR creation and processing are described in Section 5.5.3 and



Chakeres & Perkins      Expires December 22, 2006              [Page 10]

Internet-Draft                    DYMO                         June 2006


   Section 5.5.4.

   A RERR requires the following information:

   IP.DestinationAddress
      The IP address of the packet destination.

   MsgHdr.HopLimit
      The remaining number of hops this message may traverse.

   AddBlk.Unreachable.Address
      The IP address of an Unreachable Node.  Multiple Unreachable
      Addresses may be included.  If a SeqNum for this address is not
      included, it is assumed to be unknown.

   A Route Error may optionally include the following information:

   AddTLV.Unreachable.SeqNum
      The DYMO sequence number of the Unreachable Node.

   AddTLV.Node.Ignore
      If the information associated with Node.Address should not be used
      to invalidate routes, this flag is set.




























Chakeres & Perkins      Expires December 22, 2006              [Page 11]

Internet-Draft                    DYMO                         June 2006


   Example IPv4 RERR

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1

   IP Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |         IP.DestinationAddress=LL_ALL_MANET_ROUTERS            |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...

   UDP Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |     Destination Port=TBD      |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...
   Message Header
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |   RERR-type   |  Resv   |0|0|1|         msg-size=16           |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       | msg-hoplimit  |  msg-hopcnt   |      msg-tlv-block-size=0     |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ...
   Address Block
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |Number Addrs=1 |0|HeadLength=0 |       Unreachable.Addr        :
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       :    Unreachable.Addr (cont)    |        TLV-blk-size=0         |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   Figure 2


5.  Detailed Operation

5.1.  DYMO Sequence Numbers

   DYMO sequence numbers allow nodes to judge the freshness of routing
   information, and ensure loop freedom.

5.1.1.  Maintaining A Node's Own Sequence Number

   DYMO requires a each node in the network to maintain its own DYMO
   sequence number (OwnSeqNum), a 16-bit unsigned integer.  The
   circumstances for a node to incrementing its OwnSeqNum are described
   in Section 5.3.




Chakeres & Perkins      Expires December 22, 2006              [Page 12]

Internet-Draft                    DYMO                         June 2006


5.1.2.  Incrementing a Sequence Number

   When a node increments its OwnSeqNum (as described in Section 5.3) it
   MUST do so by treating the sequence number value as if it was an
   unsigned number.  The sequence number zero (0) is reserved and is
   used in several DYMO data structures to represent an unknown sequence
   number.

5.1.3.  Sequence Number Rollover

   If the sequence number has been assigned to be the largest possible
   number representable as a 16-bit unsigned integer (i.e., 65535), then
   the sequence number MUST be set to 256 when incremented.  Setting the
   sequence number to 256 allows other nodes to detect that the number
   has rolled over and the node has not lost its sequence number.

5.1.4.  Actions After Sequence Number Loss

   A node can maintain its sequence number in persistent storage,
   between reboots.

   If a node's OwnSeqNum is lost, it must take certain actions to avoid
   creating routing loops.  To prevent this possibility after OwnSeqNum
   loss a node MUST wait for at least ROUTE_DELETE_PERIOD before fully
   participating in the DYMO routing protocol.  If a DYMO control
   message is received during this waiting period, the node SHOULD
   process it normally but MUST not transmit or retransmit any DYMO
   messages.  If a data packet is received for forwarding to another
   destination during this waiting period, the node MUST generate a RERR
   message indicating that this route is not available and reset its
   waiting period.  RERR generation is described in Section 5.5.3.  At
   the end of the waiting period a node sets its OwnSeqNum to one (1).

5.2.  DYMO Routing Table Operations

5.2.1.  Judging New Routing Information's Usefulness

   Given a routing table entry (Route.SeqNum, Route.HopCnt, and
   Route.ValidTimeout) and new routing information for a particular node
   in a RM (Node.SeqNum, Node.HopCnt, and RM message type - RREQ/RREP),
   the quality of the new routing information is evaluated to determine
   its usefulness.  The following comparisons are performed in order:

   1. Stale
      If Node.SeqNum - Route.SeqNum < 0 (using signed 16-bit arithmetic)
      the information is stale.  Using stale routing information is not
      allowed, since doing so might result in routing loops.




Chakeres & Perkins      Expires December 22, 2006              [Page 13]

Internet-Draft                    DYMO                         June 2006


   2. Loop-prone
      If Node.SeqNum == Route.SeqNum the information maybe loop-prone,
      additional information must be examined.  If Route.HopCnt is
      unknown or set to zero (0), then the routing information is loop-
      prone.  Likewise, if Node.HopCnt is unknown or set to zero (0),
      then the routing information is loop-prone.  If Node.HopCnt >
      Route.HopCnt + 1, then the routing information is loop-prone.
      Using loop-prone routing information is not allowed, since doing
      so might result in routing loops.

   3. Inferior
      If Node.SeqNum == Route.SeqNum the information may be inferior,
      additional information must be examined.  If the route is valid
      (by examining Route.ValidTimeout and the current time), then the
      new information is inferior if Node.HopCnt > Route.HopCnt.  If the
      route is valid, then the new information is also inferior if
      Node.HopCnt == Route.HopCnt AND this RM is a RREQ.

   4. Fresh
      Routing information that does not match any of the above criteria
      is loop-free and better than the information existing in the
      routing table.  Only this type of information is used to update
      the routing table.

5.2.2.  Updating a Route Table Entry with Fresh Routing Information

   If fresh routing information is received, the routing table entry is
   populated with the following information:

   1.  the Route.Address is set to Node.Address,

   2.  the Route.SeqNum is set to the Node.SeqNum,

   3.  the Route.NextHopAddress is set to the node that transmitted this
       DYMO packet (IP.SourceAddress),

   4.  the Route.NextHopInterface is set to the interface that this DYMO
       packet was received on,

   5.  the Route.ValidTimeout is set to the current time +
       ROUTE_VALID_TIMEOUT,

   6.  the Route.HopCnt is set to the Node.HopCnt,

   7.  the Route.Prefix is set to the Node.Prefix,

   8.  the Route.IsInternetGateway is set if address is an Internet
       Gateway.



Chakeres & Perkins      Expires December 22, 2006              [Page 14]

Internet-Draft                    DYMO                         June 2006


   Unknown values are set to zero (0).

   If a valid route exists to Node.Address at this point, the route can
   be used to send any queued data packets and to fulfill any
   outstanding RREQ.

5.2.3.  Route Table Entry Timeouts

   Before using a routing table entry its timeouts must be examined.

   If the current time is after Route.DeleteTimeout the corresponding
   routing table entry MUST be deleted.

   If the current time is later than a routing entry's
   Route.ValidTimeout, the route is stale and cannot be used to route
   packets.  The information in invalid entries is still used for
   filling fields in outgoing RM with last known values.

5.3.  Routing Message

5.3.1.  RREQ Creation

   When a node creates a RREQ it SHOULD increment its OwnSeqNum by one
   (1) according to the rules specified in (Section 5.1.2).

   Fist, the node adds the AddBlk.Target.Address to the RM.

   If a previous value of the Target.SeqNum is known (from an existing
   routing table entry), it SHOULD be placed in AddTLV.Target.SeqNum.
   If a Target.SeqNum is not included, it is assumed to be unknown by
   processing nodes and only the target is allowed to respond.  A
   Target.SeqNum of zero (0) MAY be set to indicate that any node with
   valid routing information about this destination can respond to this
   RREQ if the node is so enabled, though the process for doing so is
   not described in this document.

   Similarly, if a previous value of the Target.HopCnt is known, it
   SHOULD be placed in AddTLV.Target.HopCnt.  Otherwise, the HopCnt is
   not included and assumed unknown by processing nodes.

   These AddTLVs associated with the target SHOULD be set to maximum
   protocol efficiency, but they may be omitted to reduce message size.

   Next, the node adds AddBlk.Orig.Address to the RM and the
   AddTLV.Orig.SeqNum (OwnSeqNum) in an address block TLV.  The
   Orig.Address is this node's primary addresses/identifier.  The
   Orig.Address must be a routable IP address.




Chakeres & Perkins      Expires December 22, 2006              [Page 15]

Internet-Draft                    DYMO                         June 2006


   Other AddTLVs for the originator SHOULD be set to maximum protocol
   efficiency, but they may be omitted to reduce message size.

   The MsgHdr.HopCnt is set to zero (0).  The MsgHdr.HopLimit SHOULD be
   set to NET_DIAMETER, but MAY be set smaller.  For RREQ, the
   MsgHdr.HopLimit MAY be set in accordance with an expanding ring
   search as described in [RFC3561] to limit the RREQ propagation to a
   subset of the network and possibly reduce route discovery overhead.

5.3.2.  RREP Creation

   When a node creates a RREP in response to a RREQ, it MUST increment
   its OwnSeqNum under the following conditions:

   o  Target.SeqNum is not included in the message, OR

   o  Target.SeqNum is zero (0), OR

   o  Target.SeqNum - OwnSeqNum > 0 (using 16-bit signed arithmetic), OR

   o  Target.SeqNum == OwnSeqNum AND Target.HopCnt is unknown, OR

   o  Target.SeqNum == OwnSeqNum AND Orig.HopCnt is unknown, OR

   o  Target.SeqNum == OwnSeqNum AND Target.HopCnt (the last know hop
      count value) < Orig.HopCnt (the number of hops traversed by this
      RREQ to reach the target).

   First, the node adds the AddBlk.Target.Address to the RM.  The
   Target.Address is copied from the incoming RREQ AddBlk.Orig.Address.

   Next, the node adds the AddBlk.Orig.Address to the RM and the
   AddTLV.Orig.SeqNum (OwnSeqNum) in an address block TLV.  The
   Orig.Address is copied from the incoming RREQ AddBlk.Target.Address.

   Other AddTLVs for the originator and target SHOULD be set to maximum
   protocol efficiency, but they may be omitted to reduce message size.

   The MsgHdr.HopCnt is set to zero (0).  The MsgHdr.HopLimit is set to
   NET_DIAMETER.

5.3.3.  RM Processing

   When a RM is received the MsgHdr.HopLimit is decremented by one (1)
   and MsgHdr.HopCnt is incremented by one (1).

   For each address in the RM that includes AddTLV-HopCnt information
   except the target and those addresses tagged with the AddTLV-Ignore,



Chakeres & Perkins      Expires December 22, 2006              [Page 16]

Internet-Draft                    DYMO                         June 2006


   the AddTLV-HopCnt information is incremented by one (1).

   Next, this node checks whether its routing table has an entry to the
   AddBlk.Orig.Address using longest-prefix matching [RFC1812].  If a
   route does not exist, the new routing information is considered fresh
   and a new route table entry is created and updated as described in
   Section 5.2.2.  If a routing table entry exists, the new node's
   information is compared with the route table entry following the
   procedure described in Section 5.2.1.  If the new node's routing
   information is considered fresh, the route table entry is updated as
   described in Section 5.2.2.

   If the routing information for the originator is not fresh then this
   RM must be discarded and no further processing of this message is
   performed.

   If the originator's routing information was considered fresh, then
   each address that is not the target and is not flagged with the
   Ignore address-block-tlv SHOULD considered for creating and updating
   routes.  If routing table space is limited, only the routing
   information about the originator is required.  Creating and updating
   routes for other locations can eliminate RREQ for those destination,
   in the event that data needs to be forwarded to these destinations in
   the near future.

   For each of these addresses considered, if the routing table does not
   have a matching route using longest-prefix matching, then a route is
   created and updated as described in Section 5.2.2.  If a routing
   table entry exists, the new node's information is compared with the
   route table entry following the procedure described in Section 5.2.1.
   If the new node's routing information is considered fresh, the route
   table entry is updated as described in Section 5.2.2.

   If the routing information for an Node.Address is not considered
   fresh, then if MUST be removed from the RM.  Removing this
   information ensures that non-fresh information is not propagated.

   If this node is the target AND this RM is a RREQ, this node responds
   with a RREP.  This node creates a new RREP as described in
   Section 5.3.2.

   After processing a RM or creating a new RM, a node MAY append
   additional routing information to the RM, according to the process
   described in Section 5.3.4.  The additional routing information will
   help reduce route discoveries at the expense of increased message
   size.

   If this RM's MsgHdr.HopLimit is greater than one (1), this node is



Chakeres & Perkins      Expires December 22, 2006              [Page 17]

Internet-Draft                    DYMO                         June 2006


   not the target, AND this RM is a RREQ, then the current RM (altered
   by the process defined above) SHOULD be sent to the
   LL_ALL_MANET_ROUTERS IP.DestinationAddress.

   If this RM's MsgHdr.HopLimit is greater than one (1), this node is
   not the target, AND this RM is a RREP, then the new RM SHOULD be sent
   to the Route.NextHopAddress for the RREP's Target.Address.

   If this node is the target, the current RM's information is not
   retransmitted.

5.3.4.  Adding Additional Routing Information to a RM

   Appending routing information will alleviate route discovery attempts
   to the nodes whose information is included, if other nodes use this
   information to update their routing tables.

   Nodes MAY append routing information to a RM, if the node believe
   that this additional routing information will alleviate future RREQ.
   This option should be administratively controlled.

   Prior to appending their own address to a RM, a node MUST increment
   its OwnSeqNum as defined in Section 5.1.2.  Then the node appends its
   IP address (AddBlk-Address) and OwnSeqNum (AddTLV-SeqNum).  It MAY
   also append other information to its address, such as prefix and/or
   that it is an Internet Gateway.  If included, the Node.HopCnt is set
   to one (1).

   Routing information about other nodes MAY also be added.  If this
   information is included, it must be flagged with the
   AddTLV.AdditionalNode.IsOffPath.

   Note an address may appear only once in a message's address blocks.
   Prior to adding any address, the message is searched for existing
   entries.  If an existing entry exists, this entry will have the
   information as this node's routing table information (created or
   updated while processing the RM) and therefore no update is
   necessary.

   In the event a newly appended address already has an AddTLV-Ignore
   flag set, it is removed.

5.4.  Route Discovery

   A node creates a RREQ (described in Section 5.3.1) to discover a
   route to a particular destination (target).  The
   IP.DestinationAddress for this RREQ is set to the
   LL_ALL_MANET_ROUTERS.  Then the RM is transmitted.



Chakeres & Perkins      Expires December 22, 2006              [Page 18]

Internet-Draft                    DYMO                         June 2006


   After issuing a RREQ, the originating node waits for a route to be
   created to the target.  If a route is not found within RREQ_WAIT_TIME
   milliseconds, this node MAY again try to discover a route by issuing
   another RREQ.

   To reduce congestion in a network, repeated attempts at route
   discovery for a particular target SHOULD utilize a binary exponential
   backoff.  The first time a node issues a RREQ, it waits
   RREQ_WAIT_TIME milliseconds for a route to the target.  If a route is
   not found within that time, the node MAY send another RREQ.  If a
   route is not found within two (2) times the current waiting time,
   another RREQ may be sent, up to a total of RREQ_TRIES.  For each
   additional attempt, the waiting time for the previous RREQ is
   multiplied by two (2) so that the waiting time conforms to a binary
   exponential backoff.

   Data packets awaiting a route SHOULD be buffered.  This buffer SHOULD
   have a fixed limited size and discard older data packets first.

   If a route discovery has been attempted RREQ_TRIES times without
   receiving a route to the target, all data packets destined for the
   corresponding target are dropped from the buffer and a Destination
   Unreachable ICMP message SHOULD be delivered to the application.

5.5.  Route Maintenance

   A RERR MUST be issued if a data packet is received and it cannot be
   delivered to the next hop, RERR generation is described in
   Section 5.5.3.  A RERR MAY be issued immediately after detecting a
   broken link of an active route to quickly notify nodes that a link
   break occurred and certain routes are no longer available.  If a
   route has not been used, a RERR SHOULD NOT be generated unless
   generation is expected to reduce future traffic.

5.5.1.  Active Link Monitoring

   Nodes MUST monitor links on active routes that are being used.  This
   may be accomplished by one or several mechanisms.  Including:

   o  Link layer feedback

   o  Neighborhood discovery [I-D.ietf-manet-nhdp]

   o  Route timeout

   o  Other monitoring mechanisms or heuristics

   Upon detecting a link break the detecting node MUST set the



Chakeres & Perkins      Expires December 22, 2006              [Page 19]

Internet-Draft                    DYMO                         June 2006


   Route.ValidTimeout to the current time for all active routes
   utilizing the broken link.

5.5.2.  Updating Route Lifetimes during Packet Forwarding

   To avoid route timeouts for active routes, a node SHOULD update the
   Route.ValidTimeout for the IP.SourceAddress to be the current time +
   ROUTE_VALID_TIMEOUT upon receiving a data packet.  This route's
   Route.Used bit is also set, if implemented.

   To avoid route timeouts for active routes, a node SHOULD update the
   Route.ValidTimeout for the IP.DestinationAddress to be the current
   time + ROUTE_VALID_TIMEOUT upon successfully transmitting a packet to
   the next hop.  This route's Route.Used bit is also set.

5.5.3.  Route Error Generation

   When a data packet is received for a destination without a valid
   routing table entry, a RERR MUST be generated.  When a RREP is being
   transmitted and no active route to the target exists, a RERR MUST be
   generated.  A RERR informs the IP.SourceAddress that the route does
   not exist, is no longer available, or is now invalid.

   In a new RERR, the address of first unreachable node
   (IP.DestinationAddress from the data packet) is inserted.  If a value
   for the unreachable node's SeqNum (AddTLV-SeqNum) is known, it SHOULD
   be placed in the RERR.  The MsgHdr.HopLimit is set to NET_DIAMETER.
   The MsgHdr.HopCnt is set to one (1).

   Additional unreachable nodes that required the same unavailable link
   (routes with the same Route.NextHopAddress and
   Route.NextHopInterface) MAY be added to the RERR.  The SeqNum if know
   SHOULD also be included.  Appending unreachable node information
   notifies each processing node of additional routes that are no longer
   available.

   If SeqNum information is not known or not included all nodes
   processing the routing information will assume their routing
   information associated with the unreachable node is no longer valid.

   The RERR is sent to the IP.DestinationAddress LL_ALL_MANET_ROUTERS.
   Sending the RERR to the LL_ALL_MANET_ROUTERS address notifies the
   maximum number of nodes of the broken link.

   The packet or message that forced generation of this RERR is
   discarded.





Chakeres & Perkins      Expires December 22, 2006              [Page 20]

Internet-Draft                    DYMO                         June 2006


5.5.4.  Route Error Processing

   When a node processes a RERR, it processes each unreachable node
   address.  It sets the Route.ValidTimeout to the current time for each
   Address found using longest prefix matching that meet all of the
   following conditions:

   1.  The Route.NextHopAddress is the same as the RERR
       IP.SourceAddress.

   2.  The Route.NextHopInterface is the same as the interface on which
       the RERR was received.

   3.  The Route.SeqNum is zero (0), unknown, OR the Node.SeqNum is zero
       (0), unknown, OR Node.SeqNum - Route.SeqNum <= 0 (using signed
       16-bit arithmetic).

   Each unreachable node that did not result in a change to
   Route.ValidTimeout is removed from the RERR, since propagation of
   this information will not result in any benefit.  Any information
   associated with the removed addresses is also removed.

   If no unreachable node addresses remain, no further processing is
   performed.

   If this RERR's MsgHdr.HopLimit is greater than one (1) and at least
   one unreachable node address remains in the RERR, then the RERR is
   sent to the IP.DestinationAddress LL_ALL_MANET_ROUTERS.

   Addresses marked with AddTLV-Ignore should remain in the RERR.

5.6.  General DYMO Packet and Message Processing

5.6.1.  Receiving Packets

   When a packet is received, its PktTLV are first examined.  Next each
   message is examined and processed in order.

   Each message's headers are first examined.  Next, the MsgTLV are
   examined.  Finally, each message is processed according to its
   MsgHdr.type.

5.6.2.  Processing Unknown Message and TLV Types

   To allow future extensions, DYMO uses bits from the semantics fields
   of PktTLV, Message, MsgTLV, and AddTLV [I-D.ietf-manet-packetbb].
   Note [I-D.ietf-manet-packetbb] does not currently support this
   functionality.



Chakeres & Perkins      Expires December 22, 2006              [Page 21]

Internet-Draft                    DYMO                         June 2006


   The semantic bits have the following names and characteristics for
   nodes that do not understand the type.

   Remove
      If the Semantics.Remove-bit is set, this information SHOULD be
      removed from the message.

   Discard
      If the Semantics.Discard-bit is set, this message SHOULD not be
      processed further and it should not be propagated.  In the case of
      PktTLVs if the Semantics.Discard-bit is set, no messages from the
      packet should be processed or propagated.

5.7.  Network Addresses

   Any node MAY advertise a network address by using a Prefix tlv
   [I-D.ietf-manet-packetbb].  Any nodes (other than the advertising
   node) within the advertised Prefix SHOULD NOT participate in the
   MANET and these nodes MUST be reachable by forwarding packets to the
   node advertising connectivity.  For example, A.B.C.1 with a prefix
   length of 24 indicates all nodes with the matching A.B.C.X are
   reachable through the node with address A.B.C.1.

   The meaning of the Prefix field is altered for theroute to an
   Internet gateway; Route.IsInternetGateway is one (1).  If the route
   refers to an Internet gateway, its Prefix in association with the IP
   address indicates that all nodes outside that subnet are reachable
   via the Internet gateway node.  For example, a route to a Internet
   gateway with IP address A.B.C.1 and a prefix of 24 indicates that all
   nodes with an IP address NOT matching A.B.C.X are reachable via this
   node.

5.8.  Simple Internet Attachment and Gatewaying

   Simple Internet attachment consists of a network of MANET nodes
   connected to the Internet via a single Internet gateway node.  The
   gateway is responsible for responding to RREQs for targets outside
   its configured MANET subnet, as well as delivering packets to
   destinations outside the MANET.












Chakeres & Perkins      Expires December 22, 2006              [Page 22]

Internet-Draft                    DYMO                         June 2006


         /--------------------------\
        /          Internet          \
        \                            /
         \------------+-------------/
         MANET Subnet | A.B.C.X
                +-----+-----+
                |   MANET   |
         /------|  Internet |------\
        /       |  Gateway  |       \
       /        |  A.B.C.1  |        \
       |        +-----------+        |
       |            MANET            |
       |                             |
       | +------------+              |
       | | MANET Node |              |
       | |  A.B.C.2   |              |
       | +------------+              |
       |              +------------+ |
       |              | MANET Node | |
       |              |   A.B.C.3  | |
       \              +------------+ /
        \                           /
         \-------------------------/

   Figure 3: Simple Internet Attachament Example

   MANET nodes wishing to be reachable from nodes in the Internet MUST
   have IP addresses within the gateway's configured and advertised
   MANET subnet.  Given a node with a globally routeable address or
   care-of address handled by the gateway, the gateway is responsible
   for routing and forwarding packets received from the Internet
   destined for nodes inside its MANET subnet.

   Since many nodes may commonly wish to communicate with the gateway,
   the gateway SHOULD indicate to nodes that it is a gateway by using
   the gateway tlv in any RM transmitted.  The Internet Gateway tlv
   indicates to nodes in the MANET that the Node.Address is attached to
   the Internet and is capable of routing data packets to all nodes
   outside of the configured MANET subnet, defined by the Node.Address
   and Node.Prefix fields.

5.9.  Multiple Interfaces

   It is likely that DYMO will be used with multiple wireless
   interfaces; therefore, the particular interface over which packets
   arrive must be known whenever a packet is received.  Whenever a new
   route is created, the interface through which the Route.Address can
   be reached is also recorded in the route table entry.



Chakeres & Perkins      Expires December 22, 2006              [Page 23]

Internet-Draft                    DYMO                         June 2006


   When multiple interfaces are available, a node transmitting a packet
   with IP.DestinationAddress set to LL_ALL_MANET_ROUTERS SHOULD send
   the packet on all interfaces that have been configured for DYMO
   operation.

5.10.  Packet Generation Limits

   To avoid congestion, a node SHOULD NOT transmit more than RATE_LIMIT
   control messages per second.  RREQ packets SHOULD be discarded before
   RREP or RERR packets.


6.  Configuration Parameters

                        Suggested Parameter Values

           +------------------------+-------------------------+
           |          Name          |          Value          |
           +------------------------+-------------------------+
           |      NET_DIAMETER      |            10           |
           |       RATE_LIMIT       |            10           |
           |   ROUTE_VALID_TIMEOUT  |    5000 milliseconds    |
           |  ROUTE_DELETE_TIMEOUT  | 5 * ROUTE_VALID_TIMEOUT |
           |   ROUTE_DELETE_PERIOD  | 6 * ROUTE_VALID_TIMEOUT |
           |  ROUTE_RREQ_WAIT_TIME  |    1000 milliseconds    |
           |       RREQ_TRIES       |            3            |
           +------------------------+-------------------------+

                                  Table 1

   These suggested values work well for small and medium well connected
   networks with infrequence topology changes.  For larger networks or
   networks with frequent topology changes the default DYMO parameters
   should be adjusted using either experimentally determined values or
   dynamic adaptation.  For example, in networks with infrequent
   topology changes ROUTE_VALID_TIMEOUT may be set to a much larger
   value.

   It is assumed that all nodes in the network share the same parameter
   settings.  Different parameter values for ROUTE_VALID_TIMEOUT or
   ROUTE_DELETE_TIMEOUT in addition to arbitrary packet delays may
   result in frequent route breaks or in extreme cases routing loops.


7.  IANA Considerations

   DYMO requires a UDP port number to carry protocol packets - TBD.
   DYMO also requires the link-local multicast address



Chakeres & Perkins      Expires December 22, 2006              [Page 24]

Internet-Draft                    DYMO                         June 2006


   LL_ALL_MANET_ROUTERS; IPv4 TBD, IPv6 TBD.

   This section also specifies several messages types, message tlv-
   types, and address tlv-types.

   Future types will be allocated using standard actions as described in
   [RFC2434].

7.1.  DYMO Message Type Specification

   The following address block TLV.

                            DYMO Message Types

                   +------------------------+----------+
                   |          Name          |   Type   |
                   +------------------------+----------+
                   |  Route Request (RREQ)  | 10 - TBD |
                   |   Route Reply (RREP)   | 11 - TBD |
                   |   Route Error (RERR)   | 12 - TBD |
                   +------------------------+----------+

                                  Table 2

7.2.  Packet TLV Type Specification

                             Packet TLV Types

   +-------------------+------+--------+-------------------------------+
   |        Name       | Type | Length | Value                         |
   +-------------------+------+--------+-------------------------------+
   |  Unicast Response |  TBD |  10 -  | Indicates to the processing   |
   |      Request      |      |   TBD  | node that the previous hop    |
   |                   |      |        | (IP.SourceAddress) expects a  |
   |                   |      |        | unicast message within        |
   |                   |      |        | UNICAST_MESSAGE_SENT_TIMEOUT. |
   |                   |      |        | Any unicast packet will serve |
   |                   |      |        | this purpose, and it MAY be   |
   |                   |      |        | an ICMP REPLY message.  If a  |
   |                   |      |        | message is not sent, then the |
   |                   |      |        | previous hop may assume that  |
   |                   |      |        | the link is unidirectional    |
   |                   |      |        | and may blacklist this node.  |
   +-------------------+------+--------+-------------------------------+

                                  Table 3





Chakeres & Perkins      Expires December 22, 2006              [Page 25]

Internet-Draft                    DYMO                         June 2006


7.3.  Address Block TLV Specification

                 Address Block TLV Specification Overview

   +----------------------+------+--------+----------------------------+
   |         Name         | Type | Length | Value                      |
   +----------------------+------+--------+----------------------------+
   |      DYMOSeqNum      | 10 - |   16   | The DYMO sequence num      |
   |                      |  TBD |  bits  | associated with this       |
   |                      |      |        | address.  The sequence     |
   |                      |      |        | number may be the last     |
   |                      |      |        | known sequence number.     |
   |       HopCount       | 11 - | 8 bits | The number of hops         |
   |                      |  TBD |        | traversed by the           |
   |                      |      |        | information associated     |
   |                      |      |        | with this address.         |
   |   IsInternetGateway  | 12 - | 0 bits | Usde to indicate that this |
   |                      |  TBD |        | node is an Internet        |
   |                      |      |        | Gateway                    |
   |     IsOriginator     | 13 - | 0 bits | Used to indicate that this |
   |                      |  TBD |        | node is the Originator of  |
   |                      |      |        | the RM.                    |
   |       IsTarget       | 14 - | 0 bits | Used to indicate this node |
   |                      |  TBD |        | is the target of the DYMO  |
   |                      |      |        | message                    |
   |        Ignore        | 15 - |    0   | Used to indicate that this |
   |                      |  TBD |        | addresses should not be    |
   |                      |      |        | processed normally;        |
   |                      |      |        | instead it should be       |
   |                      |      |        | ignored.                   |
   +----------------------+------+--------+----------------------------+

                                  Table 4


8.  Security Considerations

   Currently, DYMO does not specify any special security measures.
   Routing protocols, however, are prime targets for impersonation
   attacks.  In networks where the node membership is not known, it is
   difficult to determine the occurrence of impersonation attacks, and
   security prevention techniques are difficult at best.  However, when
   the network membership is known and there is a danger of such
   attacks, DYMO messages must be protected by the use of authentication
   techniques, such as those involving generation of unforgeable and
   cryptographically strong message digests or digital signatures.
   While DYMO does not place restrictions on the authentication
   mechanism used for this purpose, IPsec Authentication Message (AH) is



Chakeres & Perkins      Expires December 22, 2006              [Page 26]

Internet-Draft                    DYMO                         June 2006


   an appropriate choice for cases where the nodes share an appropriate
   security association that enables the use of AH.

   In particular, RM messages SHOULD be authenticated to avoid creation
   of spurious routes to a destination.  Otherwise, an attacker could
   masquerade as that destination and maliciously deny service to the
   destination and/or maliciously inspect and consume traffic intended
   for delivery to the destination.  RERR messages, while slightly less
   dangerous, SHOULD be authenticated in order to prevent malicious
   nodes from disrupting active routes between communicating nodes.

   If the mobile nodes in the ad hoc network have pre-established
   security associations, the purposes for which the security
   associations are created should include that of authorizing the
   processing of DYMO control packets.  Given this understanding, the
   mobile nodes should be able to use the same authentication mechanisms
   based on their IP addresses as they would have used otherwise.


9.  Acknowledgments

   DYMO is a descendant of the design of previous MANET reactive
   protocols, especially AODV [RFC3561] and DSR [Johnson96].  Changes to
   previous MANET reactive protocols stem from research and
   implementation experiences.  Thanks to Elizabeth Belding-Royer for
   her long time authorship of DYMO.  Additional thanks to Luke Klein-
   Berndt, Pedro Ruiz, Fransisco Ros, Koojana Kuladinithi, Ramon
   Caceres, and Thomas Clausen for reviewing of DYMO, as well as several
   specification suggestions.


10.  References

10.1.  Normative References

   [RFC1812]  Baker, F., "Requirements for IP Version 4 Routers",
              RFC 1812, June 1995.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2434]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", BCP 26, RFC 2434,
              October 1998.

   [RFC3513]  Hinden, R. and S. Deering, "Internet Protocol Version 6
              (IPv6) Addressing Architecture", RFC 3513, April 2003.




Chakeres & Perkins      Expires December 22, 2006              [Page 27]

Internet-Draft                    DYMO                         June 2006


   [RFC3561]  Perkins, C., Belding-Royer, E., and S. Das, "Ad hoc On-
              Demand Distance Vector (AODV) Routing", RFC 3561,
              July 2003.

10.2.  Informative References

   [I-D.ietf-manet-nhdp]
              Clausen, T., Dearlove, C., and J. Dean, "MANET
              Neighborhood Discovery Protocol", draft-ietf-manet-nhdp-00
              (work in progress), June 2006.

   [I-D.ietf-manet-packetbb]
              Clausen, T., Dearlove, C., Dean, J., and C. Adjih,
              "Generalized MANET Packet/Message Format",
              draft-ietf-manet-packetbb-01 (work in progress),
              June 2006.

   [Johnson96]
              Johnson, D. and D. Maltz, "Dynamic Source Routing (DSR) in
              Ad hoc Networks", In Mobile Computing, Chapter 5, pp. 153-
              181, 1996.

   [Perkins99]
              Perkins, C. and E. Belding-Royer, "Ad hoc On-Demand
              Distance Vector (AODV) Routing", Proceedings of the 2nd
              IEEE Workshop on Mobile            Computing Systems and
              Applications, New Orleans, LA,            pp. 90-100,
              February 1999.























Chakeres & Perkins      Expires December 22, 2006              [Page 28]

Internet-Draft                    DYMO                         June 2006


Authors' Addresses

   Ian Chakeres
   Boeing Phantom Works
   The Boeing Company
   P.O. Box 3707 Mailcode 7L-49
   Seattle, WA  98124-2207
   USA

   Email: ian.chakeres@gmail.com


   Charlie Perkins
   Nokia Research Center
   313 Fairchild Drive
   Mountain View, CA  94043
   USA

   Phone: +1-650-625-2986
   Fax:   +1-650-625-2502
   Email: charlie.perkins@nokia.com






























Chakeres & Perkins      Expires December 22, 2006              [Page 29]

Internet-Draft                    DYMO                         June 2006


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Copyright Statement

   Copyright (C) The Internet Society (2006).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.


Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.




Chakeres & Perkins      Expires December 22, 2006              [Page 30]

