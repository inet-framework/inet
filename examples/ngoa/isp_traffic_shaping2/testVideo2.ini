#
# Copyright (C) 2013 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file is for a test of video traffic generation.
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini

########################################################################
# Network/system settings
########################################################################
*.line_rate = ${lr=100}Mbps	# transmission line rate
network = inet.examples.ngoa.isp_traffic_shaping2.testFtpApps2

[Config Base]
result-dir = results/test/video2
sim-time-limit = 1h
warmup-period = 0.1h	# depends on 'startTime' of applications
repeat = 1
*.N = ${N=1}	# number of ONUs
*.n = ${n=1}	# number of hosts per ONU
### Traffic configuration
**.host[*].numHttpApps = 0
**.server.numHttpSrvs = 0
**.host[*].numFtpApps = 0
**.server.numFtpSrvs = 0
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1
## for 'Silence of The Labms' & 'Star Wars 4' clip
**.host[*].videoApp[*].fps = 30  # frames per second
**.host[*].videoApp[*].numTraceFrames = 53997
**.host[*].videoApp[*].gopSize = 16
**.host[*].videoApp[*].numBFrames = 3
#**.server.videoSrv[*].traceFile = "../../videoTraces/silenceOfTheLambs_verbose"
**.server.videoSrv[*].traceFile = "../../videoTraces/starWars4_verbose"

[Config ShapedBase]
### TBF configurations (at tagged ports toward ODN)
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = 1	# set to number of ONUs
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)

[Config unshaped]
extends = Base
### without traffic shaping

[Config shaped]
extends = Base, ShapedBase
### with traffic shaping
**.olt.mac[0].queue.bucketSize = ${bs=1, 10, 20, 50, 100, 200, 500, 1000}*1000000B
#**.olt.mac[0].queue.meanRate = ${mr=1.8}Mbps	# set to the average rate of video traffic
**.olt.mac[0].queue.meanRate = ${mr=0.5}Mbps	# set to the average rate of video traffic
**.olt.mac[0].queue.peakRate = ${lr}Mbps		# no peak rate control

[Config shapedWithQueue]
extends = shaped
**.frameCapacity = ${qs=100, 200, 500, 1000}	# frame capacity of queues
constraint = ($bs) == 10

[Config shapedWithoutSpreading]
extends = shaped
**.server.videoSrv[*].frameSpreading = false
# **.frameCapacity = ${qs=100, 200, 500, 1000}	# frame capacity of queues
# constraint = ($bs) == 10
