#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of shared access architectures -- like TDM-PONs or
# DOCSIS cable Internet access -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini


########################################################################
### Command environment
########################################################################
#cmdenv-express-mode = true
#cmdenv-performance-display = true	# for monitoring
#cmdenv-status-frequency = 2min	# default is 2s

########################################################################
# Network/system settings
########################################################################
#network = inet.examples.ngoa.isp_traffic_shaping.NgnAccess
network = inet.examples.ngoa.isp_traffic_shaping.NgnAccessWithPerformanceMeters

########################################################################
### NIC (of ONUs, OLT)
########################################################################

########################################################################
### Architecture-Specific Settings
########################################################################
[Config SharedBase]
result-dir = results/Shared
*.N = ${N=16, 64}	# number of ONUs
*.n = ${n=1..10}	# number of hosts per ONU
*.distribution_rate = ${dr=0.1, 1}Gbps	# rate of distribution fiber
**.olt.numSubscribers = ${N}
### TBF configurations
# tagged ports toward ODN
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
**.olt.mac[0].queue.meanRate = ${mr=2, 10, 50}Mbps	# 2Mbps is Digital Britain goal by 2012
**.olt.mac[0].queue.bucketSize = ${bs=1, 10, 100}*1000000B	# 1 MB, 10 MB, 100 MB
**.olt.mac[0].queue.peakRate = ${dr}Gbps
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
constraint = (($mr) >= ($n)*2) && (($mr) <= ($dr)*1000/($N))

########################################################################
### With traffic shaping
########################################################################
[Config nh1_nf1_nv1_tbf]
extends = SharedBase
result-dir = results/Shared/nh1_nf1_nv1_tbf
**.host[*].numHttpApps = 1
**.server.numHttpSrvs = 1
**.host[*].numFtpApps = 1
**.server.numFtpSrvs = 1
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1

[Config N16_nh1_nf1_nv1_tbf]
extends = nh1_nf1_nv1_tbf
result-dir = results/Shared/N16_nh1_nf1_nv1_tbf
constraint = (($mr) >= ($n)*2) && (($mr) <= ($dr)*1000/($N)) && (($N) == 16)

[Config N64_nh1_nf1_nv1_tbf]
extends = nh1_nf1_nv1_tbf
result-dir = results/Shared/N64_nh1_nf1_nv1_tbf
constraint = (($mr) >= ($n)*2) && (($mr) <= ($dr)*1000/($N)) && (($N) == 64)

[Config N64_nh1_nf1_nv1_tbf-test]
extends = nh1_nf1_nv1_tbf
sim-time-limit = 10min
warmup-period = 1min
result-dir = results/Shared/test/nh1_nf1_nv1_tbf-test/N64
**.relayUnit.addressTableSize = 1000
constraint = (($mr) >= ($n)*2) && (($mr) <= ($dr)*1000/($N)) && (($N) == 64)

###
### for FOAN 2012 paper
###
[Config n1_nh1_nf1_nv1_mr2_bs100]
result-dir = results/Shared/n1_nh1_nf1_nv1_mr2_bs100
### Network configurations
*.N = ${N=10, 20, 30..50}
*.n = ${n=1}
*.distribution_rate = ${dr=0.1}Gbps
**.olt.numSubscribers = ${N}
### Apps configurations
**.host[*].numHttpApps = 1
**.server.numHttpSrvs = 1
**.host[*].numFtpApps = 1
**.server.numFtpSrvs = 1
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1
### TBF configurations
# tagged ports toward ODN
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"
**.olt.mac[0].queue.numQueues = ${N}
**.olt.mac[0].queue.meanRate = ${mr=2}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=100}*1000000B
**.olt.mac[0].queue.mtu = 1522B
**.olt.mac[0].queue.peakRate = ${dr}Gbps

[Config n5_nh1_nf1_nv1_mr10]
result-dir = results/Shared/n5_nh1_nf1_nv1_mr10
### Network configurations
*.N = ${N=1..10}
*.n = ${n=5}
*.distribution_rate = ${dr=0.1}Gbps
**.olt.numSubscribers = ${N}
### Apps configurations
**.host[*].numHttpApps = 1
**.server.numHttpSrvs = 1
**.host[*].numFtpApps = 1
**.server.numFtpSrvs = 1
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1
### TBF configurations
# tagged ports toward ODN
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"
**.olt.mac[0].queue.numQueues = ${N}
**.olt.mac[0].queue.meanRate = ${mr=10}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=10, 100}*1000000B
**.olt.mac[0].queue.mtu = 1522B
**.olt.mac[0].queue.peakRate = ${dr}Gbps

# [Config N2_nh1_nf1_nv1_tbf-test]
# extends = nh1_nf1_nv1_tbf
# sim-time-limit = 10min
# warmup-period = 1min
# result-dir = results/Shared/test/N2_nh1_nf1_nv1_tbf-test
# **.frameCapacity = ${qs=10, 100}	# in frames; based on RTT(10ms)*BW(10G) (default is 100)
# **.txQueueLimit = ${qs}				# in frames; based on RTT(10ms)*BW(10G) (default is 100)
# constraint = (($mr) >= ($n)*2) && (($mr) == 10) && (($dr) == 0.1) && (($N) == 2)
