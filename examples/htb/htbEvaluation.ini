# Hierarchical Token Bucket Implementation for OMNeT++ & INET Framework
# Copyright (C) 2021 Marija GajiÄ‡ (NTNU), Marcin Bosk (TUM), Susanna Schwarzmann (TU Berlin), Stanislav Lange (NTNU), and Thomas Zinner (NTNU)
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
[General]
sim-time-limit=250s
num-rngs = 1
seed-0-mt = 5
output-scalar-file-append = false
record-eventlog = false

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

**.tcp.typename = "Tcp"
**.udp.typename = "Udp"


# tcp general settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP

**.tcp.*.*.vector-recording = true
**.host*.app*.*.vector-recording = true
**.server*.app*.*.vector-recording = true
**.vector-recording = false

[Config scenarioUDP1]
description = "HTB Evaluation scenario I"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasUdp = true
*.hostFDO[0].app[*].typename = "UdpSink"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = 1042 + index() # port number to listen on
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

*.hostFDO[0].app[*].startTime =  # time first session begins
*.hostFDO[0].app[*].stopTime = -1s # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasUdp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].destAddresses = "hostFDO[0]"
*.serverFDO.app[*].destPort = 1042 + index()
*.serverFDO.app[*].messageLength = 1465B
*.serverFDO.app[*].sendInterval = uniform(0.1ms, 0.11ms)
*.serverFDO.app[*].packetName = "UDPData"
*.serverFDO.app[*].typename = "UdpBasicApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = -1 # localPort number to listen on
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

*.serverFDO.app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.serverFDO.app[*].stopTime = replaceUnit(10*index()+uniform(100,100.1), "s") # time of finishing sending, negative values mean forever

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario1.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario1.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioUDP2]
description = "HTB Evaluation scenario II"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasUdp = true
*.hostFDO[0].app[*].typename = "UdpSink"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = 1042 + index() # port number to listen on
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

*.hostFDO[0].app[*].startTime =  # time first session begins
*.hostFDO[0].app[*].stopTime = -1s # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasUdp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].destAddresses = "hostFDO[0]"
*.serverFDO.app[*].destPort = 1042 + index()
*.serverFDO.app[*].messageLength = 1465B
*.serverFDO.app[*].sendInterval = uniform(0.1ms, 0.11ms)
*.serverFDO.app[*].packetName = "UDPData"
*.serverFDO.app[*].typename = "UdpBasicApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = -1 # localPort number to listen on
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

*.serverFDO.app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.serverFDO.app[*].stopTime = replaceUnit(10*index()+uniform(100,100.1), "s") # time of finishing sending, negative values mean forever

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioUDP3]
description = "HTB Evaluation scenario II"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 2

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasUdp = true
*.hostFDO[0].app[*].typename = "UdpSink"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = 1042 + index() # port number to listen on
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

*.hostFDO[0].app[*].startTime =  # time first session begins
*.hostFDO[0].app[*].stopTime = -1s # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasUdp = true
*.serverFDO.numApps = 2
*.serverFDO.app[*].destAddresses = "hostFDO[0]"
*.serverFDO.app[*].destPort = 1042 + index()
*.serverFDO.app[*].messageLength = 1465B
*.serverFDO.app[*].sendInterval = replaceUnit(uniform(0.1,0.11), "ms")
*.serverFDO.app[*].packetName = "UDPData"
*.serverFDO.app[*].typename = "UdpBasicApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = -1 # localPort number to listen on
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

*.serverFDO.app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.serverFDO.app[*].stopTime = replaceUnit(10*index()+uniform(100,100.1), "s") # time of finishing sending, negative values mean forever

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 2
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenarioPrio.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 2
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenarioPrio.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043)"

**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioUDP4]
description = "HTB Evaluation scenario II"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasUdp = true
*.hostFDO[0].app[*].typename = "UdpSink"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = 1042 + index() # port number to listen on
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

*.hostFDO[0].app[*].startTime =  # time first session begins
*.hostFDO[0].app[*].stopTime = -1s # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasUdp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].destAddresses = "hostFDO[0]"
*.serverFDO.app[*].destPort = 1042 + index()
*.serverFDO.app[*].messageLength = 1465B
*.serverFDO.app[*].sendInterval = replaceUnit(uniform(0.1,0.11), "ms")
*.serverFDO.app[*].packetName = "UDPData"
*.serverFDO.app[*].typename = "UdpBasicApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = -1 # localPort number to listen on
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

*.serverFDO.app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.serverFDO.app[*].stopTime = replaceUnit(10*index()+uniform(100,100.1), "s") # time of finishing sending, negative values mean forever

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2Prio.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2Prio.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"

**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioTCP1]
description = "HTB Evaluation scenario I"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasTcp = true
*.hostFDO[0].app[*].typename = "TcpBasicClientApp"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = -1 # port number to listen on
*.hostFDO[0].app[*].connectAddress = "serverFDO" # server address (may be symbolic)
*.hostFDO[0].app[*].connectPort = 1042 + index() # port number to connect to
*.hostFDO[0].app[*].numRequestsPerSession = 1 # number of requests sent per session
*.hostFDO[0].app[*].requestLength = 800B # length of a request
*.hostFDO[0].app[*].replyLength = 200MiB # length of a reply
*.hostFDO[0].app[*].thinkTime = 0.01s # time gap between requests
*.hostFDO[0].app[*].idleInterval = 1000s # time gap between sessions
*.hostFDO[0].app[*].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation
*.hostFDO[0].app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.hostFDO[0].app[*].stopTime = replaceUnit(10*index()+uniform(71,71.1), "s") # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasTcp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].typename = "TcpGenericServerApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = 1042 + index() # localPort number to listen on
*.serverFDO.app[*].replyDelay = 0s
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario1.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario1.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioTCP2]
description = "HTB Evaluation scenario II"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasTcp = true
*.hostFDO[0].app[*].typename = "TcpBasicClientApp"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = -1 # port number to listen on
*.hostFDO[0].app[*].connectAddress = "serverFDO" # server address (may be symbolic)
*.hostFDO[0].app[*].connectPort = 1042 + index() # port number to connect to
*.hostFDO[0].app[*].numRequestsPerSession = 1 # number of requests sent per session
*.hostFDO[0].app[*].requestLength = 800B # length of a request
*.hostFDO[0].app[*].replyLength = 200MiB # length of a reply
*.hostFDO[0].app[*].thinkTime = 0.01s # time gap between requests
*.hostFDO[0].app[*].idleInterval = 1000s # time gap between sessions
*.hostFDO[0].app[*].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation
*.hostFDO[0].app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.hostFDO[0].app[*].stopTime = replaceUnit(10*index()+uniform(71,71.1), "s") # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasTcp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].typename = "TcpGenericServerApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = 1042 + index() # localPort number to listen on
*.serverFDO.app[*].replyDelay = 0s
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioTCP3]
description = "HTB Evaluation scenario II"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 2

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasTcp = true
*.hostFDO[0].app[*].typename = "TcpBasicClientApp"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = -1 # port number to listen on
*.hostFDO[0].app[*].connectAddress = "serverFDO" # server address (may be symbolic)
*.hostFDO[0].app[*].connectPort = 1042 + index() # port number to connect to
*.hostFDO[0].app[*].numRequestsPerSession = 1 # number of requests sent per session
*.hostFDO[0].app[*].requestLength = 800B # length of a request
*.hostFDO[0].app[*].replyLength = 200MiB # length of a reply
*.hostFDO[0].app[*].thinkTime = 0.01s # time gap between requests
*.hostFDO[0].app[*].idleInterval = 1000s # time gap between sessions
*.hostFDO[0].app[*].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation
*.hostFDO[0].app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.hostFDO[0].app[*].stopTime = replaceUnit(10*index()+uniform(71,71.1), "s") # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasTcp = true
*.serverFDO.numApps = 2
*.serverFDO.app[*].typename = "TcpGenericServerApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = 1042 + index() # localPort number to listen on
*.serverFDO.app[*].replyDelay = 0s
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 2
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenarioPrio.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 2
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenarioPrio.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms

[Config scenarioTCP4]
description = "HTB Evaluation scenario I"
network = htbEvaluation
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 5

*.configurator.config = xmldoc("configs/baseQoS/router_htbEvalI.xml")

# File download client
*.hostFDO[0].hasTcp = true
*.hostFDO[0].app[*].typename = "TcpBasicClientApp"
*.hostFDO[0].app[*].localAddress = ""
*.hostFDO[0].app[*].localPort = -1 # port number to listen on
*.hostFDO[0].app[*].connectAddress = "serverFDO" # server address (may be symbolic)
*.hostFDO[0].app[*].connectPort = 1042 + index() # port number to connect to
*.hostFDO[0].app[*].numRequestsPerSession = 1 # number of requests sent per session
*.hostFDO[0].app[*].requestLength = 800B # length of a request
*.hostFDO[0].app[*].replyLength = 200MiB # length of a reply
*.hostFDO[0].app[*].thinkTime = 0.01s # time gap between requests
*.hostFDO[0].app[*].idleInterval = 1000s # time gap between sessions
*.hostFDO[0].app[*].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
*.hostFDO[0].app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[0].app[*].stopOperationTimeout = 2s # timeout value for lifecycle stop operation
*.hostFDO[0].app[*].startTime = replaceUnit(10*index()+uniform(1,1.1), "s") # time first session begins
*.hostFDO[0].app[*].stopTime = replaceUnit(10*index()+uniform(71,71.1), "s") # time of finishing sending, negative values mean forever

# File download server
*.serverFDO.hasTcp = true
*.serverFDO.numApps = 5
*.serverFDO.app[*].typename = "TcpGenericServerApp"
*.serverFDO.app[*].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[*].localPort = 1042 + index() # localPort number to listen on
*.serverFDO.app[*].replyDelay = 0s
*.serverFDO.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[*].stopOperationTimeout  = 2s

*.nFDO =  1

*.hostFDO[0].ppp[0].ppp.queue.typename = "HtbQueue"
*.hostFDO[0].ppp[0].ppp.queue.numQueues = 5
*.hostFDO[0].ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.hostFDO[0].ppp[0].ppp.queue.htbHysterisis = false
*.hostFDO[0].ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2Prio.xml")
*.hostFDO[0].ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.hostFDO[0].ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetFilters="*;*;*;*;*"
*.hostFDO[0].ppp[0].ppp.queue.classifier.packetDataFilters ="destinationPort(1042);destinationPort(1043);destinationPort(1044);destinationPort(1045);destinationPort(1046)"


*.serverFDO*.ppp[0].ppp.queue.typename = "HtbQueue"
*.serverFDO*.ppp[0].ppp.queue.numQueues = 5
*.serverFDO*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.serverFDO*.ppp[0].ppp.queue.htbHysterisis = false
*.serverFDO*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("tree_scenario2Prio.xml")
*.serverFDO*.ppp[0].ppp.queue.queue[*].packetCapacity = 500
*.serverFDO*.ppp[0].ppp.queue.classifier.defaultGateIndex = 1
*.serverFDO*.ppp[0].ppp.queue.classifier.packetFilters ="*;*;*;*;*"
*.serverFDO*.ppp[0].ppp.queue.classifier.packetDataFilters ="sourcePort(1042);sourcePort(1043);sourcePort(1044);sourcePort(1045);sourcePort(1046)"


**.connFIX0.datarate = 50Mbps
**.connFIX0.delay = 1ms