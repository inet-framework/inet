[General]
**.testing = false
**.testTimeout = 0s
network = multihomed

*.sctp_client.hasSctp = true
*.sctp_server.hasSctp = true

# udp app (off)

# sctp apps
**.sctp_client.numApps = 1
**.sctp_client.app[*].localAddress = "10.1.1.1 10.2.1.1"

**.sctp_client.app[0].requestLength=1400
**.sctp_client.app[0].typename = "SctpClient"
**.sctp_client.app[*].connectAddress = "10.1.3.1"
**.sctp_client.app[*].primaryPath = "10.1.3.1"
**.sctp_client.app[0].connectPort = 6666
**.sctp_client.app[0].startTime = truncnormal(1s,0.2s)
**.sctp_client.app[0].stopTime = truncnormal(60s,10s)
**.sctp_client.app[0].numRequestsPerSession = 100000000
**.sctp_client.app[0].queueSize = 100
**.sctp_client.app[0].outboundStreams = 1

**.sctp_server.numApps = 1
**.sctp_server.app[0].typename = "SctpServer"
**.sctp_server.app[*].localAddress = "10.1.3.1 10.2.3.1"
**.sctp_server.app[0].localPort = 6666
**.sctp_server.app[*].readingInterval = 0s
**.sctp_server.app[*].bytesToPush = 0
**.sctp_server.app[*].queueSize = 0 #Size of sendQueue before App is notified to send new data
**.sctp_server.app[*].numPacketsToSendPerClient = 0
**.sctp_server.app[*].numPacketsToReceivePerClient = 0
**.sctp_server.app[*].outboundStreams = 1

**.sctp_client.ipv4.routingTable.routingFile = "multi_client.mrt"
**.sctp_server.ipv4.routingTable.routingFile = "multi_server.mrt"
**.router1.ipv4.routingTable.routingFile = "multi_router1.mrt"
**.router2.ipv4.routingTable.routingFile = "multi_router2.mrt"

**.cmtCCVariant                   = "cmt"   # Activate CMT
**.cmtCUCVariant                  = "pseudoCumAckV2"
**.cmtUseSFR                      = true
**.cmtUseDAC                      = true
**.cmtUseFRC                      = true

# ping app (off)

# sctp settings
**.sctp.sctpAlgorithmClass = "SctpAlg"
**.sctp.fragPoint = 1400
**.sctp.numGapReports = 3
**.sctp.rtoMin = 1s #default 1
**.sctp.rtoMax = 60s #default 60
**.sctp.rtoInitial = 3s   #default 3
**.sctp.maxBurst = 4
**.sctp.assocMaxRetrans = 10
**.sctp.pathMaxRetrans = 5 #default 5
**.sctp.maxInitRetrans = 8
**.sctp.hbInterval = 30s #default 30
**.sctp.nagleEnabled = true
**.sctp.naglePoint = 1468
**.sctp.osbWithHeader = false  #default false
**.sctp.padding = false
**.sctp.reactivatePrimaryPath = false
**.sctp.sackPeriod = 0.2s
**.sctp.sackFrequency = 2
**.sctp.validCookieLifetime = 10s
**.sctp.fragment = false
**.sctp.arwnd = 65535
**.sctp.auth = false
**.sctp.addIP = false
**.sctp.addTime = 0s
**.sctp.addAddress = ""
**.sctp.addIp.typename = "0"
**.sctp.chunks = ""
**.sctp.packetDrop = false
**.sctp.RTXMethod=0  # Always after 3 Sacks

**.sctp.crcMode = "computed"
**.ipv4.**.crcMode = "computed"

**.sctp_server.numPcapRecorders = 1
**.sctp_server.pcapRecorder[0].pcapFile = "results/server1.pcap"
**.sctp_client.numPcapRecorders = 1
**.sctp_client.pcapRecorder[0].pcapFile = "results/client1.pcap"

**.sctp_server.pcapRecorder[0].pcapNetwork = 204
**.sctp_client.pcapRecorder[0].pcapNetwork = 204

# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 65535 #14336  # 14*mss
#**.tcp.sendQueueClass = "TCPVirtualDataSendQueue" #"TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPVirtualDataRcvQueue" #"TCPMsgBasedRcvQueue"
#**.tcp.tcpAlgorithmClass="DummyTCPAlg"
**.tcp.tcpAlgorithmClass = "TcpReno"
**.tcp.recordStats = true



# NIC configuration
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 100  # in routers
**.ppp[*].ppp.mtu = 1500 B


**.ext[*].filterString = "sctp"
**.ext[*].device = eth0


**.vector-recording = false


