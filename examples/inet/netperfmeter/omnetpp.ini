# * --------------------------------------------------------------------------
# *
# *     //====//  //===== <===//===>  //====//
# *    //        //          //      //    //    SCTP Optimization Project
# *   //=====   //          //      //====//   ==============================
# *        //  //          //      //           University of Duisburg-Essen
# *  =====//  //=====     //      //
# *
# * --------------------------------------------------------------------------
# *
# *   Copyright (C) 2009-2015 by Thomas Dreibholz
# *
# *   SPDX-License-Identifier: LGPL-3.0-or-later
# *
# *   Contact: dreibh@iem.uni-due.de

[General]
network             = testNetwork
sim-time-limit      = 100s
rng-class           = cMersenneTwister
seed-0-mt           = 1
output-scalar-file  = scalars.sca
output-vector-file  = vectors.vec
sim-time-limit      = 3600s 1ms
simtime-resolution  = 10ns
#abstract-config = true (requires omnet 7)

testNetwork.*Main[*].hasSctp = true

testNetwork.**.vector-recording           = false
testNetwork.**.vector-recording-intervals = 0..3600

# ===== General Scenario Settings ======================
testNetwork.systems = 5

# ===== Network QoS Settings ===========================
testNetwork.westernCoreRouter.ppp[0].ppp.mtu             = 1500 B
testNetwork.westernCoreRouter.ppp[0].queue.typename           = "inet.examples.inet.netperfmeter.REDQueue"
testNetwork.westernCoreRouter.ppp[0].queue.red.wq        = 0.002
testNetwork.westernCoreRouter.ppp[0].queue.red.minth     = 30
testNetwork.westernCoreRouter.ppp[0].queue.red.maxth     = 90
testNetwork.westernCoreRouter.ppp[0].queue.red.maxp      = 0.1
testNetwork.westernCoreRouter.ppp[0].queue.red.pkrate    = 8333.333
testNetwork.westernCoreRouter.pppg$o[0].channel.datarate = 1e+07 bps
testNetwork.westernCoreRouter.pppg$o[0].channel.delay    = 10 ms
testNetwork.westernCoreRouter.pppg$o[0].channel.per      = 0
testNetwork.westernCoreRouter.pppg$o[0].channel.ber      = 0
testNetwork.easternCoreRouter.ppp[0].ppp.mtu             = 1500 B
testNetwork.easternCoreRouter.ppp[0].queue.typename           = "inet.examples.inet.netperfmeter.REDQueue"
testNetwork.easternCoreRouter.ppp[0].queue.red.wq        = 0.002
testNetwork.easternCoreRouter.ppp[0].queue.red.minth     = 30
testNetwork.easternCoreRouter.ppp[0].queue.red.maxth     = 90
testNetwork.easternCoreRouter.ppp[0].queue.red.maxp      = 0.1
testNetwork.easternCoreRouter.ppp[0].queue.red.pkrate    = 8333.333
testNetwork.easternCoreRouter.pppg$o[0].channel.datarate = 1e+07 bps
testNetwork.easternCoreRouter.pppg$o[0].channel.delay    = 10 ms
testNetwork.easternCoreRouter.pppg$o[0].channel.per      = 0
testNetwork.easternCoreRouter.pppg$o[0].channel.ber      = 0

# ----- Common Settings --------------------------------
testNetwork.*.ppp[*].ppp.mtu = 1500 B

testNetwork.**.checksumMode = "computed"

# ===== Application Parameters ===========================
# ----- NetPerfMeter Active Node--------------------------
testNetwork.client*[*].app[*].activeMode      = true
testNetwork.client*[*].app[*].connectTime     = 0.001 s
testNetwork.client*[*].app[*].startTime       = uniform(0.9s,1.1s)
testNetwork.client*[*].app[*].resetTime       = 19 s
testNetwork.client*[*].app[*].stopTime        = 60 s
testNetwork.client*[*].app[*].queueSize       = 5000000 B
testNetwork.client*[*].app[*].unordered       = 1
testNetwork.client*[*].app[*].unreliable      = 0
testNetwork.client*[*].app[*].outboundStreams = 1
testNetwork.client*[*].app[*].maxMsgSize      = 1452 B
testNetwork.client*[*].app[*].frameRate       = 0 Hz
testNetwork.client*[*].app[*].frameSize       = 1452 B
testNetwork.client*[*].app[*].frameRateString = ""
testNetwork.client*[*].app[*].frameSizeString = ""
testNetwork.client*[*].app[*].onTime          = -1s
testNetwork.client*[*].app[*].offTime         = -1s
testNetwork.client*[*].numPcapRecorders                   = 1   # *** Enable pcap dump here! ***
testNetwork.client*[*].pcapRecorder[0].pcapFile           = ${N1=fullPath()}+".pcap"

# ----- NetPerfMeter Passive Node ------------------------
testNetwork.server*[*].app[*].activeMode        = false
testNetwork.server*[*].app[*].connectTime       = 0.001 s
testNetwork.server*[*].app[*].startTime         = uniform(0.9s,1.1s)
testNetwork.server*[*].app[*].resetTime         = 19 s
testNetwork.server*[*].app[*].stopTime          = 60 s
testNetwork.server*[*].app[*].queueSize         = 5000000 B
testNetwork.server*[*].app[*].unordered         = 1
testNetwork.server*[*].app[*].unreliable        = 0
testNetwork.server*[*].app[*].maxInboundStreams = 16
testNetwork.server*[*].app[*].frameRate         = 0 Hz
testNetwork.server*[*].app[*].frameSize         = 0 B
testNetwork.server*[*].app[*].frameRateString   = ""
testNetwork.server*[*].app[*].frameSizeString   = ""
testNetwork.server*[*].app[*].maxMsgSize        = 1452 B
testNetwork.server*[*].numPcapRecorders                     = 1   # *** Enable pcap dump here! ***
testNetwork.server*[*].pcapRecorder[0].pcapFile             = ${N2=fullPath()}+".pcap"

# ----- NetPerfMeter Connections -------------------------
testNetwork.clientMain[*].numApps              = 1
testNetwork.clientMain[*].app[*].typename = "NetPerfMeter"
testNetwork.serverMain[*].numApps              = 1
testNetwork.serverMain[*].app[*].typename = "NetPerfMeter"

testNetwork.clientMain[*].app[*].localPort     = 20000+${alphaMainClientNetPerfMeterID=ancestorIndex(0)}
testNetwork.clientMain[*].app[*].remotePort    = 8000+${alphaMainClientNetPerfMeterID}
testNetwork.clientMain[*].app[*].remoteAddress = "testNetwork.serverMain[" + string(${alphaMainClientID=ancestorIndex(1)}) + "]%ppp0"
testNetwork.clientMain[*].app[*].primaryPath   = "testNetwork.serverMain[" + string(${alphaMainClientID}) + "]%ppp0"
testNetwork.serverMain[*].app[*].localPort     = 8000+${alphaMainServerNetPerfMeterID=ancestorIndex(0)}

# ===== SCTP Parameters ==================================
testNetwork.*.sctp.arwnd                 = 5000000
testNetwork.*.sctp.hbInterval            = 30 s
testNetwork.*.sctp.enableHeartbeats      = true

# ===== TCP Parameters ===================================
testNetwork.*.tcp.typename = "Tcp"
testNetwork.*.tcp.advertisedWindow       = 5000000
testNetwork.*.tcp.mss                    = 1452
testNetwork.*.tcp.tcpAlgorithmClass      = "TcpReno"
testNetwork.*.tcp.sackSupport            = true
testNetwork.*.tcp.timestampSupport       = true
testNetwork.*.tcp.windowScalingSupport   = true
testNetwork.*.tcp.delayedAcksEnabled     = true
testNetwork.*.tcp.limitedTransmitEnabled = true
testNetwork.*.tcp.increasedIWEnabled     = false

[Config TraceFile-Udp]
testNetwork.systems = 1
testNetwork.client*[*].app[*].traceFile = "trace111.trace"
testNetwork.*[*].app[*].stopTime        = 600s
testNetwork.*[*].app[*].protocol        = "UDP"

[Config TraceFile-Tcp]
testNetwork.systems = 1
testNetwork.client*[*].app[*].traceFile = "trace111.trace"
testNetwork.*[*].app[*].stopTime        = 600s
testNetwork.*[*].app[*].protocol        = "TCP"

[Config TraceFile-Sctp]
testNetwork.systems = 1
testNetwork.client*[*].app[*].traceFile = "trace111.trace"
testNetwork.*[*].app[*].stopTime        = 600s
testNetwork.*[*].app[*].protocol        = "SCTP"

[Config SCTP-with-OLIA]
sim-time-limit = 30s
testNetwork.systems = 1
testNetwork.*[*].app[*].protocol = "SCTP"
testNetwork.*.sctp.arwnd                       = 500000
testNetwork.*.sctp.cmtSendAllVariant           = "smallestLastTransmission"
testNetwork.*.sctp.cmtRetransmissionVariant    = "normal"
testNetwork.*.sctp.cmtBufferSplitVariant       = "bothSides"
testNetwork.*.sctp.cmtBufferSplittingUsesOSB   = true
testNetwork.*.sctp.cmtCUCVariant               = "pseudoCumAckV2"
testNetwork.*.sctp.cmtUseSFR                   = true
testNetwork.*.sctp.cmtUseDAC                   = true
testNetwork.*.sctp.cmtUseFRC                   = true
testNetwork.*.sctp.cmtCCVariant                = "olia"
testNetwork.*.sctp.cmtCCPathGroups             = ""
testNetwork.*.sctp.cmtSackPath                 = "smallestSRTT"
testNetwork.*.sctp.nrSack                      = true
testNetwork.*.sctp.disableReneging             = false
testNetwork.*.sctp.gapReportLimit              = 100000000
testNetwork.*.sctp.gapListOptimizationVariant  = "none"
testNetwork.*.sctp.smartOverfullSACKHandling   = true
testNetwork.*.sctp.strictCwndBooking           = false
testNetwork.*.sctp.osbWithHeader               = false
testNetwork.*.sctp.sackNow                     = true
testNetwork.*.sctp.packetDrop                  = false
testNetwork.*.sctp.highSpeedCC                 = false
testNetwork.*.sctp.maxBurst                    = 4
testNetwork.*.sctp.maxBurstVariant             = "maxBurst"
testNetwork.*.sctp.initialWindow               = 0
testNetwork.*.sctp.cmtSmartT3Reset             = true
testNetwork.*.sctp.cmtSmartReneging            = true
testNetwork.*.sctp.cmtSmartFastRTX             = true
testNetwork.*.sctp.cmtSlowPathRTTUpdate        = true
testNetwork.*.sctp.cmtMovedChunksReduceCwnd    = true
testNetwork.*.sctp.movedChunkFastRTXFactor     = 2
testNetwork.*.sctp.streamsToPaths              = ""
testNetwork.*.sctp.RTXMethod                   = 0   # "once"
testNetwork.*.sctp.ssModule                    = 0   # "roundRobin"
