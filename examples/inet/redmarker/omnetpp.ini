[General]
network = inet.examples.inet.redmarker.RedMarkerNetwork


# Queue setting
**.routerCore*.eth[*].mac.queue.typename       = "RedDropperQueue"
**.routerCore*.eth[*].mac.queue.red.useEcn     = true
**.routerCore*.eth[*].mac.queue.red.wq         = 1 #0.002 #0.8
**.routerCore*.eth[*].mac.queue.red.minth      = 3 #"5"
**.routerCore*.eth[*].mac.queue.red.maxth      = 4
**.routerCore*.eth[*].mac.queue.red.maxp       = 1
**.routerCore*.eth[0].mac.queue.red.pkrate     = 8333.3333
**.routerCore*.eth[1].mac.queue.red.pkrate     = 833.3333
**.routerCore*.eth[*].mac.queue.red.mark       = 1
**.routerCore*.eth[*].mac.queue.red.recStart   = 0
**.routerCore*.eth[*].mac.queue.red.frameQueueCapacity = 24 #


[Config TcpSender1]

**.arp.typename = "GlobalArp"

**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = false                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = true                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.advertisedWindow = 5000000
**.tcp.recordStats = true
**.tcp.mss = 1460

**.tcp.ecnWillingness = true   # This activates ECN (ECT - ECN Capable Transport) 

**.sender1.numApps = 1
**.receiver1.numApps = 1

**.sender1.app[0].typename = "TcpSessionApp"
**.sender1.app[0].active = true
**.sender1.app[0].localPort = -1
**.sender1.app[0].sendBytes = 5MiB
**.sender1.app[0].sendScript = ""
**.sender1.app[0].tClose = -1s
**.sender1.app[0].connectPort = 1000
**.sender1.app[0].connectAddress = "receiver1"

**.sender1.app[0].tOpen = 10s

**.receiver1.app[0].typename = "TcpSinkApp"
**.receiver1.app[0].localPort = 1000

