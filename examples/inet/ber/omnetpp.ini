[General]
network = ber

warnings = true
sim-time-limit = 60.0s

cmdenv-event-banners = true   # for normal (non-express) mode only


#
# Network specific settings
#

# set inet_addr, Mask, MTU ( = 1500), default route
#**.client.routingTable.routingFile = "client.mrt"
#**.server.routingTable.routingFile = "server.mrt"

# ip settings
**.forwarding = false

# Arp settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

# NIC settings
**.ppp[*].queue.typename = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 100    # packets

# thruput measurement settings
**.startTime = 0s     # start time
**.batchSize = 50     # number of packets in a batch
**.maxInterval = 1s   # max length of measurement interval (measurement ends
                      # if either batchsize or maxinterval is reached, whichever
                      # is reached first)

# tcp apps - client
**.client.numApps = 1
**.client.app[*].typename = "TcpSessionApp"  # FTP
**.client.app[*].sendBytes = 100MiB
**.client.app[*].active = true
#**.client.app[*].localAddress = "client"
**.client.app[*].localPort = 10020
**.client.app[*].connectAddress = "server"
**.client.app[*].connectPort = 10021
**.client.app[*].tOpen = 0s
**.client.app[*].tSend = 0s
**.client.app[*].tClose = 0s
**.client.app[*].sendScript = ""

# tcp apps - server
**.server.numApps = 1
**.server.app[*].typename = "TcpSinkApp"
#**.server.app[*].localAddress = "server"
**.server.app[*].localPort = 10021

# tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled

# RNG/seed settings
repeat=3
seed-set=${runnumber}
# BER (bit error rate)
**.n = ${ber=0, 1e-7, 2e-7, 4e-7, 6e-7, 8e-7, 1e-6, 2e-6, 4e-6, 6e-6, 8e-6}

#
# Config specific settings
#

[Config ber-sack-experiment]
description = "ber-sack-experiment"
**.tcp.sackSupport = ${sack=true, false}

[Config ber-flavour-experiment]
description = "ber-flavour-experiment"
**.tcp.tcpAlgorithmClass = ${flavour = "TcpReno", "TcpNewReno" }
