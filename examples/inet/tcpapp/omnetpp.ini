[General]
network = TcpAppExample
#abstract-config = true (requires omnet 7)

*.*.app[0].**.initialProductionOffset = 0s
*.*.numApps = 1

*.client.app[0].typename = "TcpClientApp"
*.client.app[0].io.connectAddress = "server"
*.client.app[0].io.connectPort = 1000
*.client.app[0].source.productionInterval = uniform(0s, 20s)
*.client.app[0].source.packetLength = intuniform(100B, 200B)
*.client.app[0].source.packetData = intuniform(0, 1)

*.server.app[0].typename = "TcpServerApp"
*.server.app[0].listener.localPort = 1000

[Config BurstyTraffic]
sim-time-limit = 100s
*.server.app[0].connection[*].source.typename = "BurstyPacketProducer"
*.server.app[0].connection[*].source.normalProducer.productionInterval = 1s
*.server.app[0].connection[*].source.normalProducer.packetLength = 100B
*.server.app[0].connection[*].source.burstProducer.productionInterval = 0.1s
*.server.app[0].connection[*].source.burstProducer.packetLength = 1000B
*.server.app[0].connection[*].source.scheduler.waitIntervals = "40 4"
*.server.app[0].connection[*].source.scheduler.transitionProbabilities = "0 1 1 0"

[Config RequestResponseTraffic]
sim-time-limit = 100s
*.server.app[0].listener.serverConnectionModuleType = "inet.applications.tcpapp.TcpRequestResponseApp"
*.server.app[0].connection[*].sink.tokenGenerator[0].numTokensPerPacket = intuniform(1, 5)
*.server.app[0].connection[*].source.provider[0].providingInterval = uniform(0s, 2s)
*.server.app[0].connection[*].source.provider[0].packetLength = intuniform(100B, 1000B)
*.server.app[0].connection[*].sink.tokenGenerator[1].numTokensPerPacket = intuniform(10, 20)
*.server.app[0].connection[*].source.provider[1].providingInterval = uniform(0s, 0.2s)
*.server.app[0].connection[*].source.provider[1].packetLength = intuniform(1000B, 10000B)
