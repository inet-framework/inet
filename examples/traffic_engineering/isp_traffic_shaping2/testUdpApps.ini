#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file is for a test of UDP appllications.
#

[General]
### [General] section providing configurations common to all network
total-stack = 32MiB
network = inet.examples.traffic_engineering.isp_traffic_shaping2.testUdpApps
#debug-on-errors = true
sim-time-limit = 10min
warmup-period = 0min	# depends on 'startTime' of applications and video trace duration (~10 min. for Terminator 2)
repeat = 1
seed-set = ${repetition}	# for consistent results over different configurations


########################################################################
### Results recording
########################################################################
result-dir = results/test/udpApps
**.scalar-recording = true
**.vector-recording = false
**.olt.ethg$o[*].channel.throughput.result-recording-modes = all	# for throughput measurement
**.httpApp[*].*.result-recording-modes = all
**.ftpApp[*].*.result-recording-modes = all
**.delayMeter.*.result-recording-modes = all

########################################################################
### Command environment
########################################################################
cmdenv-express-mode = true
cmdenv-performance-display = true	# for monitoring
cmdenv-status-frequency = 2min	# default is 2s
# cmdenv-output-file = results/test/udpApps/Test.out

########################################################################
### Tk environment
########################################################################
tkenv-plugin-path = ../../../etc/plugins

########################################################################
### Network/system settings
########################################################################
#*.backbone_rate = ${br=100}Gbps	# rate of backbone link
*.backbone_rate = ${br=100}Mbps	# rate of backbone link

########################################################################
### Performance measurement modules (BurstMeter and DelayMeter) 
########################################################################
**.burstMeter.maxIFG = 5	# maximum IFGs allowed between two consecutive Ethernet frames of a same burst

########################################################################
### Worst-case traffic (WCT) settings
########################################################################
*.numWcts = ${numWcts=1}	# number of WCT source/sink paris
###
### sources at the network side
###
**.wct_source[*].udpApp.localPort = 7000
**.wct_source[*].udpApp.destPort = 8000
**.wct_source[*].udpApp.startTime = uniform(1s, 5s)
**.wct_source[*].udpApp.lineRate = ${br}Gbps
###
### sinks at the user side
###
**.wct_sink[*].numUdpApps = 1
**.wct_sink[*].udpAppType = "UDPSink"
**.wct_sink[*].udpApp[*].localPort = 8000

########################################################################
### IP-related
########################################################################
**.arp.cacheTimeout = 4h	# default value for Cisco devices (6h for Juniper; 10min for Windows; 1min for Linux)
					  		# INET default is 120s

########################################################################
### NIC (of server, hosts, and Ethernet switches)
########################################################################
**.olt.relayUnit.addressTableSize = 2000	# >> maximum of 960 streams for N=64, n=5, and 3 apps/host
**.accessSwitch.relayUnit.addressTableSize = 2000	# >> maximum of 960 streams for N=64, n=5, and 3 apps/host
**.frameCapacity = 10000	# in frames; based on RTT(10ms)*BW(10G) (default is 100)
**.txQueueLimit = 10000		# in frames; based on RTT(10ms)*BW(10G) (default is 100)
**.fifoCapacity = 10000

###
### Burst Meter
###
**.burstMeter.maxIFG = 1	# maximum IFGs allowed between two consecutive Ethernet frames of a same burst
###
### TBF configurations (at tagged ports toward ODN)
###
**.olt.mac[0].queueType = "DropTailRRVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = ${numWcts}
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
**.olt.mac[0].queue.peakRate = ${pr=100}Mbps
###
### UDP applications at wct sources
###
**.wct_source[*].numUdpApps = 1
**.wct_source[*].udpAppType = "UDPBurstApp"
**.wct_source[*].udpApp.localPort = 7000
**.wct_source[*].udpApp.destPort = 8000
**.wct_source[*].udpApp.startTime = 1s
**.wct_source[*].udpApp.lineRate = 100Mbps
###
### UDP sinks at wct sinks
###
**.wct_sink[*].numUdpApps = 1
**.wct_sink[*].udpAppType = "UDPSink"
**.wct_sink[*].udpApp[*].localPort = 8000


[Config Base]
### TBF
**.olt.mac[0].queue.meanRate = ${mr=10}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=100}*1000000B	# 100 MB
### WCT generator
**.wct_source[*].udpApp.messageLength = (1472.0/1522.0)*(${pr})*(${bs})/((${pr})-(${mr}))*1000000B
**.wct_source[*].udpApp.messagePeriod = 8*(${bs})*(${pr})/((${mr})*((${pr})-(${mr})))*1s

[Config Test1]
### TBF
**.olt.mac[0].queue.meanRate = ${mr=10}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=1}*1000000B	# 1 MB
### WCT generator
**.wct_source[*].udpApp.messageLength = ((1472.0/1522.0)*(${pr})*(${bs})/((${pr})-(${mr}))*1000000+10000)*1B
**.wct_source[*].udpApp.messagePeriod = 8*(${bs})*(${pr})/((${mr})*((${pr})-(${mr})))*1s

[Config Test2]
sim-time-limit = 1.5s
warmup-period = 1s
### TBF
**.olt.mac[0].queue.meanRate = ${mr=2}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=7610}B	# 5*mtu
### WCT generator
#**.wct_source[*].udpApp.messageLength = (1472.0/1522.0)*(${pr})*(${bs})/((${pr})-(${mr}))*1B
**.wct_source[*].udpApp.messageLength = 7300B
**.wct_source[*].udpApp.messagePeriod = 8*(${bs})*(${pr})/((${mr})*((${pr})-(${mr})))*1s

[Config Test3]
extends = Test1
### Scheduling
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
# # for debugging
# sim-time-limit = 1min
# cmdenv-express-mode = false
# cmdenv-event-banner-details = true
# cmdenv-event-banners = true
# cmdenv-message-trace = true

[Config Test4]
sim-time-limit = 15min
### TBF
**.olt.mac[0].queue.meanRate = ${mr=2}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=1}*1000000B	# 1 MB
### WCT generator
**.wct_source[*].udpApp.messageLength = 450*1000B
**.wct_source[*].udpApp.messagePeriod = 4s
**.wct_source[*].udpApp.startTime = 1s

[Config Test5]
extends = Test4
### Scheduling
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue

[Config Test6]
### TBF
**.olt.mac[0].queue.meanRate = ${mr=10}Mbps
**.olt.mac[0].queue.bucketSize = ${bs=1}*1000000B	# 1 MB
### WCT generator
#**.wct_source[*].udpApp.messageLength = ((1472.0/1522.0)*(${pr})*(${bs})/((${pr})-(${mr})))*10000001B
#**.wct_source[*].udpApp.messageLength = ${ml=1111100, 1111110, 1111120, 1111130, 1111140, 1111150, 1111160, 1111170}*1B
**.wct_source[*].udpApp.messageLength = ${ml=500000..700000 step 100000}*1B
#**.wct_source[*].udpApp.messagePeriod = 8*(${bs})*(${pr})/((${mr})*((${pr})-(${mr})))*1s
#**.wct_source[*].udpApp.messagePeriod = ${mp=0.95, 1, 1.05, 1.1, 1.15}*1s
**.wct_source[*].udpApp.messagePeriod = ${mp=0.9..1.5 step 0.1}*1s
