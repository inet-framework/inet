#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of shared access architectures -- like TDM-PONs or
# DOCSIS cable Internet access -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini


########################################################################
### Command environment
########################################################################
#cmdenv-express-mode = true
#cmdenv-performance-display = true	# for monitoring
#cmdenv-status-frequency = 2min	# default is 2s

########################################################################
# Network/system settings
########################################################################

########################################################################
### NIC (of ONUs, OLT)
########################################################################

########################################################################
### Architecture-Specific Settings
########################################################################
[Config SharedBase]
network = inet.examples.traffic_engineering.traffic_control.NgnAccess
result-dir = results/Shared
*.N = ${N=2, 5, 10, 20, 50, 100}	# number of ONUs
#*.N = ${N=10, 20}	# number of ONUs
*.n = ${n=1..10}	# number of hosts per ONU
#*.distribution_rate = ${dr=0.1, 1, 10}Gbps	# rate of distribution fiber
*.distribution_rate = ${dr=0.1, 1}Gbps	# rate of distribution fiber
*.backbone_rate = ${br=100}Gbps	# rate of backbone link
**.olt.ethg$o[*].channel.throughput.result-recording-modes = all	# for throughput measurement
**.olt.numSubscribers = ${N}
**.httpApp[*].*.result-recording-modes = all
**.delayMeter.*.result-recording-modes = all
**.host[*].videoApp[*].numTraceFrames = 53997	# for 'Silence of the labms'
**.host[*].videoApp[*].gopSize = 16	# for 'Silence of the labms'
**.host[*].videoApp[*].numBFrames = 3	# for 'Silence of the labms'
**.server.videoSrv[*].traceFile = "../../videoTraces/silenceOfTheLambs_verbose"
### TBF configurations
# tagged ports toward ODN
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
#**.olt.mac[0].queue.bucketSize = ${bs=3044, 7610, 15220, 30440, 76100, 152200}B	# 2, 5, 10, 20, 50, 100 MTUs (taking into account VLAN tag)
**.olt.mac[0].queue.bucketSize = ${bs=3044, 15220, 152200}B	# 2, 10, 100 MTUs (taking into account VLAN tag)
#**.olt.mac[0].queue.meanRate = ${mr=5, 10, 20, 50, 100}Mbps
**.olt.mac[0].queue.meanRate = ${mr=10, 20, 50, 100}Mbps
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
**.olt.mac[0].queue.peakRate = ${dr}Gbps

########################################################################
### With traffic shaping
########################################################################
[Config nh1_nf5_nv1_tbf]
extends = SharedBase
result-dir = results/Shared/nh1_nf5_nv1_tbf
constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100)

[Config nh1_nf5_nv1_tbf-test]
extends = nh1_nf5_nv1_tbf
sim-time-limit = 2min
warmup-period = 0min
result-dir = results/Shared/test/nh1_nf5_nv1_tbf-test

[Config N2_nh1_nf5_nv1_tbf-test]
extends = nh1_nf5_nv1_tbf
sim-time-limit = 10min
warmup-period = 1min
result-dir = results/Shared/test/N2_nh1_nf5_nv1_tbf-test
**.frameCapacity = ${qs=10, 100}	# in frames; based on RTT(10ms)*BW(10G) (default is 100)
**.txQueueLimit = ${qs}				# in frames; based on RTT(10ms)*BW(10G) (default is 100)
constraint = (($mr) >= ($n)*2) && (($mr) == 10) && (($dr) == 0.1) && (($N) == 2)

[Config N5_nh1_nf5_nv1_tbf-test]
extends = nh1_nf5_nv1_tbf
sim-time-limit = 10min
warmup-period = 1min
result-dir = results/Shared/test/N5_nh1_nf5_nv1_tbf-test
constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($N) == 5)

[Config N10_nh1_nf5_nv1_tbf-test]
extends = nh1_nf5_nv1_tbf
# sim-time-limit = 10min
# warmup-period = 1min
result-dir = results/Shared/test/N10_nh1_nf5_nv1_tbf-test
**.frameCapacity = ${qs=10, 100}	# in frames; based on RTT(10ms)*BW(10G) (default is 100)
**.txQueueLimit = ${qs}				# in frames; based on RTT(10ms)*BW(10G) (default is 100)
constraint = (($mr) >= ($n)*2) && (($mr) == 10) && (($dr) == 0.1) && (($N) == 10)
