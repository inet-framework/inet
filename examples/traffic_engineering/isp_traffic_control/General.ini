#
# Copyright (C) 2013 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides [General] section -- configurations common
# to all architectures -- for the comparison study of next-generation
# optical access architectures.
#
# It provides configurations for a host with the following traffic models:
# - TCP: Based on FTP model to emulate greedy source.
# - UDP: UDP model for periodic or on-off traffic source.
#


[General]
total-stack = 32MiB
network = inet.examples.traffic_engineering.isp_traffic_control.NgnAccessWithDLThruputMeter
#debug-on-errors = true
sim-time-limit = 1.1min
warmup-period = 0.1min
repeat = 10
seed-set = ${repetition}	# for consistent results over different configurations


########################################################################
### Results recording
########################################################################
result-dir = results  # included as default; to be changed in architecture-specific ini
**.scalar-recording = true
**.thruputMeter.measurementInterval = 200ms		# throughput measurement interval (default is 1s)
**.thruputMeter.*.vector-recording = true
#**.olt.mac[0].queue.*.vector-recording = true	# for estimated rates of CSFQ++ algorithm
#**.tcp.**.vector-recording = true
**.vector-recording = false
**.olt.ethg$o[*].channel.throughput.result-recording-modes = all	# for throughput measurement
**.ftpApp[*].*.result-recording-modes = all

########################################################################
### Command environment
########################################################################
cmdenv-express-mode = true
cmdenv-performance-display = true	# for monitoring
cmdenv-status-frequency = 2min	# default is 2s

########################################################################
### Tk environment
########################################################################
tkenv-plugin-path = ../../../etc/plugins

########################################################################
### Network/system settings
########################################################################
#*.N = 16  # number of ONUs (subscribers)
*.n = ${n=1}  # number of hosts (users) per ONU (subscriber)
### the unit of every rate should be Mbps for consistency
#*.uni_rate = ${ur=100}Mbps	# rate of UNI
#*.uni_delay = ${ud=0}s  # delay at UNIs
#*.distribution_rate = ${dr=${ur}}Mbps	# rate of distribution fiber
*.backbone_rate = ${br=10000}Mbps		# rate of backbone link (10Gbps)
#*.backbone_delay = ${bd=4.7}ms  # delay in backbone network (giving total RTT of 10 ms including access)

########################################################################
### Host (user)
########################################################################
###
### TCP applications (based on FTP model)
###
**.host*[*].ftpAppType = "FtpClientApp"
#**.host*[*].ftpApp[*].active = true
**.host*[*].ftpApp[*].address = ""
#**.host*[*].ftpApp[*].port = -1
**.host*[*].ftpApp[*].connectAddress = "server"
**.host*[*].ftpApp[*].connectPort = 20
#**.host*[*].ftpApp[*].startTime = uniform(1s, 5s)
#**.host*[*].ftpApp[*].fileSize = trunc_lognormal(14.45B, 0.35B, 0B, 5e6B)
**.host*[*].ftpApp[*].requestLength = uniform(0B, 700B)
**.host*[*].ftpApp[*].idleInterval = exponential(166.667s)  # time gap between sessions ("Reading Time" in [3]); lambda = 0.006
**.host*[*].ftpApp[*].reconnectInterval = 30s
###
### UDP applications
###
**.host*[*].udpAppType = "UDPSink"
**.host*[*].udpApp[*].localPort = 9000

########################################################################
### Server settings
########################################################################
###
### TCP applications
###
**.server.ftpSrvType = "TCPGenericSrvApp"
**.server.ftpSrv[*].address = ""
**.server.ftpSrv[*].port = 20
**.server.ftpSrv[*].replyDelay = 0
###
### UDP applications
###
**.server.udpAppType = "UDPBurstApp"
**.server.udpApp[*].localPort = 40
**.server.udpApp[*].destPort = 9000

########################################################################
### TCP parameters
########################################################################
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.mss = 1460	# optimal for Ethernet interface whose MTU is 1500 bytes

########################################################################
### IP-related
########################################################################
**.arp.cacheTimeout = 4h	# default value for Cisco devices (6h for Juniper; 10min for Windows; 1min for Linux)
					  		# INET default is 120s

########################################################################
### NIC (of server, hosts, and Ethernet switches)
########################################################################
**.olt.relayUnit.addressTableSize = 2000	# >> maximum of 960 streams for N=64, n=5, and 3 apps/host
**.accessSwitch.relayUnit.addressTableSize = 2000	# >> maximum of 960 streams for N=64, n=5, and 3 apps/host
**.frameCapacity = 10000	# in frames; based on RTT(10ms)*BW(10G) (default is 100)
**.txQueueLimit = 10000		# in frames; based on RTT(10ms)*BW(10G) (default is 100)
