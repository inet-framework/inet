#
# This ini file runs Telnet sessions on the NClients network, using
# TelnetApp+TcpGenericServerApp.
#
# See also fileTransfer.ini and basicHTTP.ini for different kinds of
# network traffic.
#

[General]

# number of client computers
*.n = 1

[Config TCP_APP]

# tcp apps
**.cli[*].numApps = 1
**.cli[*].app[*].typename = "TelnetApp"
**.cli[0].app[0].localPort = -1
**.cli[1].app[0].localPort = -1
**.cli[*].app[0].connectAddress = "srv"
#**.cli[*].app[0].connectAddress="bbbb::"
**.cli[0].app[0].connectPort = 1000 #same destination port numbers
**.cli[1].app[0].connectPort = 1000 #same destination port numbers

**.cli[*].app[0].startTime = uniform(10s,15s)
**.cli[*].app[0].numCommands = int(exponential(1))
**.cli[*].app[0].commandLength = intWithUnit(exponential(1B))
**.cli[*].app[0].keyPressDelay = exponential(0.1s)
**.cli[*].app[0].commandOutputLength = intWithUnit(exponential(40B))
**.cli[*].app[0].thinkTime = truncnormal(2s,3s)
**.cli[*].app[0].idleInterval = truncnormal(3600s,1200s)
**.cli[*].app[0].reconnectInterval = 30s

**.srv.numApps = 1
**.srv.app[*].typename = "TcpGenericServerApp"
**.srv.app[0].localAddress = ""
**.srv.app[0].localPort = 1000
**.srv.app[0].replyDelay = 0s
#**.srv.app[1].localAddress=""  #created another one but unused for now
#**.srv.app[1].localPort=3168
#**.srv.app[1].replyDelay = 0s

# tcp settings
**.app[*].dataTransferMode = "object"

[Config SCTP_APP]
description = SCTP apps via IPv6

*.cli[*].hasSctp = true
*.srv.hasSctp = true

**.cli[*].numApps = 1
**.cli[*].app[*].typename = "SctpClient"
**.cli[*].app[0].localAddress = ""
**.cli[*].app[0].connectAddress = "srv"
**.cli[*].app[0].connectPort = 1000
**.cli[*].app[0].startTime = 5s + exponential(4s) # The startTime must be later than IPv6 needs
                                                 # to initialize the routing (at least 2 seconds)
**.cli[*].app[0].numRequestsPerSession = 2
**.cli[*].app[0].requestLength = 1000
**.cli[*].app[0].thinkTime = exponential(1s)
**.cli[*].app[0].queueSize = 0

**.pcapRecorder[0].moduleNamePatterns="ppp[*]"
**.cli[0].numPcapRecorders=1
**.cli[0].pcapRecorder[0].pcapFile="results/client.pcap"

**.srv.numApps = 1
**.srv.app[*].typename = "SctpServer"
**.srv.app[*].localAddress = ""
**.srv.app[0].localPort = 1000
**.srv.app[0].numPacketsToReceivePerClient = 2

**.crcMode = "computed"
**.srv.numPcapRecorders=1
**.srv.pcapRecorder[0].pcapFile="results/srv.pcap"

[Config PPP]
description = "PPP network"
extends = TCP_APP
network = NClientsPPP

# Ppp NIC configuration
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

[Config ETH]
description = "ETH network"
extends = TCP_APP
network = NClientsEth

# Ethernet NIC configuration
**.eth[*].queue.typename = "EtherQosQueue"
**.eth[*].queue.dataQueue.typename = "DropTailQueue" # in routers
**.eth[*].queue.dataQueue.frameCapacity = 10  # in routers

#**.eth[*].mac.txrate = 10Mbps
**.eth[*].mac.duplexMode = true

[Config PPP_SCTP]
description = "SCTP apps via IPv6 over PPP"
extends = SCTP_APP
network = NClientsPPP

# PPP NIC configuration
**.ppp[*].queue.typename = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers
