#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of shared access architectures -- like TDM-PONs or
# DOCSIS cable Internet access -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini

########################################################################
### Results recording
########################################################################
**.host[0].videoApp[0].**.vector-recording = true
**.vector-recording = false

########################################################################
### Command environment
########################################################################
#cmdenv-express-mode = true
#cmdenv-performance-display = true	# for monitoring
#cmdenv-status-frequency = 2min	# default is 2s

########################################################################
# Network/system settings
########################################################################
network = inet.examples.scfr.xkalp.XKALPTest

########################################################################
### NIC (of ONUs, OLT)
########################################################################

########################################################################
### Architecture-Specific Settings
########################################################################
[Config VideoBase]
result-dir = results/Video
repeat = 1
### Network configurations
*.N = ${N=16}	# number of ONUs
*.n = ${n=1}	# number of hosts per ONU
**.olt.numSubscribers = ${N}
### TBF configurations (at tagged ports toward ODN; values below means no traffic shaping)
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
**.olt.mac[0].queue.bucketSize = 1522B
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
### traffic configuration
**.host[*].numHttpApps = 1
**.server.numHttpSrvs = 1
**.host[*].numFtpApps = 1
**.server.numFtpSrvs = 1
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1
### clock frequencies
**.server.videoSrv[*].clockFrequency = 90018Hz		# +200 ppm deviation from nominal frequency of 90 kHz
#**.host[*].videoApp[*].clockFrequency = 89982Hz	# -200 ppm deviation from nominal frequency of 90 kHz
**.host[*].videoApp[*].clockFrequency = 15996800Hz	# -200 ppm deviation from nominal frequency of 16 MHz

[Config VideoBaseLowerRate]
### combined input rate is about 2 Mb/s (based on 'Silence of the Lambs' video clip)
extends = VideoBase
**.server.videoSrv[*].traceFile = "../../videoTraces/silenceOfTheLambs_verbose"
### Network configurations
*.distribution_rate = ${dr=100}Mbps	# distribution rate
*.uni_rate = ${ur=100}Mbps	# UNI rate
### TBF configurations
**.olt.mac[0].queue.meanRate = ${dr}Mbps
**.olt.mac[0].queue.peakRate = ${dr}Mbps

[Config VideoBaseHigherRate]
### combined input rate is about 30 Mb/s (based on 'Silence of the Lambs' video clip)
extends = VideoBase
**.server.videoSrv[*].traceFile = "../../videoTraces/terminator2_verbose"
### Network configurations
*.distribution_rate = ${dr=1}Gbps	# distribution rate
*.uni_rate = ${ur=1}Gbps	# UNI rate
### TBF configurations (note the change of bps unit from Mbps to Gbps)
**.olt.mac[0].queue.meanRate = ${dr}Gbps
**.olt.mac[0].queue.peakRate = ${dr}Gbps

###
### for IEEE Communications Letters paper
###
[Config N16_n1_vlow]
description = "for SCFR of lower-rate video with 16 ONUs and 1 host per ONU"
extends = VideoBaseLowerRate
sqlite.sqlite-vector-database = "results/Video/N16_n1_vlow-vector.db"
sim-time-limit = 1h
warmup-period = 30min	# depends on 'startTime' of applications and video trace duration (~30 min. for Silence of The Labms)
**.host[0].videoApp[*].startTime = 30min + uniform(1s, 5s)
**.host[*].videoApp[*].startTime = uniform(1s, 5s)

[Config N16_n1_vlow_onoff]
description = "for SCFR of on-off-type lower-rate video with 16 ONUs and 1 host per ONU"
extends = N16_n1_vlow
sqlite.sqlite-vector-database = "results/Video/N16_n1_vlow_onoff-vector.db"
**.server.videoSrvType = "UDPVideoStreamSvrWithTrace3"
**.server.videoSrv[*].frameSpreading = false	# turn off spreading of frames over a period
**.server.videoSrv[*].r = 50					# roughly equivalent to source rate of 20 Mb/s with payload of 1460 B

[Config N16_n1_vlow_debug]
description = "for SCFR of lower-rate video with 16 ONUs and 1 host per ONU"
extends = VideoBaseLowerRate
result-dir = results/Video
sim-time-limit = 1h
warmup-period = 30min	# depends on 'startTime' of applications and video trace duration (~30 min. for Silence of The Labms)
**.host[0].videoApp[*].startTime = 30min + uniform(1s, 5s)
**.host[*].videoApp[*].startTime = uniform(1s, 5s)

[Config N16_n1_vhigh]
description = "for SCFR of higher-rate video with 16 ONUs and 1 host per ONU"
extends = VideoBaseHigherRate
sqlite.sqlite-vector-database = "results/Video/N16_n1_vhigh-vector.db"
sim-time-limit = 20min
warmup-period = 10min	# depends on 'startTime' of applications and video trace duration (~10 min. for Terminator 2)
**.host[0].videoApp[*].startTime = 10min + uniform(1s, 5s)
**.host[*].videoApp[*].startTime = uniform(1s, 5s)

[Config N16_n1_vhigh_onoff]
description = "for SCFR of on-off-type higher-rate video with 16 ONUs and 1 host per ONU"
extends = N16_n1_vhigh
sqlite.sqlite-vector-database = "results/Video/N16_n1_vhigh_onoff-vector.db"
**.server.videoSrvType = "UDPVideoStreamSvrWithTrace3"
**.server.videoSrv[*].frameSpreading = false	# turn off spreading of frames over a period
**.server.videoSrv[*].r = 10					# roughly equivalent to source rate of 100 Mb/s with payload of 1460 B

[Config N16_n1_vhigh_debug]
description = "for SCFR of higher-rate video with 16 ONUs and 1 host per ONU"
extends = VideoBaseHigherRate
result-dir = results/Video
#sqlite.sqlite-vector-database = "results/Video/N16_n1_vhigh-vector.db"
sim-time-limit = 20min
warmup-period = 10min	# depends on 'startTime' of applications and video trace duration (~10 min. for Terminator 2)
**.host[0].videoApp[*].startTime = 10min + uniform(1s, 5s)
**.host[*].videoApp[*].startTime = uniform(1s, 5s)

###
### for test
###
[Config test]
description = "test simulation with SQLite output with nominal source clock frequency of 90 kHz"
result-dir = results/test
#sqlite.sqlite-scalar-database = "results/test/test-scalar.db"
sqlite.sqlite-vector-database = "results/test/test-vector.db"
sim-time-limit = 20min
warmup-period = 2min	# depends on 'startTime' of applications and video trace duration (~10 min. for Terminator 2)
repeat = 1
### Network configurations
*.N = ${N=1}	# number of ONUs
*.n = ${n=1}	# number of hosts per ONU
**.olt.numSubscribers = ${N}
*.uni_rate = ${ur=100}Mbps	# UNI rate
*.distribution_rate = ${dr=100}Mbps	# distribution rate
### TBF configurations (at tagged ports toward ODN; values below means no traffic shaping)
**.olt.mac[0].queue.meanRate = ${dr}Mbps
**.olt.mac[0].queue.peakRate = ${dr}Mbps
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
**.olt.mac[0].queue.bucketSize = 1522B
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
### Traffic configuration
**.host[*].numHttpApps = 0
**.server.numHttpSrvs = 0
**.host[*].numFtpApps = 0
**.server.numFtpSrvs = 0
**.host[*].numVideoApps = 1
**.server.numVideoSrvs = 1
**.server.videoSrv[*].traceFile = "../../videoTraces/silenceOfTheLambs_verbose"
### clock frequencies
**.server.videoSrv[*].clockFrequency = 90018Hz		# +200 ppm deviation from the nominal value
**.host[*].videoApp[*].clockFrequency = 15996800Hz	# -200 ppm deviation from the nominal value

[Config test2]
description = "test simulation with SQLite output with nominal clock frequency of 900 kHz"
extends = test
sqlite.sqlite-vector-database = "results/test/test2-vector.db"
**.server.videoSrv[*].clockFrequency = 900180Hz		# +200 ppm deviation from the nominal value
**.host[*].videoApp[*].clockFrequency = 899820Hz	# -200 ppm deviation from the nominal value
